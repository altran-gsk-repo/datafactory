{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Nome do Workspace",
			"defaultValue": "gsk-synapse"
		},
		"Arquivos_Em_Parquet_3_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'Arquivos_Em_Parquet_3'"
		},
		"AzureBlobStorageSynapse_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'AzureBlobStorageSynapse'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'accountKey' de 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorageBlobSynapse_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'AzureDataLakeStorageBlobSynapse'"
		},
		"CompressArquivoSave_accountKey": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'accountKey' de 'CompressArquivoSave'"
		},
		"FileServerDouglas_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'FileServerDouglas'"
		},
		"FileServerDouglasNew_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'FileServerDouglasNew'"
		},
		"FileServerGSK_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'FileServerGSK'"
		},
		"Listar_Arquivos_Txt_3_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'Listar_Arquivos_Txt_3'"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'password' de 'Sftp1'"
		},
		"SqlServerConfigCarga_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'SqlServerConfigCarga'"
		},
		"SqlServerGSK_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'SqlServerGSK'"
		},
		"SqlServerLocalDouglasDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'SqlServerLocalDouglasDB'"
		},
		"SqlServerLocalDouglasDev_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'SqlServerLocalDouglasDev'"
		},
		"TeradataVeevaGSK_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'TeradataVeevaGSK'"
		},
		"gsk-synapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Cadeia de caracteres segura para 'connectionString' de 'gsk-synapse-WorkspaceDefaultSqlServer'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gsksynapseaccount.dfs.core.windows.net"
		},
		"CompressArquivoSave_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gsksynapseaccount.dfs.core.windows.net"
		},
		"FileServerDouglas_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "D:\\Documentos"
		},
		"FileServerDouglas_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "DESKTOP-FVENMUR\\dougl"
		},
		"FileServerDouglasNew_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\dougl\\OneDrive\\GSK_FLAT_FILES"
		},
		"FileServerDouglasNew_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "DESKTOP-FVENMUR\\dougl"
		},
		"FileServerGSK_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\dqa99106\\OneDrive - GSK\\Documents\\"
		},
		"FileServerGSK_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "WMSERVICE\\dqa99106"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "sftp01.close-upinternational.com.br"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "bra_gsk"
		},
		"gsk-synapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://gsksynapseaccount.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/1 - Extract - Email 1-1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dim_painel_medico",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings"
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CRM_CICLO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CRM_CICLO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MES",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CICLO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CICLO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CRM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CRM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MEDICO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MEDICO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPOCONTATO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TIPOCONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GRUPOPROMOCIONAL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GRUPOPROMOCIONAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIALIDADE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ESPECIALIDADE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOGRADOURO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LOGRADOURO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COMPLEMENTO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "COMPLEMENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BAIRRO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BAIRRO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CIDADE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CIDADE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UF",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UF",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CEP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CEP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BRICK",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BRICK",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TELEFONEMEDICO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TELEFONEMEDICO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CELULARMEDICO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CELULARMEDICO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL_1_1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL_1_1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_FUNCIONARIO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ROW_ID_FUNCIONARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QTD_VISITA_PLANEJADA_PAINEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QTD_VISITA_PLANEJADA_PAINEL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QTD_VISITA_REALIZADA_PAINEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "QTD_VISITA_REALIZADA_PAINEL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIALIDADE_02",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ESPECIALIDADE_02",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIALIDADE_03",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ESPECIALIDADE_03",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VP_PROX",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VP_PROX",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS_MEDICO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATUS_MEDICO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL_1_1_CONSENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL_1_1_CONSENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NETWORK_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NETWORK_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_GIGYA_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RX_GIGYA_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VEEVA_ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "VEEVA_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL_MASS",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL_MASS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL_MASS_CONSENT",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EMAIL_MASS_CONSENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CYCLE_PLAN",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CYCLE_PLAN",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MERCADO",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MERCADO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUTO_PAINEL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PRODUTO_PAINEL",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FileSystemGSK",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "dim_painel_medico.zip"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_1",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "dim_painel_medico.zip",
									"pasta": "dash.email1to1"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Extract"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/FileSystemGSK')]",
				"[concat(variables('workspaceId'), '/datasets/Arquivo_Em_TxT_1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/1 - Transform  - Email 1-1 e KPI')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lista_Arquivos",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filtra_Arquivos_ZIP",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lista_Arquivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista_Arquivos').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Para_Cada_ZIP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtra_Arquivos_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtra_Arquivos_ZIP').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Transforma_ZIP_to_TXT",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.email1to1",
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings"
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ListarArquivosComprimidos_1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "arquivo_txt_s_comprimir",
											"type": "DatasetReference",
											"parameters": {
												"nome_arquivo": {
													"value": "@{replace(item().name,'.zip','.txt')}",
													"type": "Expression"
												},
												"pasta": "dash.email1to1"
											}
										}
									]
								},
								{
									"name": "Transforma_TXT_toParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Transforma_ZIP_to_TXT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.email1to1",
												"wildcardFileName": {
													"value": "@{replace(item().name,'.zip','.txt')}",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Listar_Arquivos_Txt_1",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Arquivos_Em_Parquet_1",
											"type": "DatasetReference",
											"parameters": {
												"nome_arquivo": "@{replace(item().name,'.zip','.parquet')}"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Deletar_Arquivos_ZIP",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Para_Cada_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.zip"
							}
						}
					},
					{
						"name": "Deletar_Arquivos_TXT",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Para_Cada_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.txt",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "EMAIL_ETL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Deletar_Arquivos_TXT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Deletar_Arquivos_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EMAIL_ETL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dIntVisitasRealizadas": {},
									"dIntVisitasMedico": {},
									"dIntEmail": {},
									"dIntVisitasFranchise": {},
									"dIntEventos": {},
									"HistZona": {},
									"RepsZona": {},
									"dForcaVendas": {},
									"dKPITerritorio": {},
									"dCoaching": {},
									"dMSLDivision": {},
									"dTargetSRO": {},
									"dQuadranteMedico": {},
									"dQuadranteMedicoGP": {},
									"dAuditEnd": {},
									"dPainelMedico": {},
									"TraducaoEspecialidadeEventos": {},
									"SinkFatoInteracoes": {},
									"SinkDimForcaVendas": {},
									"SinkDimHistoricoZonas": {},
									"SinkDimKpiTerritorio": {},
									"SinkCoaching": {},
									"SinkDimMslDivision": {},
									"SinkDimTargetSro": {},
									"SinkDimQuadranteMedico": {},
									"SinkDimQuadranteMedicoGp": {},
									"SinkDimAuditEnd": {},
									"SinkDimPainelMedico": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"variables": {
					"ValorVerdadeiro": {
						"type": "Array"
					},
					"ValorFalso": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Transform"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-17T02:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Listar_Arquivos_Txt_1')]",
				"[concat(variables('workspaceId'), '/dataflows/EMAIL_ETL')]",
				"[concat(variables('workspaceId'), '/datasets/ListarArquivosComprimidos_1')]",
				"[concat(variables('workspaceId'), '/datasets/arquivo_txt_s_comprimir')]",
				"[concat(variables('workspaceId'), '/datasets/Arquivos_Em_Parquet_1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/2 - Transform  - KPI Visitacao')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lista_Arquivos",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filtra_Arquivos_ZIP",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lista_Arquivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista_Arquivos').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Para_Cada_ZIP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtra_Arquivos_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtra_Arquivos_ZIP').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Transforma_ZIP_to_TXT",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao",
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings"
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ListarArquivosComprimidos_2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "arquivo_txt_s_comprimir",
											"type": "DatasetReference",
											"parameters": {
												"nome_arquivo": {
													"value": "@{replace(item().name,'.zip','.txt')}",
													"type": "Expression"
												},
												"pasta": "dash.kpi_visitacao"
											}
										}
									]
								},
								{
									"name": "Transforma_TXT_toParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Transforma_ZIP_to_TXT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao",
												"wildcardFileName": {
													"value": "@{replace(item().name,'.zip','.txt')}",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Listar_Arquivos_Txt_2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Arquivos_Em_Parquet_2",
											"type": "DatasetReference",
											"parameters": {
												"nome_arquivo": {
													"value": "@{replace(item().name,'.zip','.parquet')}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Deletar_Arquivos_ZIP",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Para_Cada_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.zip"
							}
						}
					},
					{
						"name": "Deletar_Arquivos_TXT",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Para_Cada_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.txt",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "KPI_ETL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Deletar_Arquivos_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Deletar_Arquivos_TXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "KPI_ETL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DimTopIndependentes": {},
									"DimPainelMedico": {},
									"FatoVisitasRealizadas": {},
									"SinkDimPainelMedico": {},
									"SinkFatoVisitasRealizadas": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"variables": {
					"ValorVerdadeiro": {
						"type": "Array"
					},
					"ValorFalso": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Transform"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-17T02:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Listar_Arquivos_Txt_2')]",
				"[concat(variables('workspaceId'), '/dataflows/KPI_ETL')]",
				"[concat(variables('workspaceId'), '/datasets/ListarArquivosComprimidos_2')]",
				"[concat(variables('workspaceId'), '/datasets/arquivo_txt_s_comprimir')]",
				"[concat(variables('workspaceId'), '/datasets/Arquivos_Em_Parquet_2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/3 - Extract - GSO')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "dim_visits",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n\t\"P\".SURVEY_TARGET_ID \t\t\t\t\tAS \"SURVEY_KEY\",\n\t\"ST\".\"DATE\" AS \"VISIT_DATE\",\n\tCOALESCE(\"PRD\".SURVEY_KEY,'NOT INFORMED') AS \"VISIT_PRODUCT\",\n\tSUM(\"P\".RESPONSE_NUMBER) AS \"TOTAL_VISITS\"\n    \n FROM LATAMCRMFBICNTRYBRVW.F_SURVEY_RESPONSES AS \"P\"\n \n LEFT JOIN (SELECT DISTINCT\n\t\"P\".SURVEY_TARGET_ID \t\t\t\t\tAS \"SURVEY_KEY\",\n    \"P\".RESPONSE\n FROM LATAMCRMFBICNTRYBRVW.F_SURVEY_RESPONSES AS \"P\"\n WHERE \"P\".QUESTION_ORDER = 0  AND \"P\".RESPONSE IS NOT NULL) AS \"PRD\" ON \"P\".SURVEY_TARGET_ID = \"PRD\".SURVEY_KEY\n \n INNER JOIN (SELECT \n\t  \"ST\".SURVEY_TARGET_ID as \"SURVEY_KEY\",\n\t  CAST(TRIM(CAST(LEFT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),4)||'-'||\n\t  SUBSTRING(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)) FROM 5 FOR 2) ||'-'||\n\t  RIGHT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),2) AS VARCHAR(10))) AS DATE FORMAT 'yyyy-mm-dd') AS \"DATE\",\n\t  \"ST\".SOURCE_LAST_MODIFIED_TS as \"TARGET_LAST_MODIFIED_TS\",\n\t  CAST(\"ST\".SOURCE_LAST_MODIFIED_TS AS DATE FORMAT 'YYYYMMDD') AS \"MODIFIED_DATE\",\n\t  \"ST\".START_DATE_ID,\n\t  \"ST\".END_DATE_ID,\n\t  \"ST\".REVIEW_DATE_ID,\n\t  \"ST\".REVIEW_STATUS,\n\t  \"ST\".MANAGER_TERRITORY_ID,\n\t  \"ST\".EMPLOYEE_TERRITORY_ID,\n\t  \"ST\".TERRITORY_ID\nFROM LATAMCRMFBICNTRYBRVW.F_SURVEY_TARGETS AS \"ST\"\nWHERE \"ST\".COUNTRY_CODE = 'BR'  AND \n\t\"ST\".SURVEY_TARGET_NAME LIKE '%GSO U%' AND\n\tLEFT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),6) > '201901') AS \"ST\" ON \"P\".SURVEY_TARGET_ID = \"ST\".SURVEY_KEY\n\nWHERE \"P\".QUESTION_ID = '12215'\nGROUP BY \"P\".SURVEY_TARGET_ID,\n\t\t\t\"ST\".\"DATE\",\n\t\tCOALESCE(\"PRD\".SURVEY_KEY,'NOT INFORMED');",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SURVEY_KEY",
											"type": "Int32"
										},
										"sink": {
											"name": "SURVEY_KEY",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "VISIT_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "VISIT_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "VISIT_PRODUCT",
											"type": "String"
										},
										"sink": {
											"name": "VISIT_PRODUCT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TOTAL_VISITS",
											"type": "Int32"
										},
										"sink": {
											"name": "TOTAL_VISITS",
											"type": "Int32",
											"physicalType": "Int32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "dim_visits.txt"
								}
							}
						]
					},
					{
						"name": "dim_survey_question",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_visits",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT \n\t  QUESTION_ID,\n      CREATED_DATE AS \"QUESTION_CREATED_DATE\",\n      QUESTION_NAME,     \n      SOURCE_LAST_MODIFIED_TS\tAS \"QUESTION_LAST_MODIFIED_TS\",\n      QUESTION_TEXT,\n      QUESTION_ORDER \t\tAS \"QUESTION_ORDER\",\n      CASE\n      WHEN QUESTION_ORDER = 0 THEN 'PRODUCT'\n      WHEN QUESTION_ORDER = 1 THEN 'COCO'\n      WHEN QUESTION_ORDER = 2 THEN 'SOB'\n      WHEN QUESTION_ORDER = 3 THEN 'QTC'\n      WHEN QUESTION_ORDER = 4 THEN 'GSO'\n      WHEN QUESTION_ORDER = 5 THEN 'VISITS'\n      ELSE\t'' END \tAS \"QUESTION_TYPE\",\n      CASE\n      WHEN QUESTION_ORDER = 0 THEN 'PRODUCT' \n      WHEN QUESTION_ORDER = 1 THEN 'OCV'\n      WHEN QUESTION_ORDER = 2 THEN 'Foco da Discussão'\n      WHEN QUESTION_ORDER = 3 THEN 'Fechamento'\n      WHEN QUESTION_ORDER = 4 THEN 'GSO'\n      WHEN QUESTION_ORDER = 5 THEN 'Visitas'\n      ELSE '' END\tAS \"TIPO_QUESTAO\"\nFROM LATAMCRMFBICNTRYBRVW.D_SURVEY_QUESTION\nWHERE COUNTRY_CODE = 'BR' AND\nQUESTION_ORDER < 6 AND \nDELETED_IND = 0",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "QUESTION_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "QUESTION_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "QUESTION_CREATED_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "QUESTION_CREATED_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "QUESTION_NAME",
											"type": "String"
										},
										"sink": {
											"name": "QUESTION_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QUESTION_LAST_MODIFIED_TS",
											"type": "DateTime"
										},
										"sink": {
											"name": "QUESTION_LAST_MODIFIED_TS",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "QUESTION_TEXT",
											"type": "String"
										},
										"sink": {
											"name": "QUESTION_TEXT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QUESTION_ORDER",
											"type": "Decimal"
										},
										"sink": {
											"name": "QUESTION_ORDER",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "QUESTION_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "QUESTION_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_QUESTAO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_QUESTAO",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "dim_survey_question.txt"
								}
							}
						]
					},
					{
						"name": "dim_sales_force_teradata",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_survey_question",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT RX_EXTERNAL_ID,\n      USER_ID,\n \t  SOURCE_USER_AID\t\t\t\t\t\t\t\t\t\tAS \"SF_SOURCE_USER_AID\",\n      USER_NAME,\n      FIRST_NAME,\n      NAME,\n      LAST_NAME,      \n      COUNTRY,\n      STATE_PROVINCE,\n      UPPER(CITY) \t\t\t\t\t\t\t\t\t\t\tAS \"CITY\",\n      POSTAL_CODE,\n      ACTIVE_IND,\n      EMAIL,\n      EMPLOYEE_NUMBER_AID,\n      USER_IDENTIFIER_AID,\n      CORE_GSK_FUNCTIONAL_PROFILE,\n      PROFILE_NAME\n FROM  LATAMCRMFBICNTRYBRVW.D_USER\nWHERE ACTIVE_IND = 1;\n ;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RX_EXTERNAL_ID",
											"type": "String"
										},
										"sink": {
											"name": "RX_EXTERNAL_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "USER_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "SF_SOURCE_USER_AID",
											"type": "String"
										},
										"sink": {
											"name": "SF_SOURCE_USER_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_NAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FIRST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "FIRST_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LAST_NAME",
											"type": "String"
										},
										"sink": {
											"name": "LAST_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATE_PROVINCE",
											"type": "String"
										},
										"sink": {
											"name": "STATE_PROVINCE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String"
										},
										"sink": {
											"name": "CITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "POSTAL_CODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTAL_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTIVE_IND",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVE_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMPLOYEE_NUMBER_AID",
											"type": "String"
										},
										"sink": {
											"name": "EMPLOYEE_NUMBER_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_IDENTIFIER_AID",
											"type": "String"
										},
										"sink": {
											"name": "USER_IDENTIFIER_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_FUNCTIONAL_PROFILE",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_FUNCTIONAL_PROFILE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PROFILE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "PROFILE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "dim_sales_force_teradata.txt"
								}
							}
						]
					},
					{
						"name": "dim_sales_force_funcionario",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_sales_force_teradata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select DISTINCT MUDID\tAS 'RX_EXTERNAL_ID',\n \t  UF\nfrom Dim_Cad_Funcionarios",
								"queryTimeout": "07:30:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RX_EXTERNAL_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RX_EXTERNAL_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UF",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerGSK",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "dim_sales_force_funcionario.txt"
								}
							}
						]
					},
					{
						"name": "dim_sales_force_sqlserver",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_sales_force_funcionario",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \n     ROW_ID_FUNCIONARIO\t\t\t\t\t\t\t\t\t\tAS RX_EXTERNAL_ID,\n\t CICLO,\n     CICLO + '-' + ROW_ID_TERRITORIO\t\t\t\t\t\tAS SALES_FORCE_KEY,\n     CICLO + '-' + ROW_ID_TERRITORIO\t\t\t\t\t\tAS SF_KEY,\n\t ROW_ID_TERRITORIO,\n     ROW_ID_GD,\n     NOME_GD,\n     NOME_GR,\n\t CASE\n     WHEN Len(COALESCE(TERRITORIO_GD,'0123456789')) = 0 THEN TERRITORIO_GD\n     ELSE Right(TERRITORIO_GD, 6) END AS TERRITORIO_GD,\n\t CASE\n\t WHEN Len(COALESCE(TERRITORIO_GR,'0123456789')) = 0 THEN TERRITORIO_GR\n     ELSE Right(TERRITORIO_GR, 6)END AS TERRITORIO_GR,\n     BU,\n     CASE\n\t WHEN DIVISÃO = 'REDES' THEN 'REDES DIRETAS'\n     ELSE DIVISÃO END  AS DIVISÃO,\n     CASE\n\t WHEN Len(COALESCE(TERRITORIO,'0123456789')) = 0 THEN TERRITORIO\n     ELSE Right(TERRITORIO, 6) END AS TERRITORIO,\n\t NOME_REPRESENTANTE\t\t\t\t\t\t\t\t\t\tAS NOME_REP        \nFROM Dim_Cad_Forca_Vendas\nWHERE STATUS = 'A'\n  AND CICLO >= '201901'\n  AND (BU = 'FARMA' OR BU = 'BIOTECH');",
								"queryTimeout": "07:30:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RX_EXTERNAL_ID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RX_EXTERNAL_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CICLO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CICLO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALES_FORCE_KEY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SALES_FORCE_KEY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SF_KEY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SF_KEY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_GD",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROW_ID_GD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME_GD",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NOME_GD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME_GR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NOME_GR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO_GD",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TERRITORIO_GD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO_GR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TERRITORIO_GR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BU",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DIVISÃO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DIVISÃO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME_REP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NOME_REP",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerGSK",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "dim_sales_force_sqlserver.txt"
								}
							}
						]
					},
					{
						"name": "fato_gso_call_summary",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "fato_gso_response",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": " SELECT \n    \"CM\".CALL_SUMMARY_ID,\n     \"CM\".PARENT_CALL_AID,\n     \"CM\".LOCAL_CALL_DATE_ID,\n     \"CM\".CALL_DATE_ID,\n     \"CM\".TERRITORY_ID,\n     LEFT(CAST(\"CM\".CALL_DATE_ID as CHAR(8)),6)         AS \"CYCLE\",\n     ((LEFT(CAST(\"CM\".CALL_DATE_ID as CHAR(8)),6)||'-')||TRIM(\"CM\".TERRITORY_ID))    AS \"SALES_FORCE_KEY\",\n     LEFT(CAST(\"CM\".CALL_DATE_ID as CHAR(8)),6)    AS \"DATE\",\n     \"CM\".LOCAL_CALL_TIME_ID,\n     \"CM\".ACCOUNT_ID,\n     \"CM\".CALL_NAME,\n     \"CM\".RX_CALL_TYPE,\n     \"CM\".CALL_STATUS,\n     \"CM\".ATTENDEE_TYPE,\n     \"CM\".CLM_IND,\n     \"CM\".SAMPLE_CALL_IND,\n     \"CM\".CALL_TYPE,\n     \"CM\".DETAILED_PRODUCTS,\n     \"CM\".DURATION,\n     \"CM\".CREATED_DATE_ID,\n     \"CM\".CREATED_DATE_TIME_ID,\n     \"CM\".LAST_MODIFIED_DATE_ID,\n     \"CM\".LAST_MODIFIED_DATE_TIME_ID,\n     \"CM\".PRE_CALL_NOTES,\n     \"CM\".NEXT_CALL_NOTES,\n     'Completed_vod'                                        AS \"REVIEW_STATUS\",\n     \"AC\".ACCOUNT_NAME,\n     \"AC\".RX_LEGAL_ID,\n     \"KEY\".KEY_MESSAGE_NAME,\n     \"KEY\".QUESTION_ID,\n     COALESCE(\"KEY\".PRODUCT_NAME,'NOT INFORMED') AS \"PRODUCT\",\n     \"KEY\".CALL_DATE,\n     'CALLS'                AS \"ORIGEM\"\n\n \n\nFROM  \n    LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY \"CM\"\n\n \n\nLEFT JOIN (\n            SELECT \n                ACCOUNT_ID,\n                 NAME AS \"ACCOUNT_NAME\",\n                 RX_LEGAL_ID\n            FROM \n                LATAMCRMFBICNTRYBRVW.D_ACCOUNT\n            WHERE\n                COUNTRY_CODE = 'BR'\n                  AND DELETED_IND = 0\n              ) as \"AC\" ON \"CM\".ACCOUNT_ID = \"AC\".ACCOUNT_ID\n\n \n\nLEFT JOIN (\n            SELECT\n                \"CM\".CALL_SUMMARY_ID,\n                \"KM\".KEY_MESSAGE_NAME,\n                CASE\n                WHEN \"KM\".KEY_MESSAGE_NAME = 'Tentativa de GSO - Expositiva' THEN '12209'\n                WHEN \"KM\".KEY_MESSAGE_NAME = 'Tentativa de GSO - Interativa' THEN '12213'\n                WHEN \"KM\".KEY_MESSAGE_NAME = 'Lembrança da marca' THEN '12210'\n                WHEN \"KM\".KEY_MESSAGE_NAME = 'Good Sell Outcome (GSO)' THEN '12212'\n                ELSE \"KM\".KEY_MESSAGE_NAME END AS \"QUESTION_ID\",\n                \"PC\".PRODUCT_NAME,\n                \"CM\".CALL_DATE_ID as \"CALL_DATE\",\n                \"CM\".TERRITORY_ID  \n            \n            FROM \n                LATAMCRMFBICNTRYBRVW.F_CALL_MESSAGE as \"CM\"\n\n \n\n            LEFT JOIN (\n                        SELECT DISTINCT\n                            KEY_MESSAGE_ID     as \"MESSAGE_ID\",\n                            KEY_MESSAGE_ID,\n                            KEY_MESSAGE_NAME\n                        \n                        FROM \n                            LATAMCRMFBICNTRYBRVW.D_KEY_MESSAGE\n                        WHERE     \n                            (KEY_MESSAGE_NAME = 'Visita não promocional' OR\n                             KEY_MESSAGE_NAME = 'Lembrança da marca' OR\n                             KEY_MESSAGE_NAME LIKE '%GSO%')\n                         ) AS \"KM\" ON \"CM\".KEY_MESSAGE_ID = \"KM\".KEY_MESSAGE_ID\n        \n            LEFT JOIN (\n                        SELECT \n                            PRODUCT_CATALOG_ID,\n                             PRODUCT_NAME\n                        FROM \n                        LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG\n                      ) AS \"PC\" ON \"CM\".PRODUCT_CATALOG_ID = \"PC\".PRODUCT_CATALOG_ID\n                        \n            \n                        WHERE \n                        (EXISTS (\n                                    SELECT DISTINCT\n                                        KEY_MESSAGE_ID     as \"MESSAGE_ID\",\n                                        KEY_MESSAGE_ID,\n                                        KEY_MESSAGE_NAME\n                                    FROM \n                                        LATAMCRMFBICNTRYBRVW.D_KEY_MESSAGE\n                                    WHERE     \n                                        (KEY_MESSAGE_NAME = 'Visita não promocional' OR\n                                         KEY_MESSAGE_NAME = 'Lembrança da marca' OR\n                                         KEY_MESSAGE_NAME LIKE '%GSO%')\n                                         AND KEY_MESSAGE_ID = \"CM\".KEY_MESSAGE_ID)\n                                ) \n                        AND\n                        (EXISTS (\n                                    SELECT \n                                        PRODUCT_CATALOG_ID,\n                                         PRODUCT_NAME\n                                    FROM \n                                        LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG\n                                      WHERE PRODUCT_CATALOG_ID =    \"CM\".PRODUCT_CATALOG_ID)\n                                 )\n                         AND\n                         LEFT(CAST(CALL_DATE_ID as CHAR(8)),6) > '201901'\n        ) AS \"KEY\" ON \"CM\".CALL_SUMMARY_ID = \"KEY\".CALL_SUMMARY_ID\n  \nWHERE \n    LEFT(CAST(\"CM\".CALL_DATE_ID as CHAR(8)),6)>= '201901' AND\n    \"CM\".COUNTRY_CODE = 'BR' AND \n      \"CM\".CALL_STATUS = 'Submitted_vod' AND \n      \"CM\".DELETED_IND = 0\n ORDER BY \"SALES_FORCE_KEY\";",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CALL_SUMMARY_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "CALL_SUMMARY_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "PARENT_CALL_AID",
											"type": "String"
										},
										"sink": {
											"name": "PARENT_CALL_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCAL_CALL_DATE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "LOCAL_CALL_DATE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "CALL_DATE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "CALL_DATE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "CYCLE",
											"type": "String"
										},
										"sink": {
											"name": "CYCLE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALES_FORCE_KEY",
											"type": "String"
										},
										"sink": {
											"name": "SALES_FORCE_KEY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "String"
										},
										"sink": {
											"name": "DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCAL_CALL_TIME_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "LOCAL_CALL_TIME_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ACCOUNT_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "CALL_NAME",
											"type": "String"
										},
										"sink": {
											"name": "CALL_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_CALL_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "RX_CALL_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CALL_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "CALL_STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ATTENDEE_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "ATTENDEE_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CLM_IND",
											"type": "String"
										},
										"sink": {
											"name": "CLM_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SAMPLE_CALL_IND",
											"type": "String"
										},
										"sink": {
											"name": "SAMPLE_CALL_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CALL_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "CALL_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DETAILED_PRODUCTS",
											"type": "String"
										},
										"sink": {
											"name": "DETAILED_PRODUCTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DURATION",
											"type": "Decimal"
										},
										"sink": {
											"name": "DURATION",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "CREATED_DATE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "CREATED_DATE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "CREATED_DATE_TIME_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "CREATED_DATE_TIME_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "LAST_MODIFIED_DATE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "LAST_MODIFIED_DATE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "LAST_MODIFIED_DATE_TIME_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "LAST_MODIFIED_DATE_TIME_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "PRE_CALL_NOTES",
											"type": "String"
										},
										"sink": {
											"name": "PRE_CALL_NOTES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NEXT_CALL_NOTES",
											"type": "String"
										},
										"sink": {
											"name": "NEXT_CALL_NOTES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "REVIEW_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "REVIEW_STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_LEGAL_ID",
											"type": "String"
										},
										"sink": {
											"name": "RX_LEGAL_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "KEY_MESSAGE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "KEY_MESSAGE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QUESTION_ID",
											"type": "String"
										},
										"sink": {
											"name": "QUESTION_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CALL_DATE",
											"type": "Int32"
										},
										"sink": {
											"name": "CALL_DATE",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "ORIGEM",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "fato_gso_call_summary.txt"
								}
							}
						]
					},
					{
						"name": "fato_gso_response",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "dim_sales_force_sqlserver",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT \n\t\"P\".SURVEY_TARGET_ID \t\t\t\t\tAS \"SURVEY_KEY\",\n    \"P\".QUESTION_ID,\t\t\t\t\t\n    \"P\".SOURCE_CREATED_TS,\n    \"P\".SOURCE_LAST_MODIFIED_TS\t\t\tAS \"RESPONSE_LAST_MODIFIED_TS\",\n    \"P\".SOURCE_CREATED_BY_AID AS \"SOURCE_USER_AID\",\n    \"P\".QUESTION_RESPONSE_ID,          \n    \"P\".RESPONSE_NAME,\n    \"P\".RESPONSE_NUMBER,\n    \"P\".RESPONSE,\n    TRIM(COALESCE(\"PRD\".RESPONSE,'NOT INFORMED')) AS \"PRODUCT\",\n    \"P\".QUESTION_ORDER\t\t\t\tAS \"RESPONSE_QUESTION_ORDER\",\n\t\"ST\".\"DATE\",\n\t\"ST\".TARGET_LAST_MODIFIED_TS,\n\t\"ST\".MODIFIED_DATE,\n\t\"ST\".START_DATE_ID,\n\t\"ST\".END_DATE_ID,\n\t\"ST\".REVIEW_DATE_ID,\n\t\"ST\".REVIEW_STATUS,\n\t\"ST\".MANAGER_TERRITORY_ID,\n\t\"ST\".EMPLOYEE_TERRITORY_ID,\n\t\"ST\".TERRITORY_ID,\n \t(\"ST\".MODIFIED_DATE - \"ST\".\"DATE\" ) AS \"DATE_DIFF\",\n \tCASE\n \tWHEN (\"ST\".MODIFIED_DATE - ADD_MONTHS(\"ST\".\"DATE\" - EXTRACT(DAY FROM \"ST\".\"DATE\")+1,6)) > 7 THEN 'N'\n \tELSE 'S' END AS \"FLAG_PREMIO\",\n \tLEFT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),6)||'-'||TRIM(\"ST\".EMPLOYEE_TERRITORY_ID) AS \"SALES_FORCE_KEY\",\n \tLEFT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),6)||'-'||TRIM(\"ST\".EMPLOYEE_TERRITORY_ID) AS \"RESPONSES_KEY\",\n\t'SURVEYS'\t\t\t\tAS \"ORIGEM\"\n    \n FROM LATAMCRMFBICNTRYBRVW.F_SURVEY_RESPONSES AS \"P\"\n \n LEFT JOIN (SELECT DISTINCT\n\t\"P\".SURVEY_TARGET_ID \t\t\t\t\tAS \"SURVEY_KEY\",\n    \"P\".RESPONSE\n FROM LATAMCRMFBICNTRYBRVW.F_SURVEY_RESPONSES AS \"P\"\n WHERE \"P\".QUESTION_ORDER = 0  AND \"P\".RESPONSE IS NOT NULL) AS \"PRD\" ON \"P\".SURVEY_TARGET_ID = \"PRD\".SURVEY_KEY\n \n INNER JOIN (SELECT \n\t  \"ST\".SURVEY_TARGET_ID as \"SURVEY_KEY\",\n\t  CAST(TRIM(CAST(LEFT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),4)||'-'||\n\t  SUBSTRING(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)) FROM 5 FOR 2) ||'-'||\n\t  RIGHT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),2) AS VARCHAR(10))) AS DATE FORMAT 'yyyy-mm-dd') AS \"DATE\",\n\t  \"ST\".SOURCE_LAST_MODIFIED_TS as \"TARGET_LAST_MODIFIED_TS\",\n\t  CAST(\"ST\".SOURCE_LAST_MODIFIED_TS AS DATE FORMAT 'YYYYMMDD') AS \"MODIFIED_DATE\",\n\t  \"ST\".START_DATE_ID,\n\t  \"ST\".END_DATE_ID,\n\t  \"ST\".REVIEW_DATE_ID,\n\t  \"ST\".REVIEW_STATUS,\n\t  \"ST\".MANAGER_TERRITORY_ID,\n\t  \"ST\".EMPLOYEE_TERRITORY_ID,\n\t  \"ST\".TERRITORY_ID\nFROM LATAMCRMFBICNTRYBRVW.F_SURVEY_TARGETS AS \"ST\"\nWHERE \"ST\".COUNTRY_CODE = 'BR'  AND \n\t\"ST\".SURVEY_TARGET_NAME LIKE '%GSO U%' AND\n\tLEFT(CAST(\"ST\".REVIEW_DATE_ID AS CHAR(8)),6) > '201901') AS \"ST\" ON \"P\".SURVEY_TARGET_ID = \"ST\".SURVEY_KEY;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SURVEY_KEY",
											"type": "Int32"
										},
										"sink": {
											"name": "SURVEY_KEY",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "QUESTION_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "QUESTION_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "SOURCE_CREATED_TS",
											"type": "DateTime"
										},
										"sink": {
											"name": "SOURCE_CREATED_TS",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "RESPONSE_LAST_MODIFIED_TS",
											"type": "DateTime"
										},
										"sink": {
											"name": "RESPONSE_LAST_MODIFIED_TS",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "SOURCE_USER_AID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_USER_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QUESTION_RESPONSE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "QUESTION_RESPONSE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "RESPONSE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "RESPONSE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPONSE_NUMBER",
											"type": "Int32"
										},
										"sink": {
											"name": "RESPONSE_NUMBER",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "RESPONSE",
											"type": "String"
										},
										"sink": {
											"name": "RESPONSE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPONSE_QUESTION_ORDER",
											"type": "Decimal"
										},
										"sink": {
											"name": "RESPONSE_QUESTION_ORDER",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "TARGET_LAST_MODIFIED_TS",
											"type": "DateTime"
										},
										"sink": {
											"name": "TARGET_LAST_MODIFIED_TS",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "MODIFIED_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "MODIFIED_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "START_DATE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "START_DATE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "END_DATE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "END_DATE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "REVIEW_DATE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "REVIEW_DATE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "REVIEW_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "REVIEW_STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MANAGER_TERRITORY_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "MANAGER_TERRITORY_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "EMPLOYEE_TERRITORY_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "EMPLOYEE_TERRITORY_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "DATE_DIFF",
											"type": "Int32"
										},
										"sink": {
											"name": "DATE_DIFF",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "FLAG_PREMIO",
											"type": "String"
										},
										"sink": {
											"name": "FLAG_PREMIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SALES_FORCE_KEY",
											"type": "String"
										},
										"sink": {
											"name": "SALES_FORCE_KEY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPONSES_KEY",
											"type": "String"
										},
										"sink": {
											"name": "RESPONSES_KEY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORIGEM",
											"type": "String"
										},
										"sink": {
											"name": "ORIGEM",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "fato_gso_response.txt"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Extract"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/TeradataTable1')]",
				"[concat(variables('workspaceId'), '/datasets/Arquivo_Em_TxT_3')]",
				"[concat(variables('workspaceId'), '/datasets/SqlServerGSK')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/3 - Transform - GSO')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lista_Arquivos",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "TranformRegionTxt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filtra_Arquivos_TXT",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lista_Arquivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista_Arquivos').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.txt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Para_Cada_TXT",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtra_Arquivos_TXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtra_Arquivos_TXT').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Transforma_TXT_to_Parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Listar_Arquivos_Txt_3",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Arquivos_Em_Parquet_3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Deletar_Arquivos_TXT",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Para_Cada_TXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.txt"
							}
						}
					},
					{
						"name": "GSO_ETL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Deletar_Arquivos_TXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "GSO_ETL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"fGsoCallSummarySource": {},
									"fGsoResponseSource": {},
									"dSalesForceTeradata": {},
									"dSalesForceFuncionario": {},
									"dSalesForceSqlServer": {},
									"dSalesForceRegiao": {},
									"dSurveyQuestion": {},
									"dVisits": {},
									"dGCO": {},
									"FatoGsoDestino": {},
									"SalesForceDestino": {},
									"SinkDimSurveyQuestion": {},
									"SinkDimVisits": {},
									"SinkGCO": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Coarse"
						}
					},
					{
						"name": "TranformRegionTxt",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BRASIL.Area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AREA",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Outlet State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UF",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Regiao",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "REGION",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATE",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Fact_GSO_Aux_Regiao",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Arquivo_Em_TxT_3",
								"type": "DatasetReference",
								"parameters": {
									"pasta_nome_arquivo": "dim_region.txt"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Transform"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Listar_Arquivos_Txt_3')]",
				"[concat(variables('workspaceId'), '/dataflows/GSO_ETL')]",
				"[concat(variables('workspaceId'), '/datasets/Fact_GSO_Aux_Regiao')]",
				"[concat(variables('workspaceId'), '/datasets/Arquivo_Em_TxT_3')]",
				"[concat(variables('workspaceId'), '/datasets/Arquivos_Em_Parquet_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/4 - Transform  - Universo Medico')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lista_Arquivos",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filtra_Arquivos_ZIP",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lista_Arquivos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lista_Arquivos').output.childitems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.zip')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Para_Cada_ZIP",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filtra_Arquivos_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filtra_Arquivos_ZIP').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Transforma_ZIP_to_TXT",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico",
												"wildcardFileName": {
													"value": "@{item().name}",
													"type": "Expression"
												}
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings"
												}
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ListarArquivosComprimidos_4",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "arquivo_txt_s_comprimir",
											"type": "DatasetReference",
											"parameters": {
												"nome_arquivo": {
													"value": "@{replace(item().name,'.zip','.txt')}",
													"type": "Expression"
												},
												"pasta": "dash.universo_medico"
											}
										}
									]
								},
								{
									"name": "Transforma_TXT_toParquet",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Transforma_ZIP_to_TXT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico",
												"wildcardFileName": {
													"value": "@{replace(item().name,'.zip','.txt')}",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"enableSkipIncompatibleRow": true,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Listar_Arquivos_Txt_4",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Arquivos_Em_Parquet_4",
											"type": "DatasetReference",
											"parameters": {
												"nome_arquivo": "@{replace(item().name,'.zip','.parquet')}"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Deletar_Arquivos_ZIP",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Para_Cada_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.zip"
							}
						}
					},
					{
						"name": "Deletar_Arquivos_TXT",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Para_Cada_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Listar_Arquivos_Txt_4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.txt",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "UNIV_MEDICO_ETL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Deletar_Arquivos_ZIP",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Deletar_Arquivos_TXT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNIV_MEDICO_ETL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dForcaVendas": {},
									"dPainelMedico": {},
									"dQuadranteMedico": {},
									"dQuadranteMedicoGP": {},
									"dUniversoMedico": {},
									"dConsentHistory": {},
									"ForcaVendas": {},
									"PainelMedico": {},
									"QuadranteMedico": {},
									"QuadranteMedicoGP": {},
									"UniversoMedico": {},
									"ConsentHistory": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"variables": {
					"ValorVerdadeiro": {
						"type": "Array"
					},
					"ValorFalso": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "Transform"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-17T02:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Listar_Arquivos_Txt_4')]",
				"[concat(variables('workspaceId'), '/dataflows/UNIV_MEDICO_ETL')]",
				"[concat(variables('workspaceId'), '/datasets/ListarArquivosComprimidos_4')]",
				"[concat(variables('workspaceId'), '/datasets/arquivo_txt_s_comprimir')]",
				"[concat(variables('workspaceId'), '/datasets/Arquivos_Em_Parquet_4')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Carga-Diaria')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "STG_Cad_Usuarios_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Cad_Hierarquia_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n\tTRIM(COALESCE(A.TERRITORY_ID,'')) AS \"TERRITORY_ID\"\n\t,TRIM(COALESCE(C.TERRITORY_NAME,'')) as \"TERRITORY_NAME\"\n\t,TRIM(COALESCE(B.NAME,'')) as \"USER_NAME\"\n\t,TRIM(COALESCE(B.EMAIL,'')) as \"EMAIL\"\n\t,TRIM(COALESCE(B.ALIAS_NAME,'')) as \"MUDID\"\n\t,TRIM(COALESCE(A.ACTIVE_IND,'')) as \"USR_TERR_ACTIVE_IND\"\n\t,TRIM(COALESCE(B.ACTIVE_IND,'')) as \"USR_ACTIVE_IND\"\n\t,TRIM(COALESCE(B.DELETED_IND,'')) AS \"USR_DELETED_ID\"\n\t,TRIM(COALESCE(A.USER_ID,'')) AS \"USER_ID\"\n\t,A.START_DATE as \"START_DATE\"\n\t,A.END_DATE (TITLE'') as \"END_DATE\"\n FROM \n\tLATAMCRMFBICNTRYBRVW.SCD_USER_TERRITORY A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_USER B\n    \tON A.USER_ID = B.USER_ID\n    LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_TERRITORY C\n    ON\tA.TERRITORY_ID = C.TERRITORY_ID;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY_NAME",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_NAME",
											"type": "String"
										},
										"sink": {
											"name": "USER_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MUDID",
											"type": "String"
										},
										"sink": {
											"name": "MUDID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USR_TERR_ACTIVE_IND",
											"type": "String"
										},
										"sink": {
											"name": "USR_TERR_ACTIVE_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USR_ACTIVE_IND",
											"type": "String"
										},
										"sink": {
											"name": "USR_ACTIVE_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USR_DELETED_ID",
											"type": "String"
										},
										"sink": {
											"name": "USR_DELETED_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "USER_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "START_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "START_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "END_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "END_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Cad_Usuarios_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Cad_Hierarquia_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Amostras_Entregues_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n\tTRIM(COALESCE(TR.FIELD_FORCE_NAME,'')) as \"DIVISAO\"\n \t,TRIM(COALESCE(TE.TERRITORY_ID,'')) as \"TERRITORY_ID\"\n \t,TRIM(COALESCE(TR.TERRITORY_NAME,'')) as \"TERRITORIO\"\n \t,TRIM(COALESCE(TE.LEVEL_4_TERRITORY_NAME,'')) as \"TERRITORIO_GD\"\n \t,TRIM(COALESCE(TE.LEVEL_5_TERRITORY_NAME,'')) as \"TERRITORIO_GR\"\n \t,TRIM(COALESCE(TE.LEVEL_6_TERRITORY_NAME,'')) as \"BU\"\n \t,TRIM(COALESCE(CAST(TR.END_DATE AS VARCHAR(100)),''))\t(TITLE'') as \"DATA_FIM_TERRITORIO\"\n FROM   LATAMCRMFBICNTRYBRVW.SCD_HIERARCHY_TERRITORY TE LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_TERRITORY TR\n\t\tON TE.TERRITORY_ID = TR.TERRITORY_ID\n WHERE \n\tTE.DELETED_IND = 0 AND TE.CURRENT_IND = '1'\n\tAND EXISTS (SELECT A.* FROM LATAMCRMFBICNTRYBRVW.D_TERRITORY A WHERE TE.TERRITORY_ID = A.TERRITORY_ID AND A.ACTIVE_IND = '1');",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DIVISAO",
											"type": "String"
										},
										"sink": {
											"name": "DIVISAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO_GD",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORIO_GD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO_GR",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORIO_GR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BU",
											"type": "String"
										},
										"sink": {
											"name": "BU",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_FIM_TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "DATA_FIM_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Cad_Hierarquia_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Amostras_Entregues_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Campos_Espec_Territorio_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n     TRIM(SAMPLE_TRANSACTION_NAME)  as \"ROW_ID\"\n     ,''                   as \"EQUIPE\"\n     ,''                   as \"REGIONAL\"\n     , TRIM(A.TERRITORY_ID)      as \"SETOR\"\n     , TRIM(A.USER_ID)            as \"USER_ID\"\n     , ''                   as \"NUM_CRM\"\n     , TRIM(A.SIGNATURE_DATE_ID)       as \"ASSINATURA\"\n     , ''                   as \"NOME\"\n     , TRIM(A.CALL_NAME)          as \"ID_VISITA\"\n     , TRIM(A.TRANSACTION_DATE_ID)     as \"DATA_DA_VISITA\"\n     , TRIM(A.PRODUCT_CATALOG_ID)  as \"ID_MATERIAL_AMOSTRA\"\n     , TRIM(A.TRANSACTION_SAMPLE) as \"AMOSTRA_MATERIAL_ME_MERCHANDISING\"\n     , TRIM(A.SAMPLE_LOT_ID)      as \"LOTE\"\n     , TRIM(A.QUANTITY)     as \"QUANTIDADE\"\n     , TRIM(A.ACCOUNT_ID)       as \"PROF_ID\" \n     , ''                   (TITLE'')       as \"CATEGORIA\"     \n FROM \n     LATAMCRMFBICNTRYBRVW.F_SAMPLE_TRANSACTION A \n WHERE \n     A.TYPE_CD = 'Disbursement_vod' AND \n     A.DELETED_IND = '0'\n AND\n     \n     ((SUBSTR(CAST(A.SUBMITTED_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(A.SUBMITTED_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(A.SUBMITTED_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(A.SUBMITTED_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) ) ));",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROW_ID",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EQUIPE",
											"type": "String"
										},
										"sink": {
											"name": "EQUIPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "REGIONAL",
											"type": "String"
										},
										"sink": {
											"name": "REGIONAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SETOR",
											"type": "String"
										},
										"sink": {
											"name": "SETOR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "USER_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NUM_CRM",
											"type": "String"
										},
										"sink": {
											"name": "NUM_CRM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ASSINATURA",
											"type": "String"
										},
										"sink": {
											"name": "ASSINATURA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME",
											"type": "String"
										},
										"sink": {
											"name": "NOME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ID_VISITA",
											"type": "String"
										},
										"sink": {
											"name": "ID_VISITA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_DA_VISITA",
											"type": "String"
										},
										"sink": {
											"name": "DATA_DA_VISITA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ID_MATERIAL_AMOSTRA",
											"type": "String"
										},
										"sink": {
											"name": "ID_MATERIAL_AMOSTRA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AMOSTRA_MATERIAL_ME_MERCHANDISING",
											"type": "String"
										},
										"sink": {
											"name": "AMOSTRA_MATERIAL_ME_MERCHANDISING",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOTE",
											"type": "String"
										},
										"sink": {
											"name": "LOTE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QUANTIDADE",
											"type": "String"
										},
										"sink": {
											"name": "QUANTIDADE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PROF_ID",
											"type": "String"
										},
										"sink": {
											"name": "PROF_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CATEGORIA",
											"type": "String"
										},
										"sink": {
											"name": "CATEGORIA",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Amostras_Entregues_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Campos_Espec_Territorio_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Eventos_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n\tTRIM(TERRITORY_ID)\tas \"ROW_ID_TERRITORIO\" \n\t,TRIM(ACCOUNT_ID)\tas \"ROW_ID_CONTATO\"\n\t,TRIM(ADDRESS_ID) as \"ROW_ID_ENDERECO\"\t\n\t,TRIM(MY_TARGET_IND)\t(TITLE'') as \"TARGET_IND\"\n FROM \n\tLATAMCRMFBICNTRYBRVW.H_TERR_SPECIFIC_FIELDS\n WHERE\n     SOURCE_DELETED_IND = '0';",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_ENDERECO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_ENDERECO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TARGET_IND",
											"type": "String"
										},
										"sink": {
											"name": "TARGET_IND",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Campos_Espec_Territorio_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Eventos_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_MC_Activity_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n     TRIM(COALESCE(A.MEDICAL_EVENT_ID,'')) as \"ID_EVENTO\"\n     , TRIM(COALESCE(A.LOCATION,'')) as \"LOCALIZACAO\"\n     , TRIM(COALESCE(A.EVENT_TYPE,''))  as \"TIPO_EVENTO\"\n     , TRIM(COALESCE(OREPLACE(A.EVENT_NAME,'~','-'),'')) as \"NOME_EVENTO\" \n     , TRIM(COALESCE(CAST(A.START_DATE AS VARCHAR(100)),'')) as \"DATA_INICIO\"\n     , TRIM(COALESCE(CAST(A.END_DATE AS VARCHAR(100)),'')) as \"DATA_FIM\"\n     , TRIM(COALESCE(C.PRODUCT_NAME,'')) as \"PRODUTO_PRIMARIO\"\n     , TRIM(COALESCE(D.PRODUCT_NAME,'')) as \"PRODUTO_SECUNDARIO\"\n     , TRIM(COALESCE(B.TERRITORY_ID,'')) as \"ROW_ID_TERRITORIO\"\n     , TRIM(COALESCE(B.ATTENDEE_ID,'')) as \"ROW_ID_CONTATO\" \n     , TRIM(COALESCE(E.RX_LEGAL_ID,'')) as \"DOCUMENTO\"\n     , TRIM(COALESCE(B.ATTENDEE_TYPE,'')) as \"TIPO_CONTA\"\n     , TRIM(COALESCE(B.RX_ROLE,'')) as \"TIPO_PARTICIPACAO\"\n     , TRIM(COALESCE(B.ATTENDEE_STATUS,'')) \"STATUS_CONVIDADO\"\n     , TRIM(COALESCE(U.NAME,'')) as \"CRIADO_POR\"\n     , TRIM(COALESCE(U.ALIAS_NAME,'')) as \"CRIADO_POR_MUDID\"\n     , TRIM(COALESCE(B.ATTENDEE,'')) (TITLE'') as \"PARTICIPANTE\"\n          \n FROM \n     LATAMCRMFBICNTRYBRVW.D_MEDICAL_EVENT A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.F_MEDICAL_EVENT_ATTENDEE B\n     ON A.MEDICAL_EVENT_ID = B.MEDICAL_EVENT_ID\n     \n     LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG C\n     ON A.RX_PRIMARY_PRODUCT = C.SOURCE_PRODUCT_CATALOG_AID\n     \n     LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG D\n     ON A.RX_SECONDARY_PRODUCT = D.SOURCE_PRODUCT_CATALOG_AID\n     \n     LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_ACCOUNT E\n     ON B.ATTENDEE_ID = E.ACCOUNT_ID\n     \n     LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_USER U\n     ON A.OWNER_AID = U.SOURCE_USER_AID\n     \n WHERE\n     A.DELETED_IND = 0 AND B.DELETED_IND = 0\n     AND\n     ((EXTRACT(YEAR FROM END_DATE) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      EXTRACT(MONTH FROM END_DATE) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (EXTRACT(YEAR FROM END_DATE) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      EXTRACT(MONTH FROM END_DATE) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) )));",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID_EVENTO",
											"type": "String"
										},
										"sink": {
											"name": "ID_EVENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCALIZACAO",
											"type": "String"
										},
										"sink": {
											"name": "LOCALIZACAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_EVENTO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_EVENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME_EVENTO",
											"type": "String"
										},
										"sink": {
											"name": "NOME_EVENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_INICIO",
											"type": "String"
										},
										"sink": {
											"name": "DATA_INICIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_FIM",
											"type": "String"
										},
										"sink": {
											"name": "DATA_FIM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUTO_PRIMARIO",
											"type": "String"
										},
										"sink": {
											"name": "PRODUTO_PRIMARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUTO_SECUNDARIO",
											"type": "String"
										},
										"sink": {
											"name": "PRODUTO_SECUNDARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOCUMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DOCUMENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_CONTA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_PARTICIPACAO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_PARTICIPACAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS_CONVIDADO",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONVIDADO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CRIADO_POR",
											"type": "String"
										},
										"sink": {
											"name": "CRIADO_POR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CRIADO_POR_MUDID",
											"type": "String"
										},
										"sink": {
											"name": "CRIADO_POR_MUDID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PARTICIPANTE",
											"type": "String"
										},
										"sink": {
											"name": "PARTICIPANTE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Eventos_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_MC_Activity_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Painel_Medico_Associado_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n\tTRIM(COALESCE(A.ACCOUNT_ID,'')) as \"ROW_ID_CONTATO\"\t\n\t, TRIM(COALESCE(CAST(A.START_DATE_ID AS VARCHAR(100)),'')) as \"START_DATE\"\n\t, TRIM(COALESCE(A.PRODUCT_CATALOG_ID,'')) as \"ROW_ID_PRODUTO\"\t\n\t, TRIM(COALESCE(B.PRODUCT_NAME,''))\tas \"PRODUCT_NAME\"\n\t, TRIM(COALESCE(CAST(A.RX_ACTIVITY_END_TIME AS VARCHAR(100)),'')) as \"END_DATE_TIME\" \t\n\t, TRIM(COALESCE(A.RX_ACTIVITY_TYPE,'')) as \"ACTIVITY_TYPE\"\n\t, TRIM(COALESCE(A.RX_ACTIVITY_OWNER,'')) \tas \"ACTIVITY_OWNER\"\n\t, TRIM(COALESCE(A.RX_TRIGGER_SOURCE_TYPE,''))  as \"TRIGGER_SOURCE_TYPE\"\t\n\t, TRIM(COALESCE(A.RX_DATASOURCE_CODE,'')) as \"DATASOURCE_CODE\"\t\n\t, TRIM(COALESCE(A.MC_ACTIVITY_NAME,''))\t\tas \"ACTIVITY_ID\"\n\t, TRIM(COALESCE(A.URL,''))\t(TITLE'') as \"URL\"\n FROM \n\tLATAMCRMFBICNTRYBRVW.F_MC_ACTIVITY A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG B\n\tON\tA.PRODUCT_CATALOG_ID = B.PRODUCT_CATALOG_ID\n WHERE\n\tA.DELETED_IND = '0';",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "START_DATE",
											"type": "String"
										},
										"sink": {
											"name": "START_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_PRODUTO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_PRODUTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "END_DATE_TIME",
											"type": "String"
										},
										"sink": {
											"name": "END_DATE_TIME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVITY_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_OWNER",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVITY_OWNER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRIGGER_SOURCE_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "TRIGGER_SOURCE_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATASOURCE_CODE",
											"type": "String"
										},
										"sink": {
											"name": "DATASOURCE_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVITY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "URL",
											"type": "String"
										},
										"sink": {
											"name": "URL",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_MC_Activity_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Painel_Medico_Associado_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Cad_Promo_Items_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": " SELECT DISTINCT \n\tTRIM(COALESCE(TERRITORY_ID,'')) as \"ROW_ID_TERRITORIO\"\t\n\t, TRIM(COALESCE(ACCOUNT_ID,'')) \tas \"ROW_ID_CONTATO\"\n\t, TRIM(COALESCE(ACCOUNT_ACCESS,''))  as \"TIPO_ACESSO\"\t\n\t, TRIM(COALESCE(ROW_CAUSE,''))\tas \"ROW_CAUSE\"\n\t, TRIM(COALESCE(SOURCE_DELETED_IND,''))\t(TITLE'') as \"DELETED_IND\"\n FROM \n\tLATAMCRMFBICNTRYBRVW.V_ACCOUNT_TERRITORY\n WHERE\n\tSOURCE_DELETED_IND = '0'\n\tAND TERRITORY_ID <> '-1';",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_ACESSO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_ACESSO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_CAUSE",
											"type": "String"
										},
										"sink": {
											"name": "ROW_CAUSE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Painel_Medico_Associado_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Cad_Promo_Items_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Survey_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT  \n\tTRIM(COALESCE(PRICING_BOUND_IND,''))  as \"PRICING_BOUND_IND\"\n\t,TRIM(COALESCE(DELETED_IND,''))  as \"DELETED_IND\"\n\t,TRIM(COALESCE(PRODUCT_NAME,''))  as \"PRODUCT_NAME\"\n\t,TRIM(COALESCE(PARENT_PRODUCT_AID,''))  as \"PARENT_PRODUCT_AID\"\n\t,TRIM(COALESCE(INVENTORY_QUANTITY_PER_CASE,''))  as \"INVENTORY_QUANTITY_PER_CASE\"\n\t,TRIM(COALESCE(EXTERNAL_AID,''))  as \"EXTERNAL_AID\"\n\t,TRIM(COALESCE(PRODUCT_TYPE,''))  as \"PRODUCT_TYPE\"\n\t,TRIM(COALESCE(COMPANY_PRODUCT_IND,''))  as \"COMPANY_PRODUCT_IND\"\n\t,TRIM(COALESCE(CONSUMER_SITE,''))  as \"CONSUMER_SITE\"\n\t,TRIM(COALESCE(QUANTITY_PER_CASE,''))  as \"QUANTITY_PER_CASE\"\n\t,TRIM(COALESCE(CURRENCY_CODE,''))  as \"CURRENCY_CODE\"\n\t,TRIM(COALESCE(CAST(LAST_MODIFIED_DATE_TS AS VARCHAR(100)),'')) as \"LAST_MODIFIED_DATE_TS\"   \n\t,TRIM(COALESCE(COST,''))  as \"COST\"\n\t,TRIM(COALESCE(NO_METRICS_IND,'')) as \"NO_METRIC_IND\" \n\t,TRIM(COALESCE(REQUIRE_KEY_MSG_ON_DTL_IND,''))  as \"REQUIRE_KEY_MSG_ON_DTL_IND\"\n\t,TRIM(COALESCE(SAMPLE_QUANTITY_BOUND_IND,''))  as \"SAMPLE_QUANTITY_BOUND_IND\"\n\t,TRIM(COALESCE(INSTANCE_ID,''))  as \"INSTANCE_ID\"\n\t,TRIM(COALESCE(SCHEDULE,''))  as \"SCHEDULE\"\n\t,TRIM(COALESCE(SAMPLE_UOM,''))  as \"SAMPLE_UOM\"\n\t,TRIM(COALESCE(DISPLAY_ORDER,''))  as \"DISPLAY_ORDER\"\n\t,TRIM(COALESCE(PRODUCT_DESCRIPTION,''))  as \"PRODUCT_DESCRIPTION\"\n\t,TRIM(COALESCE(SOURCE_PRODUCT_CATALOG_AID,''))  as \"SOURCE_PRODUCT_CATALOG_AID\"\n\t,TRIM(COALESCE(COUNTRY_CODE,''))  as \"COUNTRY_CODE\"\n\t,TRIM(COALESCE(RESTRICTED_IND,''))  as \"RESTRICTED_IND\"\n\t,TRIM(COALESCE(NO_CYCLE_PLANS_IND,''))  as \"NO_CYCLE_PLANS_IND\"\n\t,TRIM(COALESCE(VEEVA_EXTERNAL_AID,''))  as \"VEEVA_EXTERNAL_AID\"\n\t,TRIM(COALESCE(SORT_CODE,''))  as \"SORT_CODE\"\n\t,TRIM(COALESCE(THERAPEUTIC_AREA,''))  as \"THERAPEUTIC_AREA\"\n\t,TRIM(COALESCE(USER_ALIGNED_IND,''))  as \"USER_ALIGNED_IND\"\n\t,TRIM(COALESCE(PRODUCT_INFO,''))  as \"PRODUCT_INFO\"\n\t,TRIM(COALESCE(LAST_MODIFIED_BY_AID,''))  as \"LAST_MODIFIED_BY_AID\"\n\t,TRIM(COALESCE(THERAPEUTIC_CLASS,''))  as \"THERAPEUTIC_CLASS\"\n\t,TRIM(COALESCE(MANUFACTURER,''))  as \"MANUFACTURER\"\n\t,TRIM(COALESCE(LOCKED_IND,''))  as \"LOCKED_IND\"\n\t,TRIM(COALESCE(CONTROLLED_SUBSTANCE_IND,''))   as \"CONTROLLED_SUBSTANCE_IND\"\n\t,TRIM(COALESCE(PRODUCT_CATALOG_ID,''))  as \"PRODUCT_CATALOG_ID\"\n\t,TRIM(COALESCE(RESTRICTED_STATES,'')) as \"RESTRICTED_STATES\"\n\t,TRIM(COALESCE(DISTRIBUTOR,''))  as \"DISTRIBUTOR\"\n\t,TRIM(COALESCE(PRICING_RULE_QTY_BOUND_IND,''))  as \"PRICING_RULE_QTY_BOUND_IND\"\n\t,TRIM(COALESCE(BATCH_ID,''))  as \"BATCH_ID\"\n\t,TRIM(COALESCE(OWNER_AID,'')) as \"OWNER_AID\"\n\t,TRIM(COALESCE(RX_EXTERNAL_ID,''))  as \"RX_EXTERNAL_ID\"\n\t,TRIM(COALESCE(NO_DETAILS_IND,''))  as \"NO_DETAILS_IND\"\n\t,TRIM(COALESCE(INVENTORY_ORDER_UOM,''))  as \"INVENTORY_ORDER_UOM\"\n\t,TRIM(COALESCE(GSK_INACTIVE_IND,''))  (TITLE'')  as \"GSK_INACTIVE_IND\"\n FROM \n\tLATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PRICING_BOUND_IND",
											"type": "String"
										},
										"sink": {
											"name": "PRICING_BOUND_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PARENT_PRODUCT_AID",
											"type": "String"
										},
										"sink": {
											"name": "PARENT_PRODUCT_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVENTORY_QUANTITY_PER_CASE",
											"type": "String"
										},
										"sink": {
											"name": "INVENTORY_QUANTITY_PER_CASE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_AID",
											"type": "String"
										},
										"sink": {
											"name": "EXTERNAL_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COMPANY_PRODUCT_IND",
											"type": "String"
										},
										"sink": {
											"name": "COMPANY_PRODUCT_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONSUMER_SITE",
											"type": "String"
										},
										"sink": {
											"name": "CONSUMER_SITE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QUANTITY_PER_CASE",
											"type": "String"
										},
										"sink": {
											"name": "QUANTITY_PER_CASE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CURRENCY_CODE",
											"type": "String"
										},
										"sink": {
											"name": "CURRENCY_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LAST_MODIFIED_DATE_TS",
											"type": "String"
										},
										"sink": {
											"name": "LAST_MODIFIED_DATE_TS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COST",
											"type": "String"
										},
										"sink": {
											"name": "COST",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NO_METRIC_IND",
											"type": "String"
										},
										"sink": {
											"name": "NO_METRIC_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "REQUIRE_KEY_MSG_ON_DTL_IND",
											"type": "String"
										},
										"sink": {
											"name": "REQUIRE_KEY_MSG_ON_DTL_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SAMPLE_QUANTITY_BOUND_IND",
											"type": "String"
										},
										"sink": {
											"name": "SAMPLE_QUANTITY_BOUND_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INSTANCE_ID",
											"type": "String"
										},
										"sink": {
											"name": "INSTANCE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SCHEDULE",
											"type": "String"
										},
										"sink": {
											"name": "SCHEDULE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SAMPLE_UOM",
											"type": "String"
										},
										"sink": {
											"name": "SAMPLE_UOM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISPLAY_ORDER",
											"type": "String"
										},
										"sink": {
											"name": "DISPLAY_ORDER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SOURCE_PRODUCT_CATALOG_AID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_PRODUCT_CATALOG_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY_CODE",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESTRICTED_IND",
											"type": "String"
										},
										"sink": {
											"name": "RESTRICTED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NO_CYCLE_PLANS_IND",
											"type": "String"
										},
										"sink": {
											"name": "NO_CYCLE_PLANS_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VEEVA_EXTERNAL_AID",
											"type": "String"
										},
										"sink": {
											"name": "VEEVA_EXTERNAL_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SORT_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SORT_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "THERAPEUTIC_AREA",
											"type": "String"
										},
										"sink": {
											"name": "THERAPEUTIC_AREA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_ALIGNED_IND",
											"type": "String"
										},
										"sink": {
											"name": "USER_ALIGNED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_INFO",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_INFO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LAST_MODIFIED_BY_AID",
											"type": "String"
										},
										"sink": {
											"name": "LAST_MODIFIED_BY_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "THERAPEUTIC_CLASS",
											"type": "String"
										},
										"sink": {
											"name": "THERAPEUTIC_CLASS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MANUFACTURER",
											"type": "String"
										},
										"sink": {
											"name": "MANUFACTURER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCKED_IND",
											"type": "String"
										},
										"sink": {
											"name": "LOCKED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONTROLLED_SUBSTANCE_IND",
											"type": "String"
										},
										"sink": {
											"name": "CONTROLLED_SUBSTANCE_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESTRICTED_STATES",
											"type": "String"
										},
										"sink": {
											"name": "RESTRICTED_STATES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DISTRIBUTOR",
											"type": "String"
										},
										"sink": {
											"name": "DISTRIBUTOR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRICING_RULE_QTY_BOUND_IND",
											"type": "String"
										},
										"sink": {
											"name": "PRICING_RULE_QTY_BOUND_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BATCH_ID",
											"type": "String"
										},
										"sink": {
											"name": "BATCH_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OWNER_AID",
											"type": "String"
										},
										"sink": {
											"name": "OWNER_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_EXTERNAL_ID",
											"type": "String"
										},
										"sink": {
											"name": "RX_EXTERNAL_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NO_DETAILS_IND",
											"type": "String"
										},
										"sink": {
											"name": "NO_DETAILS_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INVENTORY_ORDER_UOM",
											"type": "String"
										},
										"sink": {
											"name": "INVENTORY_ORDER_UOM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GSK_INACTIVE_IND",
											"type": "String"
										},
										"sink": {
											"name": "GSK_INACTIVE_IND",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Cad_Promo_Items_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Survey_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Atividades_TFT_Territorio_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n     TRIM(COALESCE(B.SURVEY_TARGET_NAME,''))   as \"NOME_SURVEY\"\n     , TRIM(COALESCE(CAST(A.SOURCE_CREATED_TS AS VARCHAR(100)),'')) as \"DATA_CRIACAO\"   \n     , TRIM(COALESCE(CAST(A.SOURCE_LAST_MODIFIED_TS AS VARCHAR(100)),''))  as \"DATA_MODIFICACAO\" \n     , TRIM(COALESCE(B.ACCOUNT_ID,''))   as \"ROW_ID_CONTATO\"\n     , TRIM(COALESCE(D.ALIAS_NAME,''))   as \"ROW_ID_TERRITORIO\"\n     , TRIM(COALESCE(A.QUESTION_ID,''))  as \"ROW_ID_PERGUNTA\" \n     , TRIM(COALESCE(A.RESPONSE_NAME,''))   as \"ROW_ID_RESPOSTA\"\n     , TRIM(COALESCE(E.QUESTION_TEXT,''))   as \"PERGUNTA\"\n     , ''   as \"PESO\"\n     , TRIM(COALESCE(A.RESPONSE_NUMBER,'')) as \"RESPOSTA_NUMERICA\"   \n     , TRIM(COALESCE(A.RESPONSE,''))   as \"RESPOSTA\"\n     , TRIM(COALESCE(A.RESPONSE_TEXT,''))   as \"RESPOSTA_TEXTO\"\n     , TRIM(COALESCE(A.RESPONSE_DECIMAL_VALUE,''))   as \"RESPOSTA_DECIMAL\"\n     , TRIM(COALESCE(B.STATUS,''))  as \"STATUS\"\n     , ''  as \"RESPOSTA_FINAL\"\n     , TRIM(COALESCE(A.SURVEY_TARGET_ID,''))  (TITLE'') as \"SURVEY_ID\"\n FROM\n     LATAMCRMFBICNTRYBRVW.F_SURVEY_RESPONSES A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.F_SURVEY_TARGETS B\n     ON   A.SURVEY_TARGET_ID = B.SURVEY_TARGET_ID\n     \n     LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_SURVEY_QUESTION E\n     ON   A.QUESTION_ID = E.QUESTION_ID\n     \n     LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_USER D\n     ON   A.SOURCE_CREATED_BY_AID = D.SOURCE_USER_AID\n WHERE\n       \n      ((EXTRACT(YEAR FROM A.SOURCE_CREATED_TS) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      EXTRACT(MONTH FROM A.SOURCE_CREATED_TS) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (EXTRACT(YEAR FROM A.SOURCE_CREATED_TS) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      EXTRACT(MONTH FROM A.SOURCE_CREATED_TS) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) ))\n     OR\n     (EXTRACT(YEAR FROM A.SOURCE_CREATED_TS) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      EXTRACT(MONTH FROM A.SOURCE_CREATED_TS) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -2) )));",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "NOME_SURVEY",
											"type": "String"
										},
										"sink": {
											"name": "NOME_SURVEY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_CRIACAO",
											"type": "String"
										},
										"sink": {
											"name": "DATA_CRIACAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_MODIFICACAO",
											"type": "String"
										},
										"sink": {
											"name": "DATA_MODIFICACAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_PERGUNTA",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_PERGUNTA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_RESPOSTA",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_RESPOSTA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PERGUNTA",
											"type": "String"
										},
										"sink": {
											"name": "PERGUNTA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PESO",
											"type": "String"
										},
										"sink": {
											"name": "PESO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPOSTA_NUMERICA",
											"type": "String"
										},
										"sink": {
											"name": "RESPOSTA_NUMERICA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPOSTA",
											"type": "String"
										},
										"sink": {
											"name": "RESPOSTA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPOSTA_TEXTO",
											"type": "String"
										},
										"sink": {
											"name": "RESPOSTA_TEXTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPOSTA_DECIMAL",
											"type": "String"
										},
										"sink": {
											"name": "RESPOSTA_DECIMAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RESPOSTA_FINAL",
											"type": "String"
										},
										"sink": {
											"name": "RESPOSTA_FINAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SURVEY_ID",
											"type": "String"
										},
										"sink": {
											"name": "SURVEY_ID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Survey_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Atividades_TFT_Territorio_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Visitas_Realizadas_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n     TRIM(COALESCE(NAME,''))   as \"ROW_ID\"\n     , ''    as \"TERRITORIO\"\n     , TRIM(COALESCE(USER_ID,''))   as \"ROW_ID_FUNCIONARIO\"\n     , TRIM(COALESCE(TERRITORY_ID,''))   AS \"ROW_ID_POSICAO\"\n     , TRIM(COALESCE(CAST(START_DATE_ID AS VARCHAR(100)),''))   as \"DATATOT\"\n     , TRIM(COALESCE(REASON,''))   as \"DESCRICAO\"\n     , TRIM(COALESCE(HOURS,''))  (TITLE'') as \"TEMPO\"\n FROM \n     LATAMCRMFBICNTRYBRVW.F_TIME_OFF_TERRITORY\n WHERE\n     DELETED_IND = 0 AND\n     \n     ((SUBSTR(CAST(START_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(START_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(START_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(START_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) )));",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROW_ID",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_FUNCIONARIO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_FUNCIONARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_POSICAO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_POSICAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATATOT",
											"type": "String"
										},
										"sink": {
											"name": "DATATOT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRICAO",
											"type": "String"
										},
										"sink": {
											"name": "DESCRICAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TEMPO",
											"type": "String"
										},
										"sink": {
											"name": "TEMPO",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Atividades_TFT_Territorio_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Visitas_Realizadas_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Key_Message_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n     TRIM(COALESCE(A.DELETED_IND,'')) as \"DELETED_IND\"\n     ,TRIM(COALESCE(A.CALL_STATUS,'')) as \"CALL_STATUS\"\n     ,''   as \"TERRITORIO\"\n     ,''   as \"ROW_ID_FUNCIONARIO\"\n     ,TRIM(COALESCE(A.TERRITORY_ID,''))  as \"ROW_ID_POSICAO\"   \n     ,TRIM(COALESCE(A.CALL_NAME,''))   as \"ACTIVITY_UID\"    \n     ,TRIM(COALESCE(A.ATTENDEE_TYPE,''))    as \"TIPO\"\n     ,TRIM(COALESCE(A.LOCAL_CALL_DATE_ID,''))  as \"TODO_PLAN_START_DT\"  \n     ,TRIM(COALESCE(A.LOCAL_CALL_TIME_ID,''))  as  \"HORA\"\n     ,''   as \"NOMECONTATOCONTA\"\n     ,TRIM(COALESCE(A.OWNER_ID,'')) as \"OWNER_PER_ID\"   \n     ,''  as \"OWNER_POSTN_ID\"\n     ,''   as \"DIVISAO\"\n     ,''   as \"ROW_ID_DIVISAO\"\n     ,TRIM(COALESCE(A.CALL_TYPE,'')) as \"TODO_CD\"       \n     ,TRIM(COALESCE(A.ACCOUNT_ID,'')) as \"TARGET_PER_ID\"\n     ,TRIM(COALESCE(A.RX_CALL_TYPE,''))  as \"TARGET_OU_ID\"   \n     ,TRIM(COALESCE(A.DETAILED_PRODUCTS,'')) as \"COMENTARIOS\"\n     ,''   as \"UFDOCUMENTO\"\n     ,''   as \"NUMERODOCUMENTO\"\n     ,TRIM(COALESCE(B.ADDRESS_ID,'')) as \"ROW_ID_ENDERECO\" \n     ,TRIM(COALESCE(A.CLM_IND,''))    as \"CLM_IND\"\n     ,TRIM(COALESCE(A.NEXT_CALL_NOTES,'')) as \"NEXT_CALL_NOTES\"\n     ,TRIM(COALESCE(A.RECORD_TYPE_ID,'')) as \"RECORD_TYPE_ID\"\n     ,TRIM(COALESCE(R.RECORD_TYPE_NAME,'')) (TITLE'') as \"RECORD_TYPE_NAME\"\n FROM LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_ADDRESS B\n          ON A.PARENT_ADDRESS_ID = B.ADDRESS_ID,\n      LATAMCRMFBICNTRYBRVW.D_RECORD_TYPE R\n WHERE\n     A.CALL_STATUS = 'Submitted_vod' AND\n     A.DELETED_IND = 0 AND\n     \n     ((SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) )))\n     \n     AND (A.CALL_TYPE <> 'Event Detail' AND A.CALL_TYPE <> 'Event Only' AND A.CALL_TYPE <> 'Sample Only' AND A.CALL_TYPE <> oreplace('Item drop#only', '#', ' '))\n     AND A.PARENT_CALL_AID IS NULL\n     AND  A.RECORD_TYPE_ID = R.RECORD_TYPE_ID;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CALL_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "CALL_STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_FUNCIONARIO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_FUNCIONARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_POSICAO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_POSICAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_UID",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVITY_UID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TODO_PLAN_START_DT",
											"type": "String"
										},
										"sink": {
											"name": "TODO_PLAN_START_DT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HORA",
											"type": "String"
										},
										"sink": {
											"name": "HORA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOMECONTATOCONTA",
											"type": "String"
										},
										"sink": {
											"name": "NOMECONTATOCONTA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OWNER_PER_ID",
											"type": "String"
										},
										"sink": {
											"name": "OWNER_PER_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OWNER_POSTN_ID",
											"type": "String"
										},
										"sink": {
											"name": "OWNER_POSTN_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DIVISAO",
											"type": "String"
										},
										"sink": {
											"name": "DIVISAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_DIVISAO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_DIVISAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TODO_CD",
											"type": "String"
										},
										"sink": {
											"name": "TODO_CD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TARGET_PER_ID",
											"type": "String"
										},
										"sink": {
											"name": "TARGET_PER_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TARGET_OU_ID",
											"type": "String"
										},
										"sink": {
											"name": "TARGET_OU_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COMENTARIOS",
											"type": "String"
										},
										"sink": {
											"name": "COMENTARIOS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UFDOCUMENTO",
											"type": "String"
										},
										"sink": {
											"name": "UFDOCUMENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NUMERODOCUMENTO",
											"type": "String"
										},
										"sink": {
											"name": "NUMERODOCUMENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_ENDERECO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_ENDERECO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CLM_IND",
											"type": "String"
										},
										"sink": {
											"name": "CLM_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NEXT_CALL_NOTES",
											"type": "String"
										},
										"sink": {
											"name": "NEXT_CALL_NOTES",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RECORD_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "RECORD_TYPE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RECORD_TYPE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "RECORD_TYPE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Visitas_Realizadas_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Key_Message_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Key_Message_Visitas_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": " SELECT DISTINCT \n\t\t\tTRIM(COALESCE(E.CALL_SUMMARY_ID,'')) as \"CALL_SUMMARY_ID\"\n           , TRIM(COALESCE(D.KEY_MESSAGE_ID,'')) as \"KEY_MESSAGE_ID\"\n\t        , TRIM(COALESCE(D.CATEGORY,'')) as \"CATEGORY\"\n\t        , TRIM(COALESCE(CASE WHEN (D.KEY_MESSAGE_NAME IN ('QUALIFICAÇÃO','QUALIFICAÇ?O')) THEN ('QUALIFICACAO') \n\t                 WHEN (D.KEY_MESSAGE_NAME IN ('PROSPECÇÃO','PROSPECÇ?O')) THEN ('PROSPECCAO') ELSE D.KEY_MESSAGE_NAME END,'')) as \"KEY_MESSAGE_NAME\"\n\t        , TRIM(COALESCE(E.PRODUCT_CATALOG_ID,'')) (TITLE'') as \"PRODUCT_CATALOG_ID\"\n  FROM LATAMCRMFBICNTRYBRVW.F_CALL_MESSAGE E LEFT OUTER JOIN\n                 LATAMCRMFBICNTRYBRVW.D_KEY_MESSAGE D    \n              ON E.KEY_MESSAGE_ID = D.KEY_MESSAGE_ID \n  WHERE D.CATEGORY = 'Key Message';",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CALL_SUMMARY_ID",
											"type": "String"
										},
										"sink": {
											"name": "CALL_SUMMARY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "KEY_MESSAGE_ID",
											"type": "String"
										},
										"sink": {
											"name": "KEY_MESSAGE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CATEGORY",
											"type": "String"
										},
										"sink": {
											"name": "CATEGORY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "KEY_MESSAGE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "KEY_MESSAGE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Key_Message_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Key_Message_Visitas_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Key_Message_Visitas_PAI_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT TRIM(COALESCE(A.CALL_SUMMARY_ID,'')) as \"CALL_SUMMARY_ID\"\n                , TRIM(COALESCE(B.CALL_NAME,'')) as \"CALL_NAME\"\n                , TRIM(COALESCE(A.ACCOUNT_ID,'')) as \"ACCOUNT_ID\"\n                , TRIM(COALESCE(A.TERRITORY_ID,'')) as \"TERRITORY_ID\"\n                , TRIM(COALESCE(A.LOCAL_CALL_DATE_ID,'')) as \"LOCAL_CALL_DATE_ID\"\n             , TRIM(COALESCE(A.SOURCE_CALL_SUMMARY_AID,'')) (TITLE'')  as \"SOURCE_CALL_SUMMARY_AID\"          \n FROM LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY A INNER JOIN\n     LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY B\n   ON A.PARENT_CALL_AID = B.SOURCE_CALL_SUMMARY_AID \n WHERE A.PARENT_CALL_AID IS NOT NULL AND\n\n ((SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) )))\n\n AND (A.CALL_TYPE <> 'Event Detail' AND A.CALL_TYPE <> 'Event Only' AND A.CALL_TYPE <> 'Sample Only');",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CALL_SUMMARY_ID",
											"type": "String"
										},
										"sink": {
											"name": "CALL_SUMMARY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CALL_NAME",
											"type": "String"
										},
										"sink": {
											"name": "CALL_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCAL_CALL_DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "LOCAL_CALL_DATE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SOURCE_CALL_SUMMARY_AID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_CALL_SUMMARY_AID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Key_Message_Visitas_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Key_Message_Visitas_PAI_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Valid_Espec_Favorita_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n\t\t\t\tTRIM(COALESCE(A.CALL_SUMMARY_ID,'')) as \"CALL_SUMMARY_ID\"\n                , TRIM(COALESCE(B.ACCOUNT_ID,'')) (TITLE'')     as \"ACCOUNT_ID\"       \n FROM LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY A INNER JOIN\n     LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY B\n   ON A.PARENT_CALL_AID = B.SOURCE_CALL_SUMMARY_AID \n WHERE A.PARENT_CALL_AID IS NOT NULL AND\n\n (SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) ))\n\n AND (A.CALL_TYPE <> 'Event Detail' AND A.CALL_TYPE <> 'Event Only' AND A.CALL_TYPE <> 'Sample Only');",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CALL_SUMMARY_ID",
											"type": "String"
										},
										"sink": {
											"name": "CALL_SUMMARY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_ID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Key_Message_Visitas_PAI_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Key_Message_Visitas_PAI_Veeva_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n\t\t\t\tTRIM(COALESCE(A.CALL_SUMMARY_ID,'')) as \"CALL_SUMMARY_ID\"\n                , TRIM(COALESCE(B.ACCOUNT_ID,'')) (TITLE'')     as \"ACCOUNT_ID\"       \n FROM LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY A INNER JOIN\n     LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY B\n   ON A.PARENT_CALL_AID = B.SOURCE_CALL_SUMMARY_AID \n WHERE A.PARENT_CALL_AID IS NOT NULL AND\n\n (SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(A.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) ))\n\n AND (A.CALL_TYPE <> 'Event Detail' AND A.CALL_TYPE <> 'Event Only' AND A.CALL_TYPE <> 'Sample Only');",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CALL_SUMMARY_ID",
											"type": "String"
										},
										"sink": {
											"name": "CALL_SUMMARY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_ID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Key_Message_Visitas_PAI_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Valid_Espec_Favorita_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Email_1_1_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n       TRIM(COALESCE(TERRITORY_ID,''))  as \"TERRITORY_ID\"                \n       , TRIM(COALESCE(ACCOUNT_ID,''))  as   \"ACCOUNT_ID\"                \n       , TRIM(COALESCE(BR_GSK_MY_SPECIALTY,''))   as \"BR_GSK_MY_SPECIALTY\"       \n       , TRIM(COALESCE(ADDRESS_ID,'')) as \"ADDRESS_ID\"                  \n       , TRIM(COALESCE(oreplace(TSF_NAME,'BR_',''),'')) (TITLE'')  as \"TSF_NAME\"\n FROM \n            LATAMCRMFBICNTRYBRVW.H_TERR_SPECIFIC_FIELDS\n WHERE  \nSOURCE_DELETED_IND = '0' AND    BR_GSK_MY_SPECIALTY IS NOT NULL; ",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BR_GSK_MY_SPECIALTY",
											"type": "String"
										},
										"sink": {
											"name": "BR_GSK_MY_SPECIALTY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ADDRESS_ID",
											"type": "String"
										},
										"sink": {
											"name": "ADDRESS_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TSF_NAME",
											"type": "String"
										},
										"sink": {
											"name": "TSF_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Valid_Espec_Favorita_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Email_1_1_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Dim_Lote_Amostras",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n     TRIM(COALESCE(A.EMAIL_ACTIVITY_ID,'')) as \"EMAIL_ACTIVITY_ID\"    \n     , TRIM(COALESCE(A.SEND_EMAIL_ID,''))   as \"SEND_EMAIL_ID\"     \n     , TRIM(COALESCE(A.EMAIL_ACTIVITY_NAME,''))   as \"EMAIL_ACTIVITY_NAME\"    \n     , TRIM(COALESCE(A.ACTIVITY_DATE_ID,''))  as \"ACTIVITY_DATE_ID\"      \n     , TRIM(COALESCE(A.ACTIVITY_TIME_ID,''))  as \"ACTIVITY_TIME_ID\"     \n     , TRIM(COALESCE(A.LOCAL_ACTIVITY_DATE_ID,''))  as \"LOCAL_ACTIVITY_DATE_ID\"     \n     , TRIM(COALESCE(A.LOCAL_ACTIVITY_TIME_ID,'')) as \"LOCAL_ACTIVITY_TIME_ID\"      \n     , TRIM(COALESCE(A.OWNER_ID,''))  as \"OWNER_ID\"      \n     , TRIM(COALESCE(A.ACCOUNT_ID,''))    as \"ACCOUNT_ID\"    \n     , TRIM(COALESCE(A.BUSINESS_ACCOUNT_ID,''))  as \"BUSINESS_ACCOUNT_ID\"     \n     , TRIM(COALESCE(A.PRODUCT_CATALOG_ID,''))   as \"PRODUCT_CATALOG_ID\"     \n     , TRIM(COALESCE(A.TERRITORY_ID,''))    as \"TERRITORY_ID\"    \n     , TRIM(COALESCE(A.EVENT_TYPE,''))   as \"EVENT_TYPE\"     \n     , TRIM(COALESCE(A.DEVICE_TYPE,''))  as \"DEVICE_TYPE\"      \n     , TRIM(COALESCE(A.CLICK_URL,''))    as \"CLICK_URL\"    \n     , TRIM(COALESCE(A.APPROVED_DOCUMENT_ID,''))  as \"APPROVED_DOCUMENT_ID\"       \n     , TRIM(COALESCE(B.APPROVED_DOCUMENT_NAME,'')) as \"APPROVED_DOCUMENT_NAME\"       \n     , TRIM(COALESCE(B.DOCUMENT_DESCRIPTION,'')) as \"DOCUMENT_DESCRIPTION\"        \n     , TRIM(COALESCE(B.EMAIL_SUBJECT,'')) (TITLE'') as \"EMAIL_SUBJECT\"\n     \n FROM \n     LATAMCRMFBICNTRYBRVW.F_EMAIL_ACTIVITY A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_APPROVED_DOCUMENT B\n     ON A.APPROVED_DOCUMENT_ID = B.APPROVED_DOCUMENT_ID\n WHERE \n     A.DELETED_IND = '0' AND\n\n     ((SUBSTR(CAST(A.LOCAL_ACTIVITY_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(A.LOCAL_ACTIVITY_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(A.LOCAL_ACTIVITY_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(A.LOCAL_ACTIVITY_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) )));",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EMAIL_ACTIVITY_ID",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL_ACTIVITY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SEND_EMAIL_ID",
											"type": "String"
										},
										"sink": {
											"name": "SEND_EMAIL_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL_ACTIVITY_NAME",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL_ACTIVITY_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVITY_DATE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTIVITY_TIME_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACTIVITY_TIME_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCAL_ACTIVITY_DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "LOCAL_ACTIVITY_DATE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCAL_ACTIVITY_TIME_ID",
											"type": "String"
										},
										"sink": {
											"name": "LOCAL_ACTIVITY_TIME_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OWNER_ID",
											"type": "String"
										},
										"sink": {
											"name": "OWNER_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BUSINESS_ACCOUNT_ID",
											"type": "String"
										},
										"sink": {
											"name": "BUSINESS_ACCOUNT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EVENT_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "EVENT_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DEVICE_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "DEVICE_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CLICK_URL",
											"type": "String"
										},
										"sink": {
											"name": "CLICK_URL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "APPROVED_DOCUMENT_ID",
											"type": "String"
										},
										"sink": {
											"name": "APPROVED_DOCUMENT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "APPROVED_DOCUMENT_NAME",
											"type": "String"
										},
										"sink": {
											"name": "APPROVED_DOCUMENT_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOCUMENT_DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "DOCUMENT_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL_SUBJECT",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL_SUBJECT",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Email_1_1_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Dim_Lote_Amostras",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Consent_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n\tTRIM(COALESCE(A.SAMPLE_LOT_ID,'')) as \"SAMPLE_LOT_ID\"\n\t, TRIM(COALESCE(A.DELETED_IND,'')) as \"DELETED_IND\"\n\t, TRIM(COALESCE(A.SOURCE_SAMPLE_LOT_AID,'')) as \"SOURCE_SAMPLE_LOT_AID\"\n\t, TRIM(COALESCE(A.RX_EXTERNAL_SAMPLE_LOT_AID,'')) as \"RX_EXTERNAL_SAMPLE_LOT_AID\"\n\t, TRIM(COALESCE(A.SAMPLE_NAME,'')) as \"SAMPLE_NAME\"\n\t, TRIM(COALESCE(B.ALIAS_NAME,'')) (TITLE'') as \"ALIAS_NAME\"\n FROM \n\tLATAMCRMFBICNTRYBRVW.D_SAMPLE_LOT A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_USER B\n\tON A.OWNER_AID = B.SOURCE_USER_AID;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SAMPLE_LOT_ID",
											"type": "String"
										},
										"sink": {
											"name": "SAMPLE_LOT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SOURCE_SAMPLE_LOT_AID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_SAMPLE_LOT_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_EXTERNAL_SAMPLE_LOT_AID",
											"type": "String"
										},
										"sink": {
											"name": "RX_EXTERNAL_SAMPLE_LOT_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SAMPLE_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SAMPLE_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ALIAS_NAME",
											"type": "String"
										},
										"sink": {
											"name": "ALIAS_NAME",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Dim_Lote_Amostras.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Consent_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Visitas_Realizadas_Detail_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n\tTRIM(COALESCE(A.MC_CONSENT_ID,'')) \t\t\t\t\tas \"MC_CONSENT_ID\"\n\t, TRIM(COALESCE(A.EXTERNAL_AID,''))                   as \"EXTERNAL_AID\"\n\t, TRIM(COALESCE(A.SOURCE_MC_CONSENT_AID,''))          as \"SOURCE_MC_CONSENT_AID\"\n\t, TRIM(COALESCE(A.INSTANCE_ID,''))                    as \"INSTANCE_ID\"\n\t, TRIM(COALESCE(A.BATCH_ID,''))                       as \"BATCH_ID\"\n\t, TRIM(COALESCE(A.PAPER_CONSENT_AID,''))              as \"PAPER_CONSENT_AID\"\n\t, TRIM(COALESCE(A.CAPTURE_DATE_ID,''))                as \"CAPTURE_DATE_ID\"\n\t, TRIM(COALESCE(A.DETAIL_GROUP_ID,''))                as \"DETAIL_GROUP_ID\"\n\t, TRIM(COALESCE(A.ACCOUNT_ID,''))                     as \"ACCOUNT_ID\"\n\t, TRIM(COALESCE(A.PRODUCT_CATALOG_ID,''))             as \"PRODUCT_CATALOG_ID\"\n\t, TRIM(COALESCE(A.TERRITORY_ID,''))                   as \"TERRITORY_ID\"\n\t, TRIM(COALESCE(A.RECORD_TYPE_ID,''))                 as \"RECORD_TYPE_ID\"\n\t, TRIM(COALESCE(A.CAPTURE_TIME_ID,''))                as \"CAPTURE_TIME_ID\"\n\t, TRIM(COALESCE(A.EXPIRATION_DATE_ID,''))             as \"EXPIRATION_DATE_ID\"\n\t, TRIM(COALESCE(A.SIGNATURE_DATETIME_ID,''))          as \"SIGNATURE_DATETIME_ID\"\n\t, TRIM(COALESCE(A.PRODUCT_HIERARCHY_ID,''))           as \"PRODUCT_HIERARCHY_ID\"\n\t, TRIM(COALESCE(A.PRODUCT_DEFINED_HIERARCHY_ID,''))   as \"PRODUCT_DEFINED_HIERARCHY_ID\"\n\t, TRIM(COALESCE(A.TERRITORY_HIERARCHY_ID,''))         as \"TERRITORY_HIERARCHY_ID\"\n\t, TRIM(COALESCE(A.CHANNEL_VALUE,''))                  as \"CHANNEL_VALUE\"\n\t, TRIM(COALESCE(A.OPTION_NUMBER,''))                  as \"OPTION_NUMBER\"\n\t, TRIM(COALESCE(A.OPTION_TYPE,''))                    as \"OPTION_TYPE\"\n\t, TRIM(COALESCE(A.EVENT_TYPE,''))                     as \"EVENT_TYPE\"\n\t, TRIM(COALESCE(A.DELETED_IND,''))                    as \"DELETED_IND\"\n\t, TRIM(COALESCE(A.USER_TERRITORY_HELPER_ID,''))       as \"USER_TERRITORY_HELPER_ID\"\n\t, TRIM(COALESCE(A.SCD_ACCOUNT_PERSONA_ID,''))         as \"SCD_ACCOUNT_PERSONA_ID\"\n\t, TRIM(COALESCE(A.SCD_ACCOUNT_SPECIALTY_ID,''))       as \"SCD_ACCOUNT_SPECIALTY_ID\"\n\t, TRIM(COALESCE(A.SCD_ACCOUNT_SEGMENT_ID,''))         as \"SCD_ACCOUNT_SEGMENT_ID\"\n\t, TRIM(COALESCE(A.SCD_ACCOUNT_CUSTOMER_JOURNEY_ID,'')) as \"SCD_ACCOUNT_CUSTOMER_JOURNEY_ID\"\n\t, TRIM(COALESCE(A.TERRITORY_DEFINED_HIERARCHY_ID,'')) as \"TERRITORY_DEFINED_HIERARCHY_ID\"\n\t, TRIM(COALESCE(A.COUNTRY_ID,''))                     as \"COUNTRY_ID\"\n\t, TRIM(COALESCE(A.COUNTRY_CODE,''))\t(TITLE'')       as \"COUNTRY_CODE\"\n\t, TRIM(COALESCE(B.RECORD_TYPE_NAME,'')) AS \"RECORD_TYPE_NAME\"\n FROM\tLATAMCRMFBICNTRYBRVW.F_MC_CONSENT A\n\tLEFT JOIN LATAMCRMFBICNTRYBRVW.D_RECORD_TYPE as B ON A.RECORD_TYPE_ID = B.RECORD_TYPE_ID\n WHERE\n\tA.DELETED_IND = '0';",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "MC_CONSENT_ID",
											"type": "String"
										},
										"sink": {
											"name": "MC_CONSENT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_AID",
											"type": "String"
										},
										"sink": {
											"name": "EXTERNAL_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SOURCE_MC_CONSENT_AID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_MC_CONSENT_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INSTANCE_ID",
											"type": "String"
										},
										"sink": {
											"name": "INSTANCE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BATCH_ID",
											"type": "String"
										},
										"sink": {
											"name": "BATCH_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PAPER_CONSENT_AID",
											"type": "String"
										},
										"sink": {
											"name": "PAPER_CONSENT_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CAPTURE_DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "CAPTURE_DATE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DETAIL_GROUP_ID",
											"type": "String"
										},
										"sink": {
											"name": "DETAIL_GROUP_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RECORD_TYPE_ID",
											"type": "String"
										},
										"sink": {
											"name": "RECORD_TYPE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CAPTURE_TIME_ID",
											"type": "String"
										},
										"sink": {
											"name": "CAPTURE_TIME_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXPIRATION_DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "EXPIRATION_DATE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SIGNATURE_DATETIME_ID",
											"type": "String"
										},
										"sink": {
											"name": "SIGNATURE_DATETIME_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_HIERARCHY_ID",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_HIERARCHY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_DEFINED_HIERARCHY_ID",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_DEFINED_HIERARCHY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY_HIERARCHY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_HIERARCHY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL_VALUE",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL_VALUE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OPTION_NUMBER",
											"type": "String"
										},
										"sink": {
											"name": "OPTION_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OPTION_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "OPTION_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EVENT_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "EVENT_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_TERRITORY_HELPER_ID",
											"type": "String"
										},
										"sink": {
											"name": "USER_TERRITORY_HELPER_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SCD_ACCOUNT_PERSONA_ID",
											"type": "String"
										},
										"sink": {
											"name": "SCD_ACCOUNT_PERSONA_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SCD_ACCOUNT_SPECIALTY_ID",
											"type": "String"
										},
										"sink": {
											"name": "SCD_ACCOUNT_SPECIALTY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SCD_ACCOUNT_SEGMENT_ID",
											"type": "String"
										},
										"sink": {
											"name": "SCD_ACCOUNT_SEGMENT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SCD_ACCOUNT_CUSTOMER_JOURNEY_ID",
											"type": "String"
										},
										"sink": {
											"name": "SCD_ACCOUNT_CUSTOMER_JOURNEY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY_DEFINED_HIERARCHY_ID",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY_DEFINED_HIERARCHY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY_ID",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COUNTRY_CODE",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY_CODE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Consent_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Visitas_Realizadas_Detail_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Cad_MCCP_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n    TRIM(B.CALL_NAME)        as \"CALL_NAME\" \n    , TRIM(A.LOCAL_CALL_DATE_ID)      as \"LOCAL_CALL_DATE_ID\"\n    , TRIM(A.LOCAL_CALL_TIME_ID)      as \"LOCAL_CALL_TIME_ID\"\n    , TRIM(A.PRODUCT_CATALOG_ID)      as \"PRODUCT_CATALOG_ID\"\n    , TRIM(A.DETAIL_TYPE)        as \"DETAIL_TYPE\"\n    , TRIM(A.CALL_TYPE)          as \"CALL_TYPE\"\n    , TRIM(A.PRIORITY) (TITLE'') as \"PRIORITY\"\n FROM \n     LATAMCRMFBICNTRYBRVW.F_CALL_DETAIL A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY B\n    ON   A.SOURCE_CALL_SUMMARY_AID = B.SOURCE_CALL_SUMMARY_AID\n WHERE\n    EXISTS (SELECT C.SOURCE_CALL_SUMMARY_AID \n                FROM \n                     LATAMCRMFBICNTRYBRVW.F_CALL_SUMMARY C\n               WHERE\n                    A.SOURCE_CALL_SUMMARY_AID = C.SOURCE_CALL_SUMMARY_AID AND\n                    C.CALL_STATUS = 'Submitted_vod' AND\n                     C.DELETED_IND = 0 AND\n                     \n                     ((SUBSTR(CAST(C.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n                      SUBSTR(CAST(C.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n                     OR\n                     (SUBSTR(CAST(C.LOCAL_CALL_DATE_ID as VARCHAR(8)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n                      SUBSTR(CAST(C.LOCAL_CALL_DATE_ID as VARCHAR(8)),5,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) )))\n                     \n                     AND (C.CALL_TYPE <> 'Event Detail' AND C.CALL_TYPE <> 'Event Only' AND C.CALL_TYPE <> 'Sample Only' AND C.CALL_TYPE <> oReplace('Item drop#only', '#', ' '))\n                     AND C.PARENT_CALL_AID IS NULL);",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CALL_NAME",
											"type": "String"
										},
										"sink": {
											"name": "CALL_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCAL_CALL_DATE_ID",
											"type": "String"
										},
										"sink": {
											"name": "LOCAL_CALL_DATE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCAL_CALL_TIME_ID",
											"type": "String"
										},
										"sink": {
											"name": "LOCAL_CALL_TIME_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_CATALOG_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DETAIL_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "DETAIL_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CALL_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "CALL_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRIORITY",
											"type": "String"
										},
										"sink": {
											"name": "PRIORITY",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Visitas_Realizadas_Detail_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Cad_MCCP_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Cad_Contas_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n     TRIM(COALESCE(A.SOURCE_MC_CYCLE_PLAN_AID,'')) \t\t\t\t\tas \"SOURCE_MC_CYCLE_PLAN_AID\"\n     , TRIM(COALESCE(C.USER_ID,''))                                 as \"USER_ID\"\n     , TRIM(COALESCE(CAST(A.START_DATE AS VARCHAR(100)),''))        as \"START_DATE\"\n     , TRIM(COALESCE(CAST(A.END_DATE AS VARCHAR(100)),''))          as \"END_DATE\"\n     , TRIM(COALESCE(A.CHANNEL_INTERACTIONS_GOAL,''))               as \"CHANNEL_INTERACTIONS_GOAL_CYCLE\"\n     , TRIM(COALESCE(A.DAYS_REMAINING,''))                          as \"DAYS_REMAINING\"\n     , TRIM(COALESCE(A.DAYS_TOTAL,''))                              as \"DAYS_TOTAL\"\n     , TRIM(COALESCE(A.CYCLE_PLAN_NAME,''))                         as \"CYCLE_PLAN_NAME\"\n     , TRIM(COALESCE(A.CYCLE_COMPLETED_PERCENTAGE,''))              as \"CYCLE_COMPLETED_PERCENTAGE\"\n     , TRIM(COALESCE(A.PRODUCT_INTERACTION_STATUS,''))              as \"PRODUCT_INTERACTION_STATUS\"\n     , TRIM(COALESCE(A.PRODUCT_INTERACTIONS_GOAL,''))               as \"PRODUCT_INTERACTIONS_GOAL_CYLE\"\n     , TRIM(COALESCE(A.RECORD_TYPE,''))                             as \"RECORD_TYPE\"\n     , TRIM(COALESCE(A.STATUS,''))                                  as \"STATUS_CYCLE\"\n     , TRIM(COALESCE(A.TERRITORY,''))                               as \"TERRITORY\"\n     , TRIM(COALESCE(A.MC_CYCLE_AID,''))                            as \"MC_CYCLE_AID\"\n     , TRIM(COALESCE(B.MC_CYCLE_PLAN_TARGET_ID,''))                 as \"MC_CYCLE_PLAN_TARGET_ID\"\n     , TRIM(COALESCE(B.SRC_MY_CYCLE_PLAN_TARGET_AID,''))            as \"SRC_MY_CYCLE_PLAN_TARGET_AID\"\n     , TRIM(COALESCE(B.CYCLE_PLAN_TARGET_NAME,''))                  as \"CYCLE_PLAN_TARGET_NAME\"\n     , TRIM(COALESCE(B.CHANNEL_INTERACTIONS_ACTUAL,''))             as \"CHANNEL_INTERACTIONS_ACTUAL\"\n     , TRIM(COALESCE(B.CHANNEL_INTERACTIONS_GOAL,''))               as \"CHANNEL_INTERACTIONS_GOAL\"\n     , TRIM(COALESCE(B.CHANNEL_INTERACTIONS_REMAINING,''))          as \"CHANNEL_INTERACTIONS_REMAINING\"\n     , TRIM(COALESCE(B.PRODUCT_INTERACTIONS_GOAL,''))               as \"PRODUCT_INTERACTIONS_GOAL\"\n     , TRIM(COALESCE(B.CHANNEL_STATUS,''))                          as \"CHANNEL_STATUS\"\n     , TRIM(COALESCE(B.PRODUCT_STATUS,''))                          as \"PRODUCT_STATUS\"\n     , TRIM(COALESCE(B.STATUS,''))                                  as \"STATUS\"\n     , TRIM(COALESCE(B.ACCOUNT_AID,''))                             as \"ACCOUNT_AID\"\n     , TRIM(COALESCE(CAST(B.CREATED_DATE AS VARCHAR(100)),''))      as \"CREATED_DATE\"     \n     , TRIM(COALESCE(CAST(B.LAST_MODIFIED_DATE AS VARCHAR(100)),'')) (TITLE'') as \"LAST_MODIFIED_DATE\"\n FROM\n  LATAMCRMFBICNTRYBRVW.D_MC_CYCLE_PLAN A\n  LEFT OUTER JOIN (\n               SELECT *\n               FROM\n                     LATAMCRMFBICNTRYBRVW.D_MC_CYCLE_PLAN_TARGET\n               WHERE\n                    DELETED_IND = '0' OR (DELETED_IND = '1' AND ARCHIVED_IND = '1')) B\n ON A.SOURCE_MC_CYCLE_PLAN_AID = B.MC_CYCLE_PLAN_AID\n          LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_USER C\n  ON                 A.OWNER_AID = C.SOURCE_USER_AID\n WHERE\n (A.DELETED_IND = 0 OR (A.DELETED_IND = '1' AND A.ARCHIVED_IND = '1'))\n AND \n\n     ((SUBSTR(CAST(A.START_DATE as VARCHAR(10)),1,4) = EXTRACT (YEAR FROM CURRENT_DATE) AND \n      SUBSTR(CAST(A.START_DATE as VARCHAR(10)),6,2) = EXTRACT (MONTH FROM CURRENT_DATE))\n     OR\n     (SUBSTR(CAST(A.START_DATE as VARCHAR(10)),1,4) = EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -1) ) AND \n      SUBSTR(CAST(A.START_DATE as VARCHAR(10)),6,2) = EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -1) )));",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SOURCE_MC_CYCLE_PLAN_AID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_MC_CYCLE_PLAN_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_ID",
											"type": "String"
										},
										"sink": {
											"name": "USER_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "START_DATE",
											"type": "String"
										},
										"sink": {
											"name": "START_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "END_DATE",
											"type": "String"
										},
										"sink": {
											"name": "END_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL_INTERACTIONS_GOAL_CYCLE",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL_INTERACTIONS_GOAL_CYCLE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DAYS_REMAINING",
											"type": "String"
										},
										"sink": {
											"name": "DAYS_REMAINING",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DAYS_TOTAL",
											"type": "String"
										},
										"sink": {
											"name": "DAYS_TOTAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CYCLE_PLAN_NAME",
											"type": "String"
										},
										"sink": {
											"name": "CYCLE_PLAN_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CYCLE_COMPLETED_PERCENTAGE",
											"type": "String"
										},
										"sink": {
											"name": "CYCLE_COMPLETED_PERCENTAGE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_INTERACTION_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_INTERACTION_STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_INTERACTIONS_GOAL_CYLE",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_INTERACTIONS_GOAL_CYLE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RECORD_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "RECORD_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS_CYCLE",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CYCLE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TERRITORY",
											"type": "String"
										},
										"sink": {
											"name": "TERRITORY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MC_CYCLE_AID",
											"type": "String"
										},
										"sink": {
											"name": "MC_CYCLE_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MC_CYCLE_PLAN_TARGET_ID",
											"type": "String"
										},
										"sink": {
											"name": "MC_CYCLE_PLAN_TARGET_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SRC_MY_CYCLE_PLAN_TARGET_AID",
											"type": "String"
										},
										"sink": {
											"name": "SRC_MY_CYCLE_PLAN_TARGET_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CYCLE_PLAN_TARGET_NAME",
											"type": "String"
										},
										"sink": {
											"name": "CYCLE_PLAN_TARGET_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL_INTERACTIONS_ACTUAL",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL_INTERACTIONS_ACTUAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL_INTERACTIONS_GOAL",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL_INTERACTIONS_GOAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL_INTERACTIONS_REMAINING",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL_INTERACTIONS_REMAINING",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_INTERACTIONS_GOAL",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_INTERACTIONS_GOAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CHANNEL_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "CHANNEL_STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUCT_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "PRODUCT_STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_AID",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREATED_DATE",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LAST_MODIFIED_DATE",
											"type": "String"
										},
										"sink": {
											"name": "LAST_MODIFIED_DATE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Cad_MCCP_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Cad_Contas_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Cad_Enderecos_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT\n                TRIM(COALESCE(PERSON_EMAIL,''))                       as \"EMAIL\"\n                ,TRIM(COALESCE(PERSON_OTHER_PHONE,''))                as \"OUTRO_TELEFONE\"\n                ,TRIM(COALESCE(RX_LEGAL_ID,''))                       as \"DOCUMENTO\"\n                ,TRIM(COALESCE(RX_OTHER_EMAIL,''))                    as \"OUTRO_EMAIL\"\n                ,TRIM(COALESCE(RX_CONSENT_TO_VISIT_HCO,''))           as \"RX_CONSENT_TO_VISIT_HCO\"\n                ,TRIM(COALESCE(RX_OTHER_ID,''))                       as \"OUTRO_ID\"\n                ,TRIM(COALESCE(RX_HCP_ACCOUNT_TYPE,''))               as \"TIPO_HCP\"\n                ,TRIM(COALESCE(RX_HCO_TYPE,''))                       as \"TIPO_HCO\"\n                ,TRIM(COALESCE(RX_BUSINESS_TYPE,''))                  as \"TIPO_NEGOCIO\"\n                ,TRIM(COALESCE(RX_HCO_SUBTYPE,''))                    as \"SUBTIPO_HCO\"\n                ,TRIM(COALESCE(RX_HCO_EMAIL,''))                      as \"EMAIL_HCO\"\n                ,TRIM(COALESCE(SPECIALTY_1,''))                       as \"ESPECIALIDADE\"\n                ,TRIM(COALESCE(SPECIALTY_2,''))                       as \"ESPECIALIDADE2\"\n                ,TRIM(COALESCE(APPROVED_EMAIL_OPT_TYPE,''))           as \"APROVACAO_EMAIL_OPT\"\n                ,TRIM(COALESCE(RECORD_TYPE,''))                       as \"TIPO_REGISTRO\"\n                ,TRIM(COALESCE(PHONE,''))                             as \"TELEFONE\"\n                ,TRIM(COALESCE(PRIMARY_PARENT_ACCOUNT,''))            as \"CONTA_PAI\"\n                ,TRIM(COALESCE(PERSON_MOBILE_PHONE,''))               as \"CELULAR\"\n                ,TRIM(COALESCE(FIRST_NAME,''))                        as \"PRIMEIRO_NOME\"\n                ,TRIM(COALESCE(MIDDLE_NAME,''))                       as \"NOME_MEIO\"\n                ,TRIM(COALESCE(LAST_NAME,''))                         as \"ULTIMO_NOME\"\n                ,TRIM(COALESCE(DELETED_IND,''))                       as \"DELETED_IND\"\n                ,TRIM(COALESCE(GENDER,''))                            as \"SEXO\"\n                ,TRIM(COALESCE(ACCOUNT_IS_PERSON_IND,''))             as \"HCP_IND\"\n                ,TRIM(COALESCE(RX_GSK_VIIV_ACCOUNT_IND,''))           as \"CONTA_VIIV_IND\"\n                ,TRIM(COALESCE(CUSTOMER_MASTER_STATUS,''))            as \"STATUS\"\n                ,TRIM(COALESCE(SOURCE_ACCOUNT_AID,''))                as \"ROW_ID_CONTATO_EXT\"\n                ,TRIM(COALESCE(ACCOUNT_ID,''))                        as \"ROW_ID_CONTATO\"\n                ,TRIM(COALESCE(CAST(BIRTH_DATE AS VARCHAR(100)),''))  as \"ANIVERSARIO\"\n                ,TRIM(COALESCE(NAME,''))                              as \"NOME\"\n                ,TRIM(COALESCE(RX_LEGACY_ID,''))                      as \"RX_LEGACY_ID\"\n                ,TRIM(COALESCE(RX_NETWORK_AID,''))                    as \"RX_NETWORK_ID\"\n                ,TRIM(COALESCE(RX_GOVERNMENT_OFFICIAL_IND,''))        as \"OFIC_GOV\"\n                ,TRIM(COALESCE(BR_LEGAL_ID,''))                       as \"DOCUMENTO2\"\n                ,TRIM(COALESCE(EXTERNAL_AID,''))                      as \"EXTERNAL_AID\"\n                ,TRIM(COALESCE(RX_GIGYA_ID,'')) (TITLE'')             as \"RX_GIGYA_ID\"\n FROM LATAMCRMFBICNTRYBRVW.D_ACCOUNT;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OUTRO_TELEFONE",
											"type": "String"
										},
										"sink": {
											"name": "OUTRO_TELEFONE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOCUMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DOCUMENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OUTRO_EMAIL",
											"type": "String"
										},
										"sink": {
											"name": "OUTRO_EMAIL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_CONSENT_TO_VISIT_HCO",
											"type": "String"
										},
										"sink": {
											"name": "RX_CONSENT_TO_VISIT_HCO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OUTRO_ID",
											"type": "String"
										},
										"sink": {
											"name": "OUTRO_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_HCP",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_HCP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_HCO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_HCO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_NEGOCIO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_NEGOCIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUBTIPO_HCO",
											"type": "String"
										},
										"sink": {
											"name": "SUBTIPO_HCO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EMAIL_HCO",
											"type": "String"
										},
										"sink": {
											"name": "EMAIL_HCO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIALIDADE",
											"type": "String"
										},
										"sink": {
											"name": "ESPECIALIDADE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIALIDADE2",
											"type": "String"
										},
										"sink": {
											"name": "ESPECIALIDADE2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "APROVACAO_EMAIL_OPT",
											"type": "String"
										},
										"sink": {
											"name": "APROVACAO_EMAIL_OPT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_REGISTRO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_REGISTRO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TELEFONE",
											"type": "String"
										},
										"sink": {
											"name": "TELEFONE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONTA_PAI",
											"type": "String"
										},
										"sink": {
											"name": "CONTA_PAI",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CELULAR",
											"type": "String"
										},
										"sink": {
											"name": "CELULAR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRIMEIRO_NOME",
											"type": "String"
										},
										"sink": {
											"name": "PRIMEIRO_NOME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME_MEIO",
											"type": "String"
										},
										"sink": {
											"name": "NOME_MEIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ULTIMO_NOME",
											"type": "String"
										},
										"sink": {
											"name": "ULTIMO_NOME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SEXO",
											"type": "String"
										},
										"sink": {
											"name": "SEXO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HCP_IND",
											"type": "String"
										},
										"sink": {
											"name": "HCP_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONTA_VIIV_IND",
											"type": "String"
										},
										"sink": {
											"name": "CONTA_VIIV_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ANIVERSARIO",
											"type": "String"
										},
										"sink": {
											"name": "ANIVERSARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME",
											"type": "String"
										},
										"sink": {
											"name": "NOME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_LEGACY_ID",
											"type": "String"
										},
										"sink": {
											"name": "RX_LEGACY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_NETWORK_ID",
											"type": "String"
										},
										"sink": {
											"name": "RX_NETWORK_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OFIC_GOV",
											"type": "String"
										},
										"sink": {
											"name": "OFIC_GOV",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOCUMENTO2",
											"type": "String"
										},
										"sink": {
											"name": "DOCUMENTO2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_AID",
											"type": "String"
										},
										"sink": {
											"name": "EXTERNAL_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_GIGYA_ID",
											"type": "String"
										},
										"sink": {
											"name": "RX_GIGYA_ID",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Cad_Contas_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Cad_Enderecos_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Dim_Jornada_Cliente_Veeva",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": {
									"value": "SELECT DISTINCT\n\tTRIM(COALESCE(DELETED_IND,'')) \t\t\t\t\t\tAS \"DELETED_IND\"\n\t, TRIM(COALESCE(INACTIVE_IND,''))\t\t\t\t\tAS \"INACTIVE_IND\"\n\t, TRIM(COALESCE(ACCOUNT_AID,''))                    AS \"ROW_ID_CONTATO_EXT\"\n\t, TRIM(COALESCE(ADDRESS_LINE_1,''))                 AS \"LOGRADOURO\"\n\t, TRIM(COALESCE(ADDRESS_ID,''))                     AS \"ROW_ID_ENDERECO\"\n\t, TRIM(COALESCE(CUSTOMER_MASTER_STATUS,''))         AS \"STATUS_ENDERECO\"\n\t, TRIM(COALESCE(RX_TYPE,''))                        AS \"TIPO\"\n\t, TRIM(COALESCE(ADDRESS_LINE_2,''))                 AS \"BAIRRO\"\n\t, TRIM(COALESCE(CITY,''))                           AS \"CIDADE\"\n\t, TRIM(COALESCE(ZIP,''))                            AS \"CEP\"\n\t, TRIM(COALESCE(PRIMARY_ADDRESS_IND,''))            AS \"ENDERECO_PRIMARIO\"\n\t, TRIM(COALESCE(STATE,''))                          AS \"UF\"\n\t, TRIM(COALESCE(PHONE,''))                          AS \"TELEFONE\"\n\t, TRIM(COALESCE(PHONE_2,''))                        AS \"TELEFONE2\"\n\t, TRIM(COALESCE(SOURCE_ADDRESS_AID,'')) (TITLE'')   AS \"ROW_ID_END_EXT\"\n FROM LATAMCRMFBICNTRYBRVW.D_ADDRESS;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INACTIVE_IND",
											"type": "String"
										},
										"sink": {
											"name": "INACTIVE_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOGRADOURO",
											"type": "String"
										},
										"sink": {
											"name": "LOGRADOURO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_ENDERECO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_ENDERECO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS_ENDERECO",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_ENDERECO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BAIRRO",
											"type": "String"
										},
										"sink": {
											"name": "BAIRRO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CIDADE",
											"type": "String"
										},
										"sink": {
											"name": "CIDADE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CEP",
											"type": "String"
										},
										"sink": {
											"name": "CEP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ENDERECO_PRIMARIO",
											"type": "String"
										},
										"sink": {
											"name": "ENDERECO_PRIMARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UF",
											"type": "String"
										},
										"sink": {
											"name": "UF",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TELEFONE",
											"type": "String"
										},
										"sink": {
											"name": "TELEFONE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TELEFONE2",
											"type": "String"
										},
										"sink": {
											"name": "TELEFONE2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_END_EXT",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_END_EXT",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Cad_Enderecos_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_Dim_Jornada_Cliente_Veeva",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_D_Em_Event",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": {
									"value": "SELECT\n      MIN(J.CUSTOMER_JOURNEY) as \"CUSTOMER_JOURNEY\"\n      , CASE MIN(J.CUSTOMER_JOURNEY)\n        WHEN 'Reach' THEN 'COMPREENSÃO'\n        WHEN 'Acquisition' THEN 'EXPERIMENTAÇÃO'\n        WHEN 'Conversion' THEN 'EXPANSÃO'\n        WHEN 'Engagement' THEN 'ADESÃO'\n  END as \"JORNADA\"\n      , P.PRODUCT_NAME  as \"PRODUTO\"\n      , A.RX_LEGAL_ID as \"DOCUMENTO\"\n      , A.ID_2 as \"LEGAL_ID_2\"\n      , A.RX_LEGACY_ID as \"RX_LEGACY_ID\" \n      , FIRST_NAME || ' ' || MIDDLE_NAME || ' ' || LAST_NAME as \"NOME_REPRESENTANTE\"\n      , A.ACCOUNT_ID as \"ROW_ID_CONTATO\"\n      , A.RX_NETWORK_AID as \"NETWORKID\"\n      , A.RX_ACCOUNT_VEEVA_ID as \"ROW_ID_CONTATO_EXT\"\n      , J.START_DATE as \"DT_INICIO_VEEVA\"\n      , CURRENT_DATE as \"DT_INCLUSAO\"\n   FROM LATAMCRMFBICNTRYBRVW.S_CUSTOMER_JOURNEY J\n      LEFT JOIN LATAMCRMFBICNTRYBRVW.D_ACCOUNT A ON (A.ACCOUNT_ID = J.ACCOUNT_ID)\n      LEFT JOIN LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG P ON (P.PRODUCT_CATALOG_ID = J.PRODUCT_CATALOG_ID)\n      LEFT JOIN LATAMCRMFBICNTRYBRVW.D_COUNTRY C ON (C.COUNTRY_ID = J.COUNTRY_ID)\n   WHERE CURRENT_DATE BETWEEN START_DATE AND END_DATE \n      AND C.COUNTRY_CODE = 'BR'\n      AND CUSTOMER_JOURNEY <> 'UNSPECIFIED' \n      AND A.RX_ACCOUNT_VEEVA_ID IS NOT NULL\n      AND P.COMPANY_PRODUCT_IND = '1' \n      AND P.PRODUCT_NAME IN ('BEXSERO', 'BENLYSTA', 'NUCALA', 'TIVICAY', 'NUCALA GEPA')\n   GROUP BY  \n      P.PRODUCT_NAME,\n      A.RX_LEGAL_ID,\n      A.ID_2, \n      A.RX_LEGACY_ID,\n      START_DATE, \n      FIRST_NAME || ' ' || MIDDLE_NAME || ' ' || LAST_NAME,\n      A.ACCOUNT_ID, \n      A.RX_NETWORK_AID, \n      A.RX_ACCOUNT_VEEVA_ID \n   ORDER BY START_DATE DESC;",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CUSTOMER_JOURNEY",
											"type": "String"
										},
										"sink": {
											"name": "CUSTOMER_JOURNEY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "JORNADA",
											"type": "String"
										},
										"sink": {
											"name": "JORNADA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUTO",
											"type": "String"
										},
										"sink": {
											"name": "PRODUTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOCUMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DOCUMENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LEGAL_ID_2",
											"type": "String"
										},
										"sink": {
											"name": "LEGAL_ID_2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RX_LEGACY_ID",
											"type": "String"
										},
										"sink": {
											"name": "RX_LEGACY_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME_REPRESENTANTE",
											"type": "String"
										},
										"sink": {
											"name": "NOME_REPRESENTANTE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "Int32"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "NETWORKID",
											"type": "String"
										},
										"sink": {
											"name": "NETWORKID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO_EXT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DT_INICIO_VEEVA",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_INICIO_VEEVA",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "DT_INCLUSAO",
											"type": "DateTime"
										},
										"sink": {
											"name": "DT_INCLUSAO",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Dim_Jornada_Cliente_Veeva.txt"
								}
							}
						]
					},
					{
						"name": "STG_D_Em_Event",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STG_Fato_Eventos_Veeva_Full",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": " select *  \n    FROM LATAMCRMFBICNTRYBRVW.D_EM_EVENT;",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EM_EVENT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "EM_EVENT_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "SOURCE_EM_EVENT_AID",
											"type": "String"
										},
										"sink": {
											"name": "SOURCE_EM_EVENT_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OWNER_AID",
											"type": "String"
										},
										"sink": {
											"name": "OWNER_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DELETED_IND",
											"type": "String"
										},
										"sink": {
											"name": "DELETED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CURRENCY_ISO_CODE",
											"type": "String"
										},
										"sink": {
											"name": "CURRENCY_ISO_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RECORD_TYPE_AID",
											"type": "String"
										},
										"sink": {
											"name": "RECORD_TYPE_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CREATED_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "CREATED_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "CREATED_BY_AID",
											"type": "String"
										},
										"sink": {
											"name": "CREATED_BY_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LAST_MODIFIED_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LAST_MODIFIED_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "LAST_MODIFIED_BY_AID",
											"type": "String"
										},
										"sink": {
											"name": "LAST_MODIFIED_BY_AID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SYSTEM_MOD_STAMP",
											"type": "DateTime"
										},
										"sink": {
											"name": "SYSTEM_MOD_STAMP",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "LAST_ACTIVITY_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LAST_ACTIVITY_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "MAY_EDIT_IND",
											"type": "String"
										},
										"sink": {
											"name": "MAY_EDIT_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCKED_IND",
											"type": "String"
										},
										"sink": {
											"name": "LOCKED_IND",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LAST_VIEWED_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LAST_VIEWED_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "LAST_REFERENCED_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "LAST_REFERENCED_DATE",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "ACTUAL_ATTENDANCE",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACTUAL_ATTENDANCE",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ACTUAL_COST",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACTUAL_COST",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ACTUAL_MEAL_COST_P_PRSON",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACTUAL_MEAL_COST_P_PRSON",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ATTENDEES_REQ_MEALS",
											"type": "Decimal"
										},
										"sink": {
											"name": "ATTENDEES_REQ_MEALS",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ATTENDEES_WITH_MEALS",
											"type": "Decimal"
										},
										"sink": {
											"name": "ATTENDEES_WITH_MEALS",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "CITY",
											"type": "String"
										},
										"sink": {
											"name": "CITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "COMMITTED_COST",
											"type": "Decimal"
										},
										"sink": {
											"name": "COMMITTED_COST",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "COUNTRY",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DESCRIPTION",
											"type": "String"
										},
										"sink": {
											"name": "DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "END_TIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "END_TIME",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "ESTIMATED_ATTENDANCE",
											"type": "Decimal"
										},
										"sink": {
											"name": "ESTIMATED_ATTENDANCE",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ESTIMATED_COST",
											"type": "Decimal"
										},
										"sink": {
											"name": "ESTIMATED_COST",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "EVENT_CONFIGURATION",
											"type": "String"
										},
										"sink": {
											"name": "EVENT_CONFIGURATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXTERNAL_ID",
											"type": "String"
										},
										"sink": {
											"name": "EXTERNAL_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HCPS_WITH_MEALS",
											"type": "Decimal"
										},
										"sink": {
											"name": "HCPS_WITH_MEALS",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "INVITED_ATTENDEES",
											"type": "Decimal"
										},
										"sink": {
											"name": "INVITED_ATTENDEES",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "LOCATION_ADDRESS_LINE_2",
											"type": "String"
										},
										"sink": {
											"name": "LOCATION_ADDRESS_LINE_2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCATION_ADDRESS",
											"type": "String"
										},
										"sink": {
											"name": "LOCATION_ADDRESS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCATION",
											"type": "String"
										},
										"sink": {
											"name": "LOCATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCKED",
											"type": "String"
										},
										"sink": {
											"name": "LOCKED",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MOBILE_ID",
											"type": "String"
										},
										"sink": {
											"name": "MOBILE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OVERRIDE_LOCK",
											"type": "String"
										},
										"sink": {
											"name": "OVERRIDE_LOCK",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PARENT_EVENT",
											"type": "String"
										},
										"sink": {
											"name": "PARENT_EVENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "POSTAL_CODE",
											"type": "String"
										},
										"sink": {
											"name": "POSTAL_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "START_TIME",
											"type": "DateTime"
										},
										"sink": {
											"name": "START_TIME",
											"type": "DateTime",
											"physicalType": "DateTime"
										}
									},
									{
										"source": {
											"name": "STATE_PROVINCE",
											"type": "String"
										},
										"sink": {
											"name": "STATE_PROVINCE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STUB_MOBILE_ID",
											"type": "String"
										},
										"sink": {
											"name": "STUB_MOBILE_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STUB_SFDC_ID",
											"type": "String"
										},
										"sink": {
											"name": "STUB_SFDC_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TOPIC",
											"type": "String"
										},
										"sink": {
											"name": "TOPIC",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VENDOR",
											"type": "String"
										},
										"sink": {
											"name": "VENDOR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VENUE",
											"type": "String"
										},
										"sink": {
											"name": "VENUE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ZVOD_EVENT_LAYOUT",
											"type": "String"
										},
										"sink": {
											"name": "ZVOD_EVENT_LAYOUT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ATTENDEE_RECON_COMPLETE",
											"type": "String"
										},
										"sink": {
											"name": "ATTENDEE_RECON_COMPLETE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EVENT_DISPLAY_NAME",
											"type": "String"
										},
										"sink": {
											"name": "EVENT_DISPLAY_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WALK_IN_COUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "WALK_IN_COUNT",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "WALK_IN_FIELDS",
											"type": "String"
										},
										"sink": {
											"name": "WALK_IN_FIELDS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACCOUNT_ATTENDEE_FIELDS",
											"type": "String"
										},
										"sink": {
											"name": "ACCOUNT_ATTENDEE_FIELDS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ONLINE_REGISTRANT_COUNT",
											"type": "Decimal"
										},
										"sink": {
											"name": "ONLINE_REGISTRANT_COUNT",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ONLINE_REG_FIELDS",
											"type": "String"
										},
										"sink": {
											"name": "ONLINE_REG_FIELDS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CONTACT_ATTENDEE_FIELDS",
											"type": "String"
										},
										"sink": {
											"name": "CONTACT_ATTENDEE_FIELDS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "USER_ATTENDEE_FIELDS",
											"type": "String"
										},
										"sink": {
											"name": "USER_ATTENDEE_FIELDS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ACTUAL_COST_PER_ATTENDEE",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACTUAL_COST_PER_ATTENDEE",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ACTUAL_OTHER_COST_PER_ATTEN",
											"type": "Decimal"
										},
										"sink": {
											"name": "ACTUAL_OTHER_COST_PER_ATTEN",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "ESTIMATED_COST_PER_ATTENDEE",
											"type": "Decimal"
										},
										"sink": {
											"name": "ESTIMATED_COST_PER_ATTENDEE",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "EVENT_TYPE",
											"type": "String"
										},
										"sink": {
											"name": "EVENT_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TOTAL_COST_PER_ATTENDEE",
											"type": "Decimal"
										},
										"sink": {
											"name": "TOTAL_COST_PER_ATTENDEE",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_EVENT_ID",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_EVENT_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_AUDIENCE",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_AUDIENCE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_STARCITE_APPROVAL",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_STARCITE_APPROVAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_AUDIENCE_OTHERS",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_AUDIENCE_OTHERS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_THERAPY_AREA",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_THERAPY_AREA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_THERAPY_AREA_OTHERS",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_THERAPY_AREA_OTHERS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_ACCREDITED",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_ACCREDITED",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_PRESEN_ZINC_NUM_NM1",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_PRESEN_ZINC_NUM_NM1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_RATIONALE",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_RATIONALE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_PRESEN_ZINC_NUM_NM2",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_PRESEN_ZINC_NUM_NM2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_PRESEN_ZINC_NUM_NM3",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_PRESEN_ZINC_NUM_NM3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_NAME_OF_PRES_SPKR_1",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_NAME_OF_PRES_SPKR_1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_NAME_OF_PRES_SPKR_2",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_NAME_OF_PRES_SPKR_2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_NAME_OF_PRES_SPKR_3",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_NAME_OF_PRES_SPKR_3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_MSL_BRIEFINGOM_1",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_MSL_BRIEFINGOM_1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_MSL_BRIEFINGOM_2",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_MSL_BRIEFINGOM_2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_MSL_BRIEFINGOM_3",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_MSL_BRIEFINGOM_3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BATCH_ID",
											"type": "Decimal"
										},
										"sink": {
											"name": "BATCH_ID",
											"type": "Decimal",
											"physicalType": "Decimal"
										}
									},
									{
										"source": {
											"name": "COUNTRY_CODE",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INSTANCE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "INSTANCE_ID",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_APPROVAL_ID_1",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_APPROVAL_ID_1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_APPROVAL_ID_2",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_APPROVAL_ID_2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CORE_GSK_APPROVAL_ID_3",
											"type": "String"
										},
										"sink": {
											"name": "CORE_GSK_APPROVAL_ID_3",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_D_Em_Event.txt"
								}
							}
						]
					},
					{
						"name": "STG_Fato_Eventos_Veeva_Full",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "TeradataSource",
								"query": "SELECT DISTINCT \n                TRIM(COALESCE(A.MEDICAL_EVENT_ID,''))                  AS \"ID_EVENTO\",\n                TRIM(COALESCE(A.LOCATION,''))                          AS \"LOCALIZACAO\",\n                TRIM(COALESCE(A.EVENT_TYPE,''))                        AS \"TIPO_EVENTO\",\n                TRIM(COALESCE(OREPLACE(A.EVENT_NAME,'~','-'),''))      AS \"NOME_EVENTO\",\n                TRIM(COALESCE(CAST(A.START_DATE AS VARCHAR(100)),''))  AS \"DATA_INICIO\",\n                TRIM(COALESCE(CAST(A.END_DATE AS VARCHAR(100)),''))    AS \"DATA_FIM\",\n                TRIM(COALESCE(C.PRODUCT_NAME,''))                      AS \"PRODUTO_PRIMARIO\",\n                TRIM(COALESCE(D.PRODUCT_NAME,''))                      AS \"PRODUTO_SECUNDARIO\",\n                TRIM(COALESCE(B.TERRITORY_ID,''))                      AS \"ROW_ID_TERRITORIO\",\n                TRIM(COALESCE(B.ATTENDEE_ID,''))                       AS \"ROW_ID_CONTATO\",\n                TRIM(COALESCE(E.RX_LEGAL_ID,''))                       AS \"DOCUMENTO\",\n                TRIM(COALESCE(B.ATTENDEE_TYPE,''))                     AS \"TIPO_CONTA\",\n                TRIM(COALESCE(B.RX_ROLE,''))                           AS \"TIPO_PARTICIPACAO\",\n                TRIM(COALESCE(B.ATTENDEE_STATUS,''))                   AS \"STATUS_CONVIDADO\",\n                TRIM(COALESCE(U.NAME,''))                              AS \"CRIADO_POR\",\n                TRIM(COALESCE(U.ALIAS_NAME,''))                        AS \"CRIADO_POR_MUDID\",\n                TRIM(COALESCE(B.ATTENDEE,''))                          AS \"PARTICIPANTE\",\n                TRIM(COALESCE(B.RX_ATTENDEE_SPECIALTY,''))             AS \"ESPECIALIDADE\" \n                               \n    FROM  \n                LATAMCRMFBICNTRYBRVW.D_MEDICAL_EVENT A LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.F_MEDICAL_EVENT_ATTENDEE B\n                ON A.MEDICAL_EVENT_ID = B.MEDICAL_EVENT_ID\n                \n                LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG C\n                ON A.RX_PRIMARY_PRODUCT = C.SOURCE_PRODUCT_CATALOG_AID\n                \n                LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_PRODUCT_CATALOG D\n                ON A.RX_SECONDARY_PRODUCT = D.SOURCE_PRODUCT_CATALOG_AID\n                \n                LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_ACCOUNT E\n                ON B.ATTENDEE_ID = E.ACCOUNT_ID\n                \n                LEFT OUTER JOIN LATAMCRMFBICNTRYBRVW.D_USER U\n                ON A.OWNER_AID = U.SOURCE_USER_AID\n                \n    WHERE  \n       A.DELETED_IND = 0 AND B.DELETED_IND = 0\n       AND\n          EXTRACT(YEAR FROM END_DATE) >= EXTRACT ( YEAR FROM ADD_MONTHS (CURRENT_DATE , -8)) \n       AND\n          EXTRACT(MONTH FROM END_DATE) >= EXTRACT ( MONTH FROM ADD_MONTHS (CURRENT_DATE , -8));",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID_EVENTO",
											"type": "String"
										},
										"sink": {
											"name": "ID_EVENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOCALIZACAO",
											"type": "String"
										},
										"sink": {
											"name": "LOCALIZACAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_EVENTO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_EVENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NOME_EVENTO",
											"type": "String"
										},
										"sink": {
											"name": "NOME_EVENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_INICIO",
											"type": "String"
										},
										"sink": {
											"name": "DATA_INICIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DATA_FIM",
											"type": "String"
										},
										"sink": {
											"name": "DATA_FIM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUTO_PRIMARIO",
											"type": "String"
										},
										"sink": {
											"name": "PRODUTO_PRIMARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PRODUTO_SECUNDARIO",
											"type": "String"
										},
										"sink": {
											"name": "PRODUTO_SECUNDARIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_TERRITORIO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ROW_ID_CONTATO",
											"type": "String"
										},
										"sink": {
											"name": "ROW_ID_CONTATO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOCUMENTO",
											"type": "String"
										},
										"sink": {
											"name": "DOCUMENTO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_CONTA",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_CONTA",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TIPO_PARTICIPACAO",
											"type": "String"
										},
										"sink": {
											"name": "TIPO_PARTICIPACAO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STATUS_CONVIDADO",
											"type": "String"
										},
										"sink": {
											"name": "STATUS_CONVIDADO",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CRIADO_POR",
											"type": "String"
										},
										"sink": {
											"name": "CRIADO_POR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CRIADO_POR_MUDID",
											"type": "String"
										},
										"sink": {
											"name": "CRIADO_POR_MUDID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PARTICIPANTE",
											"type": "String"
										},
										"sink": {
											"name": "PARTICIPANTE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ESPECIALIDADE",
											"type": "String"
										},
										"sink": {
											"name": "ESPECIALIDADE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeradataTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Staging_Area_txt",
								"type": "DatasetReference",
								"parameters": {
									"nome_arquivo": "STG_Fato_Eventos_Veeva_Full.txt"
								}
							}
						]
					}
				],
				"folder": {
					"name": "Extract - Teradata"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/TeradataTable1')]",
				"[concat(variables('workspaceId'), '/datasets/Staging_Area_txt')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/temp')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "UNIV_MEDICO_ETL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UNIV_MEDICO_ETL",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dForcaVendas": {},
									"dPainelMedico": {},
									"dQuadranteMedico": {},
									"dQuadranteMedicoGP": {},
									"dUniversoMedico": {},
									"dConsentHistory": {},
									"ForcaVendas": {},
									"PainelMedico": {},
									"QuadranteMedico": {},
									"QuadranteMedicoGP": {},
									"UniversoMedico": {},
									"ConsentHistory": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "ISOLATION"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/UNIV_MEDICO_ETL')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivo_Em_TxT_1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CompressArquivoSave",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					},
					"pasta": {
						"type": "string"
					}
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('synapse/workspaces/gsk-synapse/warehouse/',dataset().pasta)",
							"type": "Expression"
						},
						"fileSystem": "gsksynapsestorage"
					},
					"columnDelimiter": "$",
					"compressionCodec": "bzip2",
					"compressionLevel": "Fastest",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CompressArquivoSave')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivo_Em_TxT_2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CompressArquivoSave",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					},
					"pasta": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - KPI Visitacao"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('synapse/workspaces/gsk-synapse/warehouse/',dataset().pasta)",
							"type": "Expression"
						},
						"fileSystem": "gsksynapsestorage"
					},
					"columnDelimiter": "~",
					"compressionCodec": "ZipDeflate",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CompressArquivoSave')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivo_Em_TxT_3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageBlobSynapse",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pasta_nome_arquivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().pasta_nome_arquivo",
							"type": "Expression"
						},
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
						"container": "gsksynapsestorage"
					},
					"columnDelimiter": "\t",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorageBlobSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivos_Em_Parquet_1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Arquivos_Em_Parquet_3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.email1to1",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Arquivos_Em_Parquet_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivos_Em_Parquet_2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Arquivos_Em_Parquet_3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - KPI Visitacao"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Arquivos_Em_Parquet_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivos_Em_Parquet_3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Arquivos_Em_Parquet_3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Arquivos_Em_Parquet_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivos_Em_Parquet_4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Arquivos_Em_Parquet_3",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "2 - KPI Visitacao"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Arquivos_Em_Parquet_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dim_Email_1_1_Parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.email1to1",
						"fileSystem": "gsksynapsestorage"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CRM_UNIV",
						"type": "UTF8"
					},
					{
						"name": "MEDICO_UNIV",
						"type": "UTF8"
					},
					{
						"name": "ESPECIALIDADE_UNIV",
						"type": "UTF8"
					},
					{
						"name": "LOGRADOURO_UNIV",
						"type": "UTF8"
					},
					{
						"name": "BAIRRO_UNIV",
						"type": "UTF8"
					},
					{
						"name": "CIDADE_UNIV",
						"type": "UTF8"
					},
					{
						"name": "CEP_UNIV",
						"type": "UTF8"
					},
					{
						"name": "ORIGEM_UNIV",
						"type": "UTF8"
					},
					{
						"name": "UF_UNIV",
						"type": "UTF8"
					},
					{
						"name": "BRICK_UNIV",
						"type": "UTF8"
					},
					{
						"name": "TELEFONE_UNIV",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dim_KPI_Vis_Parquet')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - KPI Visitacao"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao",
						"fileSystem": "gsksynapsestorage"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "ID",
						"type": "UTF8"
					},
					{
						"name": "CRM_UNIV",
						"type": "UTF8"
					},
					{
						"name": "MEDICO_UNIV",
						"type": "UTF8"
					},
					{
						"name": "ESPECIALIDADE_UNIV",
						"type": "UTF8"
					},
					{
						"name": "LOGRADOURO_UNIV",
						"type": "UTF8"
					},
					{
						"name": "BAIRRO_UNIV",
						"type": "UTF8"
					},
					{
						"name": "CIDADE_UNIV",
						"type": "UTF8"
					},
					{
						"name": "CEP_UNIV",
						"type": "UTF8"
					},
					{
						"name": "ORIGEM_UNIV",
						"type": "UTF8"
					},
					{
						"name": "UF_UNIV",
						"type": "UTF8"
					},
					{
						"name": "BRICK_UNIV",
						"type": "UTF8"
					},
					{
						"name": "TELEFONE_UNIV",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Fact_Email_e_KPI_Data_Flow')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.email1to1",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "CALL_SUMMARY_ID",
						"type": "UTF8"
					},
					{
						"name": "PARENT_CALL_AID",
						"type": "UTF8"
					},
					{
						"name": "LOCAL_CALL_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "CALL_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "TERRITORY_ID",
						"type": "UTF8"
					},
					{
						"name": "CYCLE",
						"type": "UTF8"
					},
					{
						"name": "SALES_FORCE_KEY",
						"type": "UTF8"
					},
					{
						"name": "DATE",
						"type": "UTF8"
					},
					{
						"name": "LOCAL_CALL_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_ID",
						"type": "UTF8"
					},
					{
						"name": "CALL_NAME",
						"type": "UTF8"
					},
					{
						"name": "RX_CALL_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CALL_STATUS",
						"type": "UTF8"
					},
					{
						"name": "ATTENDEE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CLM_IND",
						"type": "UTF8"
					},
					{
						"name": "SAMPLE_CALL_IND",
						"type": "UTF8"
					},
					{
						"name": "CALL_TYPE",
						"type": "UTF8"
					},
					{
						"name": "DETAILED_PRODUCTS",
						"type": "UTF8"
					},
					{
						"name": "DURATION",
						"type": "UTF8"
					},
					{
						"name": "CREATED_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "CREATED_DATE_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "LAST_MODIFIED_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "LAST_MODIFIED_DATE_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "PRE_CALL_NOTES",
						"type": "UTF8"
					},
					{
						"name": "NEXT_CALL_NOTES",
						"type": "UTF8"
					},
					{
						"name": "REVIEW_STATUS",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_NAME",
						"type": "UTF8"
					},
					{
						"name": "RX_LEGAL_ID",
						"type": "UTF8"
					},
					{
						"name": "KEY_MESSAGE_NAME",
						"type": "UTF8"
					},
					{
						"name": "QUESTION_ID",
						"type": "UTF8"
					},
					{
						"name": "PRODUCT",
						"type": "UTF8"
					},
					{
						"name": "CALL_DATE",
						"type": "UTF8"
					},
					{
						"name": "ORIGEM",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Fact_GSO_Aux_Regiao')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "area.xlsx",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/aux.tabelas_auxiliares",
						"fileSystem": "gsksynapsestorage"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "BRASIL.Area",
						"type": "String"
					},
					{
						"name": "Outlet State",
						"type": "String"
					},
					{
						"name": "Regiao",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Fact_GSO_Data_Flow')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "CALL_SUMMARY_ID",
						"type": "UTF8"
					},
					{
						"name": "PARENT_CALL_AID",
						"type": "UTF8"
					},
					{
						"name": "LOCAL_CALL_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "CALL_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "TERRITORY_ID",
						"type": "UTF8"
					},
					{
						"name": "CYCLE",
						"type": "UTF8"
					},
					{
						"name": "SALES_FORCE_KEY",
						"type": "UTF8"
					},
					{
						"name": "DATE",
						"type": "UTF8"
					},
					{
						"name": "LOCAL_CALL_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_ID",
						"type": "UTF8"
					},
					{
						"name": "CALL_NAME",
						"type": "UTF8"
					},
					{
						"name": "RX_CALL_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CALL_STATUS",
						"type": "UTF8"
					},
					{
						"name": "ATTENDEE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CLM_IND",
						"type": "UTF8"
					},
					{
						"name": "SAMPLE_CALL_IND",
						"type": "UTF8"
					},
					{
						"name": "CALL_TYPE",
						"type": "UTF8"
					},
					{
						"name": "DETAILED_PRODUCTS",
						"type": "UTF8"
					},
					{
						"name": "DURATION",
						"type": "UTF8"
					},
					{
						"name": "CREATED_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "CREATED_DATE_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "LAST_MODIFIED_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "LAST_MODIFIED_DATE_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "PRE_CALL_NOTES",
						"type": "UTF8"
					},
					{
						"name": "NEXT_CALL_NOTES",
						"type": "UTF8"
					},
					{
						"name": "REVIEW_STATUS",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_NAME",
						"type": "UTF8"
					},
					{
						"name": "RX_LEGAL_ID",
						"type": "UTF8"
					},
					{
						"name": "KEY_MESSAGE_NAME",
						"type": "UTF8"
					},
					{
						"name": "QUESTION_ID",
						"type": "UTF8"
					},
					{
						"name": "PRODUCT",
						"type": "UTF8"
					},
					{
						"name": "CALL_DATE",
						"type": "UTF8"
					},
					{
						"name": "ORIGEM",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FileServerLocalDouglas')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServerDouglasNew",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "0_Habilitado"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Fastest",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"nullValue": "N/D",
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PK\u0003\u0004-\u0000\u0000\u0000\t\u0000�\u0011�Q�S����������\u0019\u0000\u0014\u0000dim_interacao_eventos.txt\u0001\u0000\u0010\u0000'���\u0002\u0000\u0000\u0000�K+)\u0000\u0000\u0000\u0000�_͎�8r>�\u0001�\u0003/>6 Q�{c*YJVJb6%eM�1�",
						"type": "String"
					},
					{
						"name": "\u0016\u0003",
						"type": "String"
					},
					{
						"name": "���`�}<c\u000f�\u001e|��O� �*��g_\u0002���MvV%�\u001b��È`H����'s��=�wћ~�O�\"�jU��8��۪�3�u��k��W\u0005o��7�{z����)7�Vӛ��W�4�I����q��\u001b���醴m˦�\u0007�w�O:�~����rӽQ�9������i�7m\u000b���/�o�����7�Oޜ=o��vsf�ώ/",
						"type": "String"
					},
					{
						"name": "���3����}�",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/FileServerDouglasNew')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FileSystemGSK')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServerGSK",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0_Habilitado"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": "EMAIL 1-1/FILES"
					},
					"columnDelimiter": "$",
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Optimal",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID~CRM_UNIV~MEDICO_UNIV~ESPECIALIDADE_UNIV~LOGRADOURO_UNIV~BAIRRO_UNIV~CIDADE_UNIV~CEP_UNIV~ORIGEM_UNIV~UF_UNIV~BRICK_UNIV~TELEFONE_UNIV",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/FileServerGSK')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ListarArquivosComprimidos_1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.email1to1",
						"fileSystem": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Fastest",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ListarArquivosComprimidos_2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao",
						"fileSystem": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Fastest",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ListarArquivosComprimidos_4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico",
						"fileSystem": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Fastest",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Listar_Arquivos_Txt_1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Listar_Arquivos_Txt_3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.email1to1",
						"container": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Listar_Arquivos_Txt_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Listar_Arquivos_Txt_2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Listar_Arquivos_Txt_3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - KPI Visitacao"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao",
						"container": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Listar_Arquivos_Txt_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Listar_Arquivos_Txt_3')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Listar_Arquivos_Txt_3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
						"container": "gsksynapsestorage"
					},
					"columnDelimiter": "\t",
					"encodingName": "ISO-8859-1",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Listar_Arquivos_Txt_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Listar_Arquivos_Txt_4')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Listar_Arquivos_Txt_3",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - KPI Visitacao"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico",
						"container": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Listar_Arquivos_Txt_3')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SINK_GSO_ADSL2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "GSO",
						"fileSystem": "gskoutputfiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SINK_KPI_EMAIL_ADSL2')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Email & KPI Visitacao",
						"fileSystem": "gskoutputfiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Salvar_Dim_GSO_Region_Sink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_region.parquet",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
						"fileSystem": "gsksynapsestorage"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Salvar_Dim_GSO_Sink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
						"fileSystem": "gsksynapsestorage"
					},
					"compressionCodec": "gzip"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Salvar_Fato_GSO_Sink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.gso",
						"fileSystem": "gsksynapsestorage"
					},
					"compressionCodec": "gzip"
				},
				"schema": [
					{
						"name": "CALL_SUMMARY_ID",
						"type": "UTF8"
					},
					{
						"name": "PARENT_CALL_AID",
						"type": "UTF8"
					},
					{
						"name": "LOCAL_CALL_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "CALL_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "TERRITORY_ID",
						"type": "UTF8"
					},
					{
						"name": "CYCLE",
						"type": "UTF8"
					},
					{
						"name": "SALES_FORCE_KEY",
						"type": "UTF8"
					},
					{
						"name": "DATE",
						"type": "UTF8"
					},
					{
						"name": "LOCAL_CALL_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_ID",
						"type": "UTF8"
					},
					{
						"name": "CALL_NAME",
						"type": "UTF8"
					},
					{
						"name": "RX_CALL_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CALL_STATUS",
						"type": "UTF8"
					},
					{
						"name": "ATTENDEE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CLM_IND",
						"type": "UTF8"
					},
					{
						"name": "SAMPLE_CALL_IND",
						"type": "UTF8"
					},
					{
						"name": "CALL_TYPE",
						"type": "UTF8"
					},
					{
						"name": "DETAILED_PRODUCTS",
						"type": "UTF8"
					},
					{
						"name": "DURATION",
						"type": "UTF8"
					},
					{
						"name": "CREATED_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "CREATED_DATE_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "LAST_MODIFIED_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "LAST_MODIFIED_DATE_TIME_ID",
						"type": "UTF8"
					},
					{
						"name": "PRE_CALL_NOTES",
						"type": "UTF8"
					},
					{
						"name": "NEXT_CALL_NOTES",
						"type": "UTF8"
					},
					{
						"name": "REVIEW_STATUS",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_NAME",
						"type": "UTF8"
					},
					{
						"name": "RX_LEGAL_ID",
						"type": "UTF8"
					},
					{
						"name": "KEY_MESSAGE_NAME",
						"type": "UTF8"
					},
					{
						"name": "QUESTION_ID",
						"type": "UTF8"
					},
					{
						"name": "PRODUCT",
						"type": "UTF8"
					},
					{
						"name": "CALL_DATE",
						"type": "UTF8"
					},
					{
						"name": "ORIGEM",
						"type": "UTF8"
					},
					{
						"name": "SURVEY_KEY",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_CREATED_TS",
						"type": "UTF8"
					},
					{
						"name": "RESPONSE_LAST_MODIFIED_TS",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_USER_AID",
						"type": "UTF8"
					},
					{
						"name": "QUESTION_RESPONSE_ID",
						"type": "UTF8"
					},
					{
						"name": "RESPONSE_NAME",
						"type": "UTF8"
					},
					{
						"name": "RESPONSE_NUMBER",
						"type": "UTF8"
					},
					{
						"name": "RESPONSE",
						"type": "UTF8"
					},
					{
						"name": "RESPONSE_QUESTION_ORDER",
						"type": "UTF8"
					},
					{
						"name": "TARGET_LAST_MODIFIED_TS",
						"type": "UTF8"
					},
					{
						"name": "MODIFIED_DATE",
						"type": "UTF8"
					},
					{
						"name": "START_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "END_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "REVIEW_DATE_ID",
						"type": "UTF8"
					},
					{
						"name": "MANAGER_TERRITORY_ID",
						"type": "UTF8"
					},
					{
						"name": "EMPLOYEE_TERRITORY_ID",
						"type": "UTF8"
					},
					{
						"name": "DATE_DIFF",
						"type": "UTF8"
					},
					{
						"name": "FLAG_PREMIO",
						"type": "UTF8"
					},
					{
						"name": "RESPONSES_KEY",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Sink_KPI_Visitacao')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2 - KPI Visitacao"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "KPI Visitacao",
						"fileSystem": "gskoutputfiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Sink_Universo_Medico')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4 - Universo Medico"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Universo Medico",
						"fileSystem": "gskoutputfiles"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source_Dim_KPI')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3 - GSO"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source_Universo_Medico')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageSynapse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4 - Universo Medico"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico",
						"container": "gsksynapsestorage"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "KEY_CRM_EMAIL",
						"type": "UTF8"
					},
					{
						"name": "CRM_PAINEL",
						"type": "UTF8"
					},
					{
						"name": "DATA_VEEVA",
						"type": "UTF8"
					},
					{
						"name": "EMAIL_VEEVA",
						"type": "UTF8"
					},
					{
						"name": "CONSENT_VEEVA_1_1",
						"type": "UTF8"
					},
					{
						"name": "CONSENT_VEEVA_1_MASS",
						"type": "UTF8"
					},
					{
						"name": "ROW_ID_CONTATO_VEEVA",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageSynapse')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerGSK')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerGSK",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "0_Habilitado"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "EVENTO",
						"type": "nvarchar"
					},
					{
						"name": "ID_EVENTO",
						"type": "nvarchar"
					},
					{
						"name": "EV CICLO",
						"type": "nvarchar"
					},
					{
						"name": "% DATA_EVENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_EVENTO",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "EV CICLO_TERRITORIO",
						"type": "nvarchar"
					},
					{
						"name": "EV CICLO_CONTATO",
						"type": "nvarchar"
					},
					{
						"name": "KEY_TERR_CONT_CICLO",
						"type": "nvarchar"
					},
					{
						"name": "ID_PARTICIPANTE",
						"type": "nvarchar"
					},
					{
						"name": "NOME_PARTICIPANTE",
						"type": "nvarchar"
					},
					{
						"name": "EV ROW_ID_TERRITORIO",
						"type": "nvarchar"
					},
					{
						"name": "NOME_USUARIO",
						"type": "nvarchar"
					},
					{
						"name": "EV ROW_ID_CONTATO",
						"type": "nvarchar"
					},
					{
						"name": "DOCUMENTO",
						"type": "nvarchar"
					},
					{
						"name": "EV ESPECIALIDADE_ENG",
						"type": "varchar"
					},
					{
						"name": "STATUS_CONVIDADO_GR",
						"type": "nvarchar"
					},
					{
						"name": "STATUS_CONVIDADO",
						"type": "nvarchar"
					},
					{
						"name": "STATUS_CONVIDADO_ENG",
						"type": "nvarchar"
					},
					{
						"name": "PRODUTO_PRIMARIO",
						"type": "nvarchar"
					},
					{
						"name": "PRODUTO_SECUNDARIO",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_PARTICIPACAO",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_PARTICIPACAO_ENG",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_CONTA",
						"type": "varchar"
					},
					{
						"name": "TIPO_CONTA_ENG",
						"type": "varchar"
					},
					{
						"name": "VISITADO_SETOR",
						"type": "varchar"
					},
					{
						"name": "NOME_SETOR_VISITANTE",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_INTERACAO",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "altran_fato_eventos_email_1_to_1"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SqlServerGSK')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerLocalDev')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLocalDouglasDev",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "0_Habilitado"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SqlServerLocalDouglasDev')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerLocalDouglas')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLocalDouglasDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "0_Habilitado"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "EVENTO",
						"type": "nvarchar"
					},
					{
						"name": "ID_EVENTO",
						"type": "nvarchar"
					},
					{
						"name": "EV CICLO",
						"type": "nvarchar"
					},
					{
						"name": "% DATA_EVENTO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_EVENTO",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "EV CICLO_TERRITORIO",
						"type": "nvarchar"
					},
					{
						"name": "EV CICLO_CONTATO",
						"type": "nvarchar"
					},
					{
						"name": "KEY_TERR_CONT_CICLO",
						"type": "nvarchar"
					},
					{
						"name": "ID_PARTICIPANTE",
						"type": "nvarchar"
					},
					{
						"name": "NOME_PARTICIPANTE",
						"type": "nvarchar"
					},
					{
						"name": "EV ROW_ID_TERRITORIO",
						"type": "nvarchar"
					},
					{
						"name": "NOME_USUARIO",
						"type": "nvarchar"
					},
					{
						"name": "EV ROW_ID_CONTATO",
						"type": "nvarchar"
					},
					{
						"name": "DOCUMENTO",
						"type": "nvarchar"
					},
					{
						"name": "EV ESPECIALIDADE_ENG",
						"type": "varchar"
					},
					{
						"name": "STATUS_CONVIDADO_GR",
						"type": "nvarchar"
					},
					{
						"name": "STATUS_CONVIDADO",
						"type": "nvarchar"
					},
					{
						"name": "STATUS_CONVIDADO_ENG",
						"type": "nvarchar"
					},
					{
						"name": "PRODUTO_PRIMARIO",
						"type": "nvarchar"
					},
					{
						"name": "PRODUTO_SECUNDARIO",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_PARTICIPACAO",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_PARTICIPACAO_ENG",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_CONTA",
						"type": "varchar"
					},
					{
						"name": "TIPO_CONTA_ENG",
						"type": "varchar"
					},
					{
						"name": "VISITADO_SETOR",
						"type": "varchar"
					},
					{
						"name": "NOME_SETOR_VISITANTE",
						"type": "nvarchar"
					},
					{
						"name": "TIPO_INTERACAO",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "altran_email"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SqlServerLocalDouglasDB')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Staging_Area_txt')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "0_Habilitado"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": "synapse/workspaces/gsk-synapse/warehouse/staging_area",
						"fileSystem": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TeradataTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TeradataVeevaGSK",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "0_Habilitado"
				},
				"annotations": [],
				"type": "TeradataTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/TeradataVeevaGSK')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/arquivo_txt_s_comprimir')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CompressArquivoSave",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"nome_arquivo": {
						"type": "string"
					},
					"pasta": {
						"type": "string"
					}
				},
				"folder": {
					"name": "1 - Email 1-1"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().nome_arquivo",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('synapse/workspaces/gsk-synapse/warehouse/',dataset().pasta)",
							"type": "Expression"
						},
						"fileSystem": "gsksynapsestorage"
					},
					"columnDelimiter": "<",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CompressArquivoSave')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Arquivos_Em_Parquet_3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Arquivos_Em_Parquet_3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorageSynapse')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageSynapse_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorageBlobSynapse')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureDataLakeStorageBlobSynapse_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CompressArquivoSave')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('CompressArquivoSave_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('CompressArquivoSave_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FileServerDouglas')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServerDouglas_properties_typeProperties_host')]",
					"userId": "[parameters('FileServerDouglas_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServerDouglas_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeLocalDouglas",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeLocalDouglas')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FileServerDouglasNew')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServerDouglasNew_properties_typeProperties_host')]",
					"userId": "[parameters('FileServerDouglasNew_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServerDouglasNew_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeLocalDouglas",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeLocalDouglas')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/FileServerGSK')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServerGSK_properties_typeProperties_host')]",
					"userId": "[parameters('FileServerGSK_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServerGSK_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeGSK",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeGSK')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Listar_Arquivos_Txt_3')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Listar_Arquivos_Txt_3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PowerBIWorkspace1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "e9c95a9d-2a47-44b7-b1ff-f0b5ee336bff",
					"tenantID": "ae26548d-b193-4d6e-8001-922ca3c436d9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Sftp1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerConfigCarga')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerConfigCarga_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeLocalDouglas",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeLocalDouglas')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerGSK')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerGSK_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeGSK",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeGSK')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerLocalDouglasDB')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerLocalDouglasDB_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeLocalDouglas",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeLocalDouglas')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SqlServerLocalDouglasDev')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerLocalDouglasDev_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeLocalDouglas",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeLocalDouglas')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TeradataVeevaGSK')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "Teradata",
				"typeProperties": {
					"connectionString": "[parameters('TeradataVeevaGSK_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntimeGSK",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntimeGSK')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gsk-synapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('gsk-synapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/gsk-synapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('gsk-synapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/JobGSO')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "3 - Transform - GSO",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-01-13T16:42:00",
						"timeZone": "E. South America Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/3 - Transform - GSO')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger_6ni')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 240,
					"startTime": "2020-12-11T00:37:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger_ap4')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 240,
					"startTime": "2020-12-11T01:11:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntimeGSK')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntimeLocalDouglas')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EMAIL_ETL')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dIntVisitasRealizadas"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dIntVisitasMedico"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dIntEmail"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dIntVisitasFranchise"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dIntEventos"
						},
						{
							"linkedService": {
								"referenceName": "AzureBlobStorageSynapse",
								"type": "LinkedServiceReference"
							},
							"name": "HistZona"
						},
						{
							"linkedService": {
								"referenceName": "AzureBlobStorageSynapse",
								"type": "LinkedServiceReference"
							},
							"name": "RepsZona"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dForcaVendas"
						},
						{
							"dataset": {
								"referenceName": "Dim_KPI_Vis_Parquet",
								"type": "DatasetReference"
							},
							"name": "dKPITerritorio"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dCoaching"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dMSLDivision"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dTargetSRO"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dQuadranteMedico"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dQuadranteMedicoGP"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dAuditEnd"
						},
						{
							"dataset": {
								"referenceName": "Dim_Email_1_1_Parquet",
								"type": "DatasetReference"
							},
							"name": "dPainelMedico"
						},
						{
							"linkedService": {
								"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "TraducaoEspecialidadeEventos"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkFatoInteracoes"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimForcaVendas"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimHistoricoZonas"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimKpiTerritorio"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkCoaching"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimMslDivision"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimTargetSro"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimQuadranteMedico"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimQuadranteMedicoGp"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimAuditEnd"
						},
						{
							"dataset": {
								"referenceName": "SINK_KPI_EMAIL_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimPainelMedico"
						}
					],
					"transformations": [
						{
							"name": "ChavemamentoVisitasRealizadas",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "ConcatChave"
						},
						{
							"name": "ConcatChave2"
						},
						{
							"name": "ChaveamentoVisitasMedicos",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "ConcatChave3"
						},
						{
							"name": "ChaveamentoEmail",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "ConcatChave4"
						},
						{
							"name": "ChaveamentoVisitasFranchise",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "UnpivotHistZona"
						},
						{
							"name": "SelecaoTempHistZona"
						},
						{
							"name": "ChaveamentoHistZona"
						},
						{
							"name": "SelecaoTempRepsZona"
						},
						{
							"name": "ChaveamentoRepsZona"
						},
						{
							"name": "SelecaoTempForcaVendas"
						},
						{
							"name": "ChaveamentoForcaVendas"
						},
						{
							"name": "LeftJoinRepsZonaFV"
						},
						{
							"name": "SelecaoTempKPITerr"
						},
						{
							"name": "ChaveamentoKPITerr"
						},
						{
							"name": "SelecaoTempCoaching"
						},
						{
							"name": "ChaveamentoCoching"
						},
						{
							"name": "SelecaoTempMSLDivision"
						},
						{
							"name": "SelecaoTempCadTargetSRO"
						},
						{
							"name": "ChaveamentoTargetSRO"
						},
						{
							"name": "SelecaoTempQM"
						},
						{
							"name": "ChaveamentoQuadranteMedico"
						},
						{
							"name": "SelecaotTempQDGP"
						},
						{
							"name": "ChaveamentoQuadranteMedicoGP"
						},
						{
							"name": "SelecaoTempAuditEnd"
						},
						{
							"name": "ChaveamentoAuditEnd"
						},
						{
							"name": "ChaveamentoPainelMedico"
						},
						{
							"name": "RemoverErros1"
						},
						{
							"name": "RemoverErros2"
						},
						{
							"name": "RemoverErros3"
						},
						{
							"name": "UpperEspecialidadeBR",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "TraducaoEspecialidadePTBR"
						},
						{
							"name": "LeftJoinTraducaoEspecialidadeEventos"
						},
						{
							"name": "ChaveamentoEventos"
						},
						{
							"name": "UnionVisitasMedico"
						},
						{
							"name": "SelecaoFatoInteracao"
						},
						{
							"name": "DimForcaVendas"
						},
						{
							"name": "SelecaoPainelMedico"
						}
					],
					"script": "source(output(\n\t\tID as string,\n\t\tID_VISITA as string,\n\t\tTIPO_VISITA as string,\n\t\tTIPO_VISITA_PTBR as string,\n\t\tTIPO_VISITA_ORDER as string,\n\t\tCLM_IND as string,\n\t\tRECORD_TYPE_ID as string,\n\t\tRECORD_TYPE_NAME as string,\n\t\tDATA as string,\n\t\tCICLO as string,\n\t\tTARGET_PER_ID as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tSEMANA as string,\n\t\tFLAG_VISITA as string,\n\t\tTIPO_INTERACAO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_interacao_visitas_realizadas.parquet']) ~> dIntVisitasRealizadas\nsource(output(\n\t\tID as string,\n\t\tCICLO as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tROW_ID_CONTATO as string,\n\t\tVP as string,\n\t\tVR as string,\n\t\tVRE as string,\n\t\tVRT as string,\n\t\tPLANEJUN as string,\n\t\tREALUN as string,\n\t\tEFFECTIVE_CALLS as string,\n\t\tUNDER_CALLS as string,\n\t\tOVER_CALLS as string,\n\t\tOFF_TARGET_CALLS as string,\n\t\tTARGET_CUST as string,\n\t\tUNDER_TARGET as string,\n\t\tON_TARGET as string,\n\t\tOVER_TARGET as string,\n\t\tEMAIL_CONSENT_KPI as string,\n\t\tAT_DESIRED_FREQUENCY as string,\n\t\tOVER_DESIRED_FREQUENCY as string,\n\t\tTIPO_INTERACAO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_interacao_visitas_medicos.parquet']) ~> dIntVisitasMedico\nsource(output(\n\t\tID as string,\n\t\tCICLO as string,\n\t\tID_ENVIO_EMAIL as string,\n\t\tID_ATIV_EMAIL as string,\n\t\tTIPO_ATIV_EMAIL as string,\n\t\tDATA_ATIV_EMAIL as string,\n\t\tPRODUTO as string,\n\t\tROW_ID_CONTATO as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tDOCUMENTO_EMAIL as string,\n\t\tDESC_DOCUMENTO_EMAIL as string,\n\t\tASSUNTO_EMAIL as string,\n\t\tTIPO_INTERACAO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_interacao_email.parquet']) ~> dIntEmail\nsource(output(\n\t\tID as string,\n\t\tROW_ID_CONTATO as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tCICLO as string,\n\t\tPRODUTO_FRANCHISE as string,\n\t\tFRANCHISE as string,\n\t\tSUB_CAT_FRANCHISE as string,\n\t\tPESO_FRANCHISE as string,\n\t\tTIPO_INTERACAO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_interacao_visitas_franchise.parquet']) ~> dIntVisitasFranchise\nsource(output(\n\t\tEVENTO as string,\n\t\tID_EVENTO as string,\n\t\tEV_CICLO as string,\n\t\tDATA_EVENTO as string,\n\t\tDATA_EVENTO_2 as string,\n\t\tEV_CICLO_TERRITORIO as string,\n\t\tEV_CICLO_CONTATO as string,\n\t\tKEY_TERR_CONT_CICLO as string,\n\t\tID_PARTICIPANTE as string,\n\t\tNOME_PARTICIPANTE as string,\n\t\tEV_ROW_ID_TERRITORIO as string,\n\t\tNOME_USUARIO as string,\n\t\tEV_ROW_ID_CONTATO as string,\n\t\tDOCUMENTO as string,\n\t\tEV_ESPECIALIDADE_ENG as string,\n\t\tSTATUS_CONVIDADO_GR as string,\n\t\tSTATUS_CONVIDADO as string,\n\t\tSTATUS_CONVIDADO_ENG as string,\n\t\tPRODUTO_PRIMARIO as string,\n\t\tPRODUTO_SECUNDARIO as string,\n\t\tTIPO_PARTICIPACAO as string,\n\t\tTIPO_PARTICIPACAO_ENG as string,\n\t\tTIPO_CONTA as string,\n\t\tTIPO_CONTA_ENG as string,\n\t\tVISITADO_SETOR as string,\n\t\tNOME_SETOR_VISITANTE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_interacao_eventos.parquet']) ~> dIntEventos\nsource(output(\n\t\tUF as string,\n\t\t{Cidade Base} as string,\n\t\tCHAVE as string,\n\t\tTotal_Reps_OneFarma as short,\n\t\t{2020-05-26} as string,\n\t\t{2020-05-29} as string,\n\t\t{2020-06-01} as string,\n\t\t{2020-06-02} as string,\n\t\t{2020-06-03} as string,\n\t\t{2020-06-08} as string,\n\t\t{2020-06-09} as string,\n\t\t{2020-06-10} as string,\n\t\t{2020-06-11} as string,\n\t\t{2020-06-15} as string,\n\t\t{2020-06-17} as string,\n\t\t{2020-06-18} as string,\n\t\t{2020-06-19} as string,\n\t\t{2020-06-22} as string,\n\t\t{2020-06-24} as string,\n\t\t{2020-06-25} as string,\n\t\t{2020-06-26} as string,\n\t\t{2020-06-29} as string,\n\t\t{2020-06-30} as string,\n\t\t{2020-07-01} as string,\n\t\t{2020-07-06} as string,\n\t\t{2020-07-07} as string,\n\t\t{2020-07-10} as string,\n\t\t{2020-07-13} as string,\n\t\t{2020-07-14} as string,\n\t\t{2020-07-15} as string,\n\t\t{2020-07-20} as string,\n\t\t{2020-07-21} as string,\n\t\t{2020-07-27} as string,\n\t\t{2020-07-28} as string,\n\t\t{2020-08-04} as string,\n\t\t{2020-08-05} as string,\n\t\t{2020-08-06} as string,\n\t\t{2020-08-07} as string,\n\t\t{2020-08-10} as string,\n\t\t{2020-08-11} as string,\n\t\t{2020-09-04} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tinferDriftedColumnTypes: true,\n\tformat: 'excel',\n\tcontainer: 'gsksynapsestorage',\n\tfolderPath: 'synapse/workspaces/gsk-synapse/warehouse/aux.tabelas_auxiliares',\n\tfileName: 'BASE CIDADES REPS - 04_09_2020.xlsx',\n\tsheetName: 'ZONAS CIDADES - HISTORICO',\n\tfirstRowAsHeader: true) ~> HistZona\nsource(output(\n\t\tMudid as string,\n\t\tCIDADE as string,\n\t\tUF as string,\n\t\tCHAVE as string,\n\t\tZONA as string,\n\t\t{_c5} as string,\n\t\t{_c6} as string,\n\t\t{_c7} as string,\n\t\t{_c8} as string,\n\t\t{_c9} as string,\n\t\t{_c10} as string,\n\t\t{_c11} as string,\n\t\t{_c12} as string,\n\t\t{_c13} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tcontainer: 'gsksynapsestorage',\n\tfolderPath: 'synapse/workspaces/gsk-synapse/warehouse/aux.tabelas_auxiliares',\n\tfileName: 'BASE CIDADES REPS - 04_09_2020.xlsx',\n\tsheetName: 'REPS_ZONAS',\n\tfirstRowAsHeader: true) ~> RepsZona\nsource(output(\n\t\tID as string,\n\t\tBU as string,\n\t\tDIVISAO as string,\n\t\tNOME_GD as string,\n\t\tNOME_GR as string,\n\t\tNOME_REPRESENTANTE as string,\n\t\tMUDID as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tTERRITORIO as string,\n\t\tTERRITORIO_GD as string,\n\t\tTERRITORIO_GR as string,\n\t\tCICLO_FV as string,\n\t\tROW_ID_FUNCIONARIO as string,\n\t\tFLAG_PROJETO as string,\n\t\tFLAG_TARGET as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_forca_vendas.parquet']) ~> dForcaVendas\nsource(output(\n\t\tCICLO as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tTFT as string,\n\t\tDIAS_UTEIS as string,\n\t\tVISITAS_ABATER as string,\n\t\tOBJETIVO_VISITA_DIA as string,\n\t\tDIAS_VISITACAO as string,\n\t\tVR_CLM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_kpi_territorio.parquet']) ~> dKPITerritorio\nsource(output(\n\t\tCICLO as string,\n\t\tTERRITORIO_GD as string,\n\t\tTOTAL_COACHING as string,\n\t\tTOTAL_ABATER as string,\n\t\tDIAS_UTEIS_COACHING as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_coaching.parquet']) ~> dCoaching\nsource(output(\n\t\tKEY_DIVISAO_CICLO as string,\n\t\tFUNC_TOTAL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_msl_division.parquet']) ~> dMSLDivision\nsource(output(\n\t\tID as string,\n\t\tCICLO as string,\n\t\tDIVISAO as string,\n\t\tTARGET_SRO_CRM as string,\n\t\tTARGET_SRO_VISITA as string,\n\t\tTARGET_SRO_MEDIA_DIA as string,\n\t\tTARGET_SRO_COACHING as string,\n\t\tTARGET_SRO_COB as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_cad_target_sro.parquet']) ~> dTargetSRO\nsource(output(\n\t\tID as string,\n\t\tCICLO_QUAD as string,\n\t\tCRM_QUAD as string,\n\t\tMERCADO_QUAD as string,\n\t\tCATEGORIA_QUAD as string,\n\t\tMKT_SHARE_QUAD as string,\n\t\tQUADRANTE_QUAD as string,\n\t\tJORNADA_QUAD as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_quadrante_medico.parquet']) ~> dQuadranteMedico\nsource(output(\n\t\tID as string,\n\t\tCRM_GP as string,\n\t\tMERCADO_GP as string,\n\t\tCATEGORIA_GP as string,\n\t\tJORNADA_GP as string,\n\t\tQUADRANTE_GP as string,\n\t\tROW_ID_TERRITORIO_GP as string,\n\t\tROW_ID_CONTATO_GP as string,\n\t\tCICLO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_quadrante_medico_gp.parquet']) ~> dQuadranteMedicoGP\nsource(output(\n\t\tID as string,\n\t\tCRM_UNIV as string,\n\t\tMEDICO_UNIV as string,\n\t\tESPECIALIDADE_UNIV as string,\n\t\tLOGRADOURO_UNIV as string,\n\t\tBAIRRO_UNIV as string,\n\t\tCIDADE_UNIV as string,\n\t\tCEP_UNIV as string,\n\t\tORIGEM_UNIV as string,\n\t\tUF_UNIV as string,\n\t\tBRICK_UNIV as string,\n\t\tTELEFONE_UNIV as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_audit_end.parquet']) ~> dAuditEnd\nsource(output(\n\t\tCRM_CICLO as string,\n\t\tMES as string,\n\t\tCICLO as string,\n\t\tCRM as string,\n\t\tMEDICO as string,\n\t\tTIPO as string,\n\t\tTIPOCONTATO as string,\n\t\tGRUPOPROMOCIONAL as string,\n\t\tESPECIALIDADE as string,\n\t\tLOGRADOURO as string,\n\t\tCOMPLEMENTO as string,\n\t\tBAIRRO as string,\n\t\tCIDADE as string,\n\t\tUF as string,\n\t\tCEP as string,\n\t\tBRICK as string,\n\t\tTELEFONEMEDICO as string,\n\t\tCELULARMEDICO as string,\n\t\tEMAIL_1_1 as string,\n\t\tROW_ID_FUNCIONARIO as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tROW_ID_CONTATO as string,\n\t\tSTATUS as string,\n\t\tQTD_VISITA_PLANEJADA_PAINEL as string,\n\t\tQTD_VISITA_REALIZADA_PAINEL as string,\n\t\tESPECIALIDADE_02 as string,\n\t\tESPECIALIDADE_03 as string,\n\t\tVP_PROX as string,\n\t\tSTATUS_MEDICO as string,\n\t\tEMAIL_1_1_CONSENT as string,\n\t\tNETWORK_ID as string,\n\t\tRX_GIGYA_ID as string,\n\t\tVEEVA_ID as string,\n\t\tROW_ID_CONTATO_EXT as string,\n\t\tEMAIL_MASS as string,\n\t\tEMAIL_MASS_CONSENT as string,\n\t\tCYCLE_PLAN as string,\n\t\tMERCADO as string,\n\t\tPRODUTO_PAINEL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.email1to1/dim_painel_medico.parquet']) ~> dPainelMedico\nsource(output(\n\t\tEN as string,\n\t\tPT_BR as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tfileSystem: 'gsksynapsestorage',\n\tfolderPath: 'synapse/workspaces/gsk-synapse/warehouse/aux.tabelas_auxiliares',\n\tfileName: 'Aux_Veeva_Especialidade_Traducao.xlsx',\n\tsheetName: 'Sheet3',\n\tfirstRowAsHeader: true) ~> TraducaoEspecialidadeEventos\nConcatChave select(mapColumn(\n\t\tKEY_TERR_CONT_CICLO,\n\t\tID_VISITA,\n\t\tTIPO_VISITA,\n\t\tTIPO_VISITA_PTBR,\n\t\tTIPO_VISITA_ORDER,\n\t\tCLM_IND,\n\t\tRECORD_TYPE_ID,\n\t\tRECORD_TYPE_NAME,\n\t\tDATA,\n\t\tCICLO,\n\t\tTARGET_PER_ID,\n\t\tROW_ID_TERRITORIO,\n\t\tSEMANA,\n\t\tFLAG_VISITA,\n\t\tTIPO_INTERACAO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChavemamentoVisitasRealizadas\ndIntVisitasRealizadas derive(KEY_TERR_CONT_CICLO = concat(ROW_ID_TERRITORIO, TARGET_PER_ID, CICLO)) ~> ConcatChave\ndIntVisitasMedico derive(KEY_TERR_CONT_CICLO = concat(ROW_ID_TERRITORIO,ROW_ID_CONTATO,CICLO)) ~> ConcatChave2\nConcatChave2 select(mapColumn(\n\t\tKEY_TERR_CONT_CICLO,\n\t\tCICLO,\n\t\tROW_ID_TERRITORIO,\n\t\tROW_ID_CONTATO,\n\t\tVP,\n\t\tVR,\n\t\tVRE,\n\t\tVRT,\n\t\tPLANEJUN,\n\t\tREALUN,\n\t\tEFFECTIVE_CALLS,\n\t\tUNDER_CALLS,\n\t\tOVER_CALLS,\n\t\tOFF_TARGET_CALLS,\n\t\tTARGET_CUST,\n\t\tUNDER_TARGET,\n\t\tON_TARGET,\n\t\tOVER_TARGET,\n\t\tEMAIL_CONSENT_KPI,\n\t\tAT_DESIRED_FREQUENCY,\n\t\tOVER_DESIRED_FREQUENCY,\n\t\tTIPO_INTERACAO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChaveamentoVisitasMedicos\ndIntEmail derive(KEY_TERR_CONT_CICLO = concat(ROW_ID_TERRITORIO,ROW_ID_CONTATO,CICLO)) ~> ConcatChave3\nConcatChave3 select(mapColumn(\n\t\tKEY_TERR_CONT_CICLO,\n\t\tCICLO,\n\t\tID_ENVIO_EMAIL,\n\t\tID_ATIV_EMAIL,\n\t\tTIPO_ATIV_EMAIL,\n\t\tDATA_ATIV_EMAIL,\n\t\tPRODUTO,\n\t\tROW_ID_CONTATO,\n\t\tROW_ID_TERRITORIO,\n\t\tDOCUMENTO_EMAIL,\n\t\tDESC_DOCUMENTO_EMAIL,\n\t\tASSUNTO_EMAIL,\n\t\tTIPO_INTERACAO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChaveamentoEmail\ndIntVisitasFranchise derive(KEY_TERR_CONT_CICLO = concat(ROW_ID_TERRITORIO,ROW_ID_CONTATO,CICLO)) ~> ConcatChave4\nConcatChave4 select(mapColumn(\n\t\tKEY_TERR_CONT_CICLO,\n\t\tROW_ID_CONTATO,\n\t\tROW_ID_TERRITORIO,\n\t\tCICLO,\n\t\tPRODUTO_FRANCHISE,\n\t\tFRANCHISE,\n\t\tSUB_CAT_FRANCHISE,\n\t\tPESO_FRANCHISE,\n\t\tTIPO_INTERACAO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChaveamentoVisitasFranchise\nHistZona unpivot(output(\n\t\tDATA_ZONA as string,\n\t\t{2020-05-26} as string,\n\t\t{2020-05-29} as string,\n\t\t{2020-06-01} as string,\n\t\t{2020-06-02} as string,\n\t\t{2020-06-03} as string,\n\t\t{2020-06-08} as string,\n\t\t{2020-06-09} as string,\n\t\t{2020-06-10} as string,\n\t\t{2020-06-11} as string,\n\t\t{2020-06-15} as string,\n\t\t{2020-06-17} as string,\n\t\t{2020-06-18} as string,\n\t\t{2020-06-19} as string,\n\t\t{2020-06-22} as string,\n\t\t{2020-06-24} as string,\n\t\t{2020-06-25} as string,\n\t\t{2020-06-26} as string,\n\t\t{2020-06-29} as string,\n\t\t{2020-06-30} as string,\n\t\t{2020-07-01} as string,\n\t\t{2020-07-06} as string,\n\t\t{2020-07-07} as string,\n\t\t{2020-07-10} as string,\n\t\t{2020-07-13} as string,\n\t\t{2020-07-14} as string,\n\t\t{2020-07-15} as string,\n\t\t{2020-07-20} as string,\n\t\t{2020-07-21} as string,\n\t\t{2020-07-27} as string,\n\t\t{2020-07-28} as string,\n\t\t{2020-08-04} as string,\n\t\t{2020-08-05} as string,\n\t\t{2020-08-06} as string,\n\t\t{2020-08-07} as string,\n\t\t{2020-08-10} as string,\n\t\t{2020-08-11} as string,\n\t\t{2020-09-04} as string\n\t),\n\tungroupBy(UF,\n\t\t{Cidade Base},\n\t\tCHAVE,\n\t\tTotal_Reps_OneFarma),\n\tlateral: true,\n\tignoreNullPivots: true) ~> UnpivotHistZona\nUnpivotHistZona select(mapColumn(\n\t\tCHAVE_ZONA = CHAVE,\n\t\tDATA_ZONA,\n\t\tSTATUS_ZONA = {2020-05-26}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempHistZona\nSelecaoTempHistZona derive(DATA_ZONA = toDate(DATA_ZONA),\n\t\tNUM_DATA_ZONA = minus(toDate(DATA_ZONA),toDate('1900-01-01'))+2,\n\t\tMES_ZONA = toString(toDate(DATA_ZONA), 'MMM')) ~> ChaveamentoHistZona\nRepsZona select(mapColumn(\n\t\tMUDID = Mudid,\n\t\tCIDADE_ZONA = CIDADE,\n\t\tUF_ZONA = UF,\n\t\tCHAVE,\n\t\tZONA_COMPLETA = ZONA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempRepsZona\nSelecaoTempRepsZona derive(CHAVE_ZONA = concat(CIDADE_ZONA,'-',UF_ZONA),\n\t\tZONA = trim(split(ZONA_COMPLETA,' - ')[1])) ~> ChaveamentoRepsZona\ndForcaVendas select(mapColumn(\n\t\tBU,\n\t\tDIVISAO,\n\t\tNOME_GD,\n\t\tNOME_GR,\n\t\tNOME_REPRESENTANTE,\n\t\tMUDID,\n\t\tROW_ID_TERRITORIO,\n\t\tTERRITORIO,\n\t\tTERRITORIO_GD,\n\t\tTERRITORIO_GR,\n\t\tCICLO_FV,\n\t\tROW_ID_FUNCIONARIO,\n\t\tFLAG_PROJETO,\n\t\tFLAG_TARGET\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempForcaVendas\nSelecaoTempForcaVendas derive(KEY_TERR_CICLO = concat(ROW_ID_TERRITORIO,CICLO_FV),\n\t\tKEY_CICLO_TERR_GD = concat(CICLO_FV,right(TERRITORIO_GD,6)),\n\t\tKEY_DIVISAO_CICLO = concat(DIVISAO, CICLO_FV),\n\t\tKEY_MUDID_TERR = concat(MUDID, TERRITORIO),\n\t\tKEY_TERR = trim(concat(ROW_ID_TERRITORIO,''))) ~> ChaveamentoForcaVendas\nChaveamentoForcaVendas, ChaveamentoRepsZona join(SelecaoTempForcaVendas@MUDID == SelecaoTempRepsZona@MUDID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinRepsZonaFV\ndKPITerritorio select(mapColumn(\n\t\tCICLO,\n\t\tROW_ID_TERRITORIO,\n\t\tTFT,\n\t\tDIAS_UTEIS,\n\t\tVISITAS_ABATER,\n\t\tOBJETIVO_VISITA_DIA,\n\t\tDIAS_VISITACAO,\n\t\tVR_CLM\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempKPITerr\nSelecaoTempKPITerr derive(KEY_TERR_CICLO = concat(ROW_ID_TERRITORIO,CICLO)) ~> ChaveamentoKPITerr\ndCoaching select(mapColumn(\n\t\tCICLO,\n\t\tTERRITORIO_GD,\n\t\tTOTAL_COACHING,\n\t\tTOTAL_ABATER,\n\t\tDIAS_UTEIS_COACHING\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempCoaching\nSelecaoTempCoaching derive(KEY_CICLO_TERR_GD = concat(CICLO, right(TERRITORIO_GD, 6))) ~> ChaveamentoCoching\ndMSLDivision select(mapColumn(\n\t\tKEY_DIVISAO_CICLO,\n\t\tFUNC_TOTAL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempMSLDivision\ndTargetSRO select(mapColumn(\n\t\tCICLO,\n\t\tDIVISAO,\n\t\tTARGET_SRO_CRM,\n\t\tTARGET_SRO_VISITA,\n\t\tTARGET_SRO_MEDIA_DIA,\n\t\tTARGET_SRO_COACHING,\n\t\tTARGET_SRO_COB\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempCadTargetSRO\nSelecaoTempCadTargetSRO derive(KEY_DIVISAO_CICLO = concat(DIVISAO, CICLO)) ~> ChaveamentoTargetSRO\ndQuadranteMedico select(mapColumn(\n\t\tCICLO_QUAD,\n\t\tCRM_QUAD,\n\t\tMERCADO_QUAD,\n\t\tCATEGORIA_QUAD,\n\t\tMKT_SHARE_QUAD,\n\t\tQUADRANTE_QUAD,\n\t\tJORNADA_QUAD\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempQM\nSelecaoTempQM derive(KEY_CRM_UNIV = trim(concat(CRM_QUAD,'')),\n\t\tKEY_CICLO_CRM = concat(CICLO_QUAD,CRM_QUAD)) ~> ChaveamentoQuadranteMedico\ndQuadranteMedicoGP select(mapColumn(\n\t\tCRM_GP,\n\t\tMERCADO_GP,\n\t\tCATEGORIA_GP,\n\t\tJORNADA_GP,\n\t\tQUADRANTE_GP,\n\t\tROW_ID_TERRITORIO_GP,\n\t\tROW_ID_CONTATO_GP,\n\t\tCICLO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaotTempQDGP\nSelecaotTempQDGP derive(KEY_TERR_CONT_CICLO = concat(ROW_ID_TERRITORIO_GP, ROW_ID_CONTATO_GP, CICLO)) ~> ChaveamentoQuadranteMedicoGP\ndAuditEnd select(mapColumn(\n\t\tCRM_UNIV,\n\t\tMEDICO_UNIV,\n\t\tESPECIALIDADE_UNIV,\n\t\tLOGRADOURO_UNIV,\n\t\tBAIRRO_UNIV,\n\t\tCIDADE_UNIV,\n\t\tCEP_UNIV,\n\t\tORIGEM_UNIV,\n\t\tUF_UNIV,\n\t\tBRICK_UNIV,\n\t\tTELEFONE_UNIV\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoTempAuditEnd\nSelecaoTempAuditEnd derive(KEY_CRM_UNIV = trim(concat(CRM_UNIV,''))) ~> ChaveamentoAuditEnd\ndPainelMedico derive(KEY_TERR_CONT_CICLO = concat(ROW_ID_TERRITORIO, ROW_ID_CONTATO,CICLO),\n\t\tKEY_TERR_CICLO = concat(ROW_ID_TERRITORIO, CICLO),\n\t\tKEY_CICLO_CRM = concat(CICLO, CRM),\n\t\t{% Date Key} = toDate(toString(CICLO, 'yyyyMM'),'yyyyMM')) ~> ChaveamentoPainelMedico\ndIntEventos filter(EV_CICLO != '43590') ~> RemoverErros1\nRemoverErros1 filter(EVENTO != 'rio') ~> RemoverErros2\nRemoverErros2 filter(ID_EVENTO != '33825') ~> RemoverErros3\nTraducaoEspecialidadeEventos derive(PT_BR = upper(PT_BR)) ~> UpperEspecialidadeBR\nUpperEspecialidadeBR select(mapColumn(\n\t\tEN,\n\t\tEV_ESPECIALIDADE = PT_BR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TraducaoEspecialidadePTBR\nRemoverErros3, TraducaoEspecialidadePTBR join(EV_ESPECIALIDADE_ENG == EN,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinTraducaoEspecialidadeEventos\nLeftJoinTraducaoEspecialidadeEventos select(mapColumn(\n\t\tEVENTO,\n\t\tID_EVENTO,\n\t\tEV_CICLO,\n\t\tDATA_EVENTO,\n\t\tDATA_EVENTO_2,\n\t\tEV_CICLO_TERRITORIO,\n\t\tEV_CICLO_CONTATO,\n\t\tKEY_TERR_CONT_CICLO,\n\t\tID_PARTICIPANTE,\n\t\tNOME_PARTICIPANTE,\n\t\tEV_ROW_ID_TERRITORIO,\n\t\tNOME_USUARIO,\n\t\tEV_ROW_ID_CONTATO,\n\t\tDOCUMENTO,\n\t\tEV_ESPECIALIDADE_ENG,\n\t\tSTATUS_CONVIDADO_GR,\n\t\tSTATUS_CONVIDADO,\n\t\tSTATUS_CONVIDADO_ENG,\n\t\tPRODUTO_PRIMARIO,\n\t\tPRODUTO_SECUNDARIO,\n\t\tTIPO_PARTICIPACAO,\n\t\tTIPO_PARTICIPACAO_ENG,\n\t\tTIPO_CONTA,\n\t\tTIPO_CONTA_ENG,\n\t\tVISITADO_SETOR,\n\t\tNOME_SETOR_VISITANTE,\n\t\tEV_ESPECIALIDADE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChaveamentoEventos\nChavemamentoVisitasRealizadas, ChaveamentoVisitasMedicos, ChaveamentoEmail, ChaveamentoVisitasFranchise, ChaveamentoEventos union(byName: true)~> UnionVisitasMedico\nUnionVisitasMedico select(mapColumn(\n\t\tKEY_TERR_CONT_CICLO,\n\t\tID_VISITA,\n\t\tTIPO_VISITA,\n\t\tTIPO_VISITA_PTBR,\n\t\tTIPO_VISITA_ORDER,\n\t\tCLM_IND,\n\t\tRECORD_TYPE_ID,\n\t\tRECORD_TYPE_NAME,\n\t\tDATA,\n\t\tCICLO,\n\t\tTARGET_PER_ID,\n\t\tROW_ID_TERRITORIO,\n\t\tSEMANA,\n\t\tFLAG_VISITA,\n\t\tTIPO_INTERACAO,\n\t\tROW_ID_CONTATO,\n\t\tVP,\n\t\tVR,\n\t\tVRE,\n\t\tVRT,\n\t\tPLANEJUN,\n\t\tREALUN,\n\t\tEFFECTIVE_CALLS,\n\t\tUNDER_CALLS,\n\t\tOVER_CALLS,\n\t\tOFF_TARGET_CALLS,\n\t\tTARGET_CUST,\n\t\tUNDER_TARGET,\n\t\tON_TARGET,\n\t\tOVER_TARGET,\n\t\tEMAIL_CONSENT_KPI,\n\t\tAT_DESIRED_FREQUENCY,\n\t\tOVER_DESIRED_FREQUENCY,\n\t\tID_ENVIO_EMAIL,\n\t\tID_ATIV_EMAIL,\n\t\tTIPO_ATIV_EMAIL,\n\t\tDATA_ATIV_EMAIL,\n\t\tPRODUTO,\n\t\tDOCUMENTO_EMAIL,\n\t\tDESC_DOCUMENTO_EMAIL,\n\t\tASSUNTO_EMAIL,\n\t\tPRODUTO_FRANCHISE,\n\t\tFRANCHISE,\n\t\tSUB_CAT_FRANCHISE,\n\t\tPESO_FRANCHISE,\n\t\tEVENTO,\n\t\tID_EVENTO,\n\t\tEV_CICLO,\n\t\tDATA_EVENTO,\n\t\tDATA_EVENTO_2,\n\t\tEV_CICLO_TERRITORIO,\n\t\tEV_CICLO_CONTATO,\n\t\tID_PARTICIPANTE,\n\t\tNOME_PARTICIPANTE,\n\t\tEV_ROW_ID_TERRITORIO,\n\t\tNOME_USUARIO,\n\t\tEV_ROW_ID_CONTATO,\n\t\tDOCUMENTO,\n\t\tEV_ESPECIALIDADE_ENG,\n\t\tSTATUS_CONVIDADO_GR,\n\t\tSTATUS_CONVIDADO,\n\t\tSTATUS_CONVIDADO_ENG,\n\t\tPRODUTO_PRIMARIO,\n\t\tPRODUTO_SECUNDARIO,\n\t\tTIPO_PARTICIPACAO,\n\t\tTIPO_PARTICIPACAO_ENG,\n\t\tTIPO_CONTA,\n\t\tTIPO_CONTA_ENG,\n\t\tVISITADO_SETOR,\n\t\tNOME_SETOR_VISITANTE,\n\t\tEV_ESPECIALIDADE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoFatoInteracao\nLeftJoinRepsZonaFV select(mapColumn(\n\t\tBU,\n\t\tDIVISAO,\n\t\tNOME_GD,\n\t\tNOME_GR,\n\t\tNOME_REPRESENTANTE,\n\t\tMUDID = SelecaoTempForcaVendas@MUDID,\n\t\tROW_ID_TERRITORIO,\n\t\tTERRITORIO,\n\t\tTERRITORIO_GD,\n\t\tTERRITORIO_GR,\n\t\tCICLO_FV,\n\t\tROW_ID_FUNCIONARIO,\n\t\tFLAG_PROJETO,\n\t\tFLAG_TARGET,\n\t\tKEY_TERR_CICLO,\n\t\tKEY_CICLO_TERR_GD,\n\t\tKEY_DIVISAO_CICLO,\n\t\tKEY_MUDID_TERR,\n\t\tKEY_TERR,\n\t\tMUDID = SelecaoTempRepsZona@MUDID,\n\t\tCIDADE_ZONA,\n\t\tUF_ZONA,\n\t\tCHAVE,\n\t\tZONA_COMPLETA,\n\t\tCHAVE_ZONA,\n\t\tZONA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimForcaVendas\nChaveamentoPainelMedico select(mapColumn(\n\t\tCRM_CICLO,\n\t\tMES,\n\t\tCICLO,\n\t\tCRM,\n\t\tMEDICO,\n\t\tTIPO,\n\t\tTIPOCONTATO,\n\t\tGRUPOPROMOCIONAL,\n\t\tESPECIALIDADE,\n\t\tLOGRADOURO,\n\t\tCOMPLEMENTO,\n\t\tBAIRRO,\n\t\tCIDADE,\n\t\tUF,\n\t\tCEP,\n\t\tBRICK,\n\t\tTELEFONEMEDICO,\n\t\tCELULARMEDICO,\n\t\tEMAIL_1_1,\n\t\tROW_ID_FUNCIONARIO,\n\t\tROW_ID_TERRITORIO,\n\t\tROW_ID_CONTATO,\n\t\tSTATUS,\n\t\tQTD_VISITA_PLANEJADA_PAINEL,\n\t\tQTD_VISITA_REALIZADA_PAINEL,\n\t\tESPECIALIDADE_02,\n\t\tESPECIALIDADE_03,\n\t\tVP_PROX,\n\t\tSTATUS_MEDICO,\n\t\tEMAIL_1_1_CONSENT,\n\t\tNETWORK_ID,\n\t\tRX_GIGYA_ID,\n\t\tVEEVA_ID,\n\t\tROW_ID_CONTATO_EXT,\n\t\tEMAIL_MASS,\n\t\tEMAIL_MASS_CONSENT,\n\t\tCYCLE_PLAN,\n\t\tMERCADO,\n\t\tPRODUTO_PAINEL,\n\t\tKEY_TERR_CONT_CICLO,\n\t\tKEY_TERR_CICLO,\n\t\tKEY_CICLO_CRM,\n\t\tDATE_KEY = {% Date Key}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoPainelMedico\nSelecaoFatoInteracao sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'fato_interacoes_[n].parquet',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> SinkFatoInteracoes\nDimForcaVendas sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_forca_vendas.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimForcaVendas\nChaveamentoHistZona sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_historico_zonas.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3) ~> SinkDimHistoricoZonas\nChaveamentoKPITerr sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_kpi_territorio.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3) ~> SinkDimKpiTerritorio\nChaveamentoCoching sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_coaching.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3) ~> SinkCoaching\nSelecaoTempMSLDivision sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_msl_division.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimMslDivision\nChaveamentoTargetSRO sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_target_sro.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimTargetSro\nChaveamentoQuadranteMedico sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'dimensao_quadrante_medico_p_[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimQuadranteMedico\nChaveamentoQuadranteMedicoGP sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'dimensao_quadrante_medico_gp_[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimQuadranteMedicoGp\nChaveamentoAuditEnd sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_audit_end.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimAuditEnd\nSelecaoPainelMedico sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'dimensao_painel_medico_[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimPainelMedico"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Dim_Email_1_1_Parquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageSynapse')]",
				"[concat(variables('workspaceId'), '/datasets/Dim_KPI_Vis_Parquet')]",
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]",
				"[concat(variables('workspaceId'), '/datasets/SINK_KPI_EMAIL_ADSL2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GSO_ETL')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GSO"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "fGsoCallSummarySource"
						},
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "fGsoResponseSource"
						},
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "dSalesForceTeradata"
						},
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "dSalesForceFuncionario"
						},
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "dSalesForceSqlServer"
						},
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "dSalesForceRegiao"
						},
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "dSurveyQuestion"
						},
						{
							"dataset": {
								"referenceName": "Fact_GSO_Data_Flow",
								"type": "DatasetReference"
							},
							"name": "dVisits"
						},
						{
							"linkedService": {
								"referenceName": "AzureBlobStorageSynapse",
								"type": "LinkedServiceReference"
							},
							"name": "dGCO"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SINK_GSO_ADSL2",
								"type": "DatasetReference"
							},
							"name": "FatoGsoDestino"
						},
						{
							"dataset": {
								"referenceName": "SINK_GSO_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SalesForceDestino"
						},
						{
							"dataset": {
								"referenceName": "SINK_GSO_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimSurveyQuestion"
						},
						{
							"dataset": {
								"referenceName": "SINK_GSO_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkDimVisits"
						},
						{
							"dataset": {
								"referenceName": "SINK_GSO_ADSL2",
								"type": "DatasetReference"
							},
							"name": "SinkGCO"
						}
					],
					"transformations": [
						{
							"name": "UniaoFato"
						},
						{
							"name": "LeftJoinFuncionario"
						},
						{
							"name": "SelecionarValoresUnicos"
						},
						{
							"name": "LeftJoinSalesForceSQLSERVER"
						},
						{
							"name": "SelecionarValoresUnicos2"
						},
						{
							"name": "LeftJoinRegiao"
						},
						{
							"name": "SelecaoFinal"
						},
						{
							"name": "SelecaoGCO"
						},
						{
							"name": "CoalesceColumnNGSO"
						}
					],
					"script": "source(output(\n\t\tCALL_SUMMARY_ID as string,\n\t\tPARENT_CALL_AID as string,\n\t\tLOCAL_CALL_DATE_ID as string,\n\t\tCALL_DATE_ID as string,\n\t\tTERRITORY_ID as string,\n\t\tCYCLE as string,\n\t\tSALES_FORCE_KEY as string,\n\t\tDATE as string,\n\t\tLOCAL_CALL_TIME_ID as string,\n\t\tACCOUNT_ID as string,\n\t\tCALL_NAME as string,\n\t\tRX_CALL_TYPE as string,\n\t\tCALL_STATUS as string,\n\t\tATTENDEE_TYPE as string,\n\t\tCLM_IND as string,\n\t\tSAMPLE_CALL_IND as string,\n\t\tCALL_TYPE as string,\n\t\tDETAILED_PRODUCTS as string,\n\t\tDURATION as string,\n\t\tCREATED_DATE_ID as string,\n\t\tCREATED_DATE_TIME_ID as string,\n\t\tLAST_MODIFIED_DATE_ID as string,\n\t\tLAST_MODIFIED_DATE_TIME_ID as string,\n\t\tPRE_CALL_NOTES as string,\n\t\tNEXT_CALL_NOTES as string,\n\t\tREVIEW_STATUS as string,\n\t\tACCOUNT_NAME as string,\n\t\tRX_LEGAL_ID as string,\n\t\tKEY_MESSAGE_NAME as string,\n\t\tQUESTION_ID as string,\n\t\tPRODUCT as string,\n\t\tCALL_DATE as string,\n\t\tORIGEM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/fato_gso_call_summary.parquet'],\n\tpartitionBy('hash', 1)) ~> fGsoCallSummarySource\nsource(output(\n\t\tSURVEY_KEY as string,\n\t\tQUESTION_ID as string,\n\t\tSOURCE_CREATED_TS as string,\n\t\tRESPONSE_LAST_MODIFIED_TS as string,\n\t\tSOURCE_USER_AID as string,\n\t\tQUESTION_RESPONSE_ID as string,\n\t\tRESPONSE_NAME as string,\n\t\tRESPONSE_NUMBER as string,\n\t\tRESPONSE as string,\n\t\tPRODUCT as string,\n\t\tRESPONSE_QUESTION_ORDER as string,\n\t\tDATE as string,\n\t\tTARGET_LAST_MODIFIED_TS as string,\n\t\tMODIFIED_DATE as string,\n\t\tSTART_DATE_ID as string,\n\t\tEND_DATE_ID as string,\n\t\tREVIEW_DATE_ID as string,\n\t\tREVIEW_STATUS as string,\n\t\tMANAGER_TERRITORY_ID as string,\n\t\tEMPLOYEE_TERRITORY_ID as string,\n\t\tTERRITORY_ID as string,\n\t\tDATE_DIFF as string,\n\t\tFLAG_PREMIO as string,\n\t\tSALES_FORCE_KEY as string,\n\t\tRESPONSES_KEY as string,\n\t\tORIGEM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/fato_gso_response.parquet'],\n\tpartitionBy('hash', 1)) ~> fGsoResponseSource\nsource(output(\n\t\tRX_EXTERNAL_ID as string,\n\t\tUSER_ID as string,\n\t\tSF_SOURCE_USER_AID as string,\n\t\tUSER_NAME as string,\n\t\tFIRST_NAME as string,\n\t\tNAME as string,\n\t\tLAST_NAME as string,\n\t\tCOUNTRY as string,\n\t\tSTATE_PROVINCE as string,\n\t\tCITY as string,\n\t\tPOSTAL_CODE as string,\n\t\tACTIVE_IND as string,\n\t\tEMAIL as string,\n\t\tEMPLOYEE_NUMBER_AID as string,\n\t\tUSER_IDENTIFIER_AID as string,\n\t\tCORE_GSK_FUNCTIONAL_PROFILE as string,\n\t\tPROFILE_NAME as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/dim_sales_force_teradata.parquet'],\n\tpartitionBy('hash', 1)) ~> dSalesForceTeradata\nsource(output(\n\t\tRX_EXTERNAL_ID as string,\n\t\tUF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/dim_sales_force_funcionario.parquet'],\n\tpartitionBy('hash', 1)) ~> dSalesForceFuncionario\nsource(output(\n\t\tRX_EXTERNAL_ID as string,\n\t\tCICLO as string,\n\t\tSALES_FORCE_KEY as string,\n\t\tSF_KEY as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tROW_ID_GD as string,\n\t\tNOME_GD as string,\n\t\tNOME_GR as string,\n\t\tTERRITORIO_GD as string,\n\t\tTERRITORIO_GR as string,\n\t\tBU as string,\n\t\t{DIVISÃO} as string,\n\t\tTERRITORIO as string,\n\t\tNOME_REP as string,\n\t\tFLAG_TARGET as string,\n\t\tCICLO_TERRITORIO_DIVISAO as string,\n\t\tCICLO_TERRITORIO as string,\n\t\tMATRICULA_GD as string,\n\t\tMATRICULA_GR as string,\n\t\tTERR as string,\n\t\tNOME_GN as string,\n\t\t{NOME_GRI/KAM} as string,\n\t\t{NOME_GRI/KAM_COACH} as string,\n\t\tROW_ID_FUNCIONARIO as string,\n\t\tSTATUS as string,\n\t\tTERRITORIO_CICLO as string,\n\t\tTERRITORIO_GN as string,\n\t\t{TERRITORIO_GRI/KAM} as string,\n\t\tTERRITORIO_NOME_REP as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/dim_sales_force_sqlserver.parquet'],\n\tpartitionBy('hash', 1)) ~> dSalesForceSqlServer\nsource(output(\n\t\tAREA as string,\n\t\tUF as string,\n\t\tREGION as string,\n\t\tSTATE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/dim_region.parquet'],\n\tpartitionBy('hash', 1)) ~> dSalesForceRegiao\nsource(output(\n\t\tQUESTION_ID as string,\n\t\tQUESTION_CREATED_DATE as string,\n\t\tQUESTION_NAME as string,\n\t\tQUESTION_LAST_MODIFIED_TS as string,\n\t\tQUESTION_TEXT as string,\n\t\tQUESTION_ORDER as string,\n\t\tQUESTION_TYPE as string,\n\t\tTIPO_QUESTAO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/dim_survey_question.parquet']) ~> dSurveyQuestion\nsource(output(\n\t\tSURVEY_KEY as string,\n\t\tVISIT_DATE as string,\n\t\tVISIT_PRODUCT as string,\n\t\tTOTAL_VISITS as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.gso/dim_visits.parquet']) ~> dVisits\nsource(output(\n\t\tRegion as string,\n\t\tCluster as string,\n\t\tCountry as string,\n\t\tSLSL as string,\n\t\tFLSL as string,\n\t\tCity as string,\n\t\t{Business Unit} as string,\n\t\t{Field Visit/ Coaching Date} as date,\n\t\tBrand as string,\n\t\t{Total Number of Calls Observed} as short,\n\t\t{Number of GSO} as short,\n\t\t{1. FLSL builds a motivational and inspirational environment in the opening and during the coaching session } as short,\n\t\t{2. FLSL and Sales Rep agree to the coaching objective/goal } as short,\n\t\t{3. Coaching objective/goal is sequential (Checking previous action) } as short,\n\t\t{4. FLSL and Sales Rep mention and discuss the current performance } as short,\n\t\t{5. Clarity about the potential impact of the current performance is discussed } as short,\n\t\t{6. FLSL and Sales Rep Identify block/barriers to the current performance } as short,\n\t\t{7. Sales Rep gives some solutions to unblock the barriers } as short,\n\t\t{8. FLSL evaluates with Sales Rep the solutions to unblock barriers vs impact } as short,\n\t\t{9. FLSL offers alternative solutions } as short,\n\t\t{10. Explores with Sales Rep the - what, how and when it will be the next steps } as short,\n\t\t{11. Manager asks Sales Rep what further support he/she needs (discuss  the resources) } as short,\n\t\t{12. Builds the action plan and defines the success measures } as short,\n\t\t{13. Identifies the most important action/task to improve capability and maps the top skill / will gaps } as short,\n\t\t{14. Determines the best coaching style (Confront / Direct / Guide / Facilitate / Delegate) and  flexes the coaching style when necessary } as short,\n\t\t{Insightful Questions, Active Listening& Feedback SBI (Situation, Behavior & Impact):} as string,\n\t\t{Action Plans:} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tcontainer: 'gsksynapsestorage',\n\tsheetName: 'GCO',\n\tfirstRowAsHeader: true,\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/aux.tabelas_auxiliares/GCO Pharma Summary*']) ~> dGCO\nfGsoResponseSource, fGsoCallSummarySource union(byName: true,\n\tpartitionBy('hash', 1))~> UniaoFato\ndSalesForceTeradata, dSalesForceFuncionario join(dSalesForceTeradata@RX_EXTERNAL_ID == dSalesForceFuncionario@RX_EXTERNAL_ID,\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> LeftJoinFuncionario\nLeftJoinFuncionario select(mapColumn(\n\t\tRX_EXTERNAL_ID = dSalesForceTeradata@RX_EXTERNAL_ID,\n\t\tUSER_ID,\n\t\tSF_SOURCE_USER_AID,\n\t\tUSER_NAME,\n\t\tFIRST_NAME,\n\t\tNAME,\n\t\tLAST_NAME,\n\t\tCOUNTRY,\n\t\tSTATE_PROVINCE,\n\t\tCITY,\n\t\tPOSTAL_CODE,\n\t\tACTIVE_IND,\n\t\tEMAIL,\n\t\tEMPLOYEE_NUMBER_AID,\n\t\tUSER_IDENTIFIER_AID,\n\t\tCORE_GSK_FUNCTIONAL_PROFILE,\n\t\tPROFILE_NAME,\n\t\tRX_EXTERNAL_ID = dSalesForceFuncionario@RX_EXTERNAL_ID,\n\t\tUF\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecionarValoresUnicos\nSelecionarValoresUnicos, dSalesForceSqlServer join(SelecionarValoresUnicos@RX_EXTERNAL_ID == dSalesForceSqlServer@RX_EXTERNAL_ID,\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> LeftJoinSalesForceSQLSERVER\nLeftJoinSalesForceSQLSERVER select(mapColumn(\n\t\tRX_EXTERNAL_ID = SelecionarValoresUnicos@RX_EXTERNAL_ID,\n\t\tUSER_ID,\n\t\tSF_SOURCE_USER_AID,\n\t\tUSER_NAME,\n\t\tFIRST_NAME,\n\t\tNAME,\n\t\tLAST_NAME,\n\t\tCOUNTRY,\n\t\tSTATE_PROVINCE,\n\t\tCITY,\n\t\tPOSTAL_CODE,\n\t\tACTIVE_IND,\n\t\tEMAIL,\n\t\tEMPLOYEE_NUMBER_AID,\n\t\tUSER_IDENTIFIER_AID,\n\t\tCORE_GSK_FUNCTIONAL_PROFILE,\n\t\tPROFILE_NAME,\n\t\tUF,\n\t\tRX_EXTERNAL_ID = dSalesForceSqlServer@RX_EXTERNAL_ID,\n\t\tCICLO,\n\t\tSALES_FORCE_KEY,\n\t\tSF_KEY,\n\t\tROW_ID_TERRITORIO,\n\t\tROW_ID_GD,\n\t\tNOME_GD,\n\t\tNOME_GR,\n\t\tTERRITORIO_GD,\n\t\tTERRITORIO_GR,\n\t\tBU,\n\t\tDIVISAO = {DIVISÃO},\n\t\tTERRITORIO,\n\t\tNOME_REP,\n\t\tFLAG_TARGET,\n\t\tCICLO_TERRITORIO_DIVISAO,\n\t\tCICLO_TERRITORIO,\n\t\tMATRICULA_GD,\n\t\tMATRICULA_GR,\n\t\tTERR,\n\t\tNOME_GN,\n\t\t{NOME_GRI/KAM},\n\t\t{NOME_GRI/KAM_COACH},\n\t\tROW_ID_FUNCIONARIO,\n\t\tSTATUS,\n\t\tTERRITORIO_CICLO,\n\t\tTERRITORIO_GN,\n\t\t{TERRITORIO_GRI/KAM},\n\t\tTERRITORIO_NOME_REP\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecionarValoresUnicos2\nSelecionarValoresUnicos2, dSalesForceRegiao join(SelecionarValoresUnicos2@UF == dSalesForceRegiao@UF,\n\tjoinType:'left',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> LeftJoinRegiao\nLeftJoinRegiao select(mapColumn(\n\t\tRX_EXTERNAL_ID,\n\t\tUSER_ID,\n\t\tSF_SOURCE_USER_AID,\n\t\tUSER_NAME,\n\t\tFIRST_NAME,\n\t\tNAME,\n\t\tLAST_NAME,\n\t\tCOUNTRY,\n\t\tSTATE_PROVINCE,\n\t\tCITY,\n\t\tPOSTAL_CODE,\n\t\tACTIVE_IND,\n\t\tEMAIL,\n\t\tEMPLOYEE_NUMBER_AID,\n\t\tUSER_IDENTIFIER_AID,\n\t\tCORE_GSK_FUNCTIONAL_PROFILE,\n\t\tPROFILE_NAME,\n\t\tUF = SelecionarValoresUnicos2@UF,\n\t\tCICLO,\n\t\tSALES_FORCE_KEY,\n\t\tSF_KEY,\n\t\tROW_ID_TERRITORIO,\n\t\tROW_ID_GD,\n\t\tNOME_GD,\n\t\tNOME_GR,\n\t\tTERRITORIO_GD,\n\t\tTERRITORIO_GR,\n\t\tBU,\n\t\tDIVISAO,\n\t\tTERRITORIO,\n\t\tNOME_REP,\n\t\tFLAG_TARGET,\n\t\tCICLO_TERRITORIO_DIVISAO,\n\t\tCICLO_TERRITORIO,\n\t\tMATRICULA_GD,\n\t\tMATRICULA_GR,\n\t\tTERR,\n\t\tNOME_GN,\n\t\t{NOME_GRI/KAM},\n\t\t{NOME_GRI/KAM_COACH},\n\t\tROW_ID_FUNCIONARIO,\n\t\tSTATUS,\n\t\tTERRITORIO_CICLO,\n\t\tTERRITORIO_GN,\n\t\t{TERRITORIO_GRI/KAM},\n\t\tTERRITORIO_NOME_REP,\n\t\tAREA,\n\t\tUF = SelecionarValoresUnicos2@UF,\n\t\tREGION,\n\t\tSTATE\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoFinal\ndGCO select(mapColumn(\n\t\tREGION = Region,\n\t\tCLUSTER = Cluster,\n\t\tCOUNTRY = Country,\n\t\tSLSL,\n\t\tFLSL,\n\t\tCITY = City,\n\t\tBUSINESS_UNIT = {Business Unit},\n\t\tFIELD_VISIT_COACHING_DATE = {Field Visit/ Coaching Date},\n\t\tBRAND = Brand,\n\t\tTOTAL_NUMBER_CALLS_OBSERVED = {Total Number of Calls Observed},\n\t\tNUMBER_OF_GSO = {Number of GSO},\n\t\tFLSL_MOTIVATIONAL_INSPIRATIONAL_ENVIRONMENT = {1. FLSL builds a motivational and inspirational environment in the opening and during the coaching session },\n\t\tFLSL_SALES_REP_AGREE_GOAL = {2. FLSL and Sales Rep agree to the coaching objective/goal },\n\t\tCOACHING_GOAL_SEQUENTIAL_PREVIOUS_ACTION = {3. Coaching objective/goal is sequential (Checking previous action) },\n\t\tFLSL_SALES_REP_MENTION_CURRENT_PERFORMANCE = {4. FLSL and Sales Rep mention and discuss the current performance },\n\t\tPOTENTIAL_IMPACT_CURRENT_PERFORMANCE = {5. Clarity about the potential impact of the current performance is discussed },\n\t\tFLSL_SALES_REP_BLOCK_CURRENT_PERFORMANCE = {6. FLSL and Sales Rep Identify block/barriers to the current performance },\n\t\tSALES_REP_SOLUTIONS_UNBLOCK_BARRIERS = {7. Sales Rep gives some solutions to unblock the barriers },\n\t\tFLSL_SALES_REP_SOLUTIONS_UNBLOCK_BARRIERS_IMPACT = {8. FLSL evaluates with Sales Rep the solutions to unblock barriers vs impact },\n\t\tFLSL_OFFERS_ALTERNATIVE_SOLUTIONS = {9. FLSL offers alternative solutions },\n\t\tEXPLORE_SALES_REP_NEXT_STEPS = {10. Explores with Sales Rep the - what, how and when it will be the next steps },\n\t\tMANAGER_ASKS_SALES_REP_SUPPORT_NEEDS = {11. Manager asks Sales Rep what further support he/she needs (discuss  the resources) },\n\t\tBUILDS_PLAN_SUCCESS_MEASURES = {12. Builds the action plan and defines the success measures },\n\t\tIMPORTANT_ACTION_IMPROVE_CAPABILITY_MAPS_TOP_SKILL = {13. Identifies the most important action/task to improve capability and maps the top skill / will gaps },\n\t\tDETERMINES_COACHING_STYLE_FLEXES_COACHING_STYLE = {14. Determines the best coaching style (Confront / Direct / Guide / Facilitate / Delegate) and  flexes the coaching style when necessary },\n\t\tQUESTIONS_ACTIVE_LISTENING_FEEDBACK_SBI = {Insightful Questions, Active Listening& Feedback SBI (Situation, Behavior & Impact):},\n\t\tACTION_PLANS = {Action Plans:}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoGCO\nSelecaoGCO derive(NUMBER_OF_GSO = coalesce(NUMBER_OF_GSO,0)) ~> CoalesceColumnNGSO\nUniaoFato sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['fato_gso.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> FatoGsoDestino\nSelecaoFinal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_sales_force.parquet'],\n\tmapColumn(\n\t\tRX_EXTERNAL_ID,\n\t\tUSER_ID,\n\t\tSF_SOURCE_USER_AID,\n\t\tUSER_NAME,\n\t\tFIRST_NAME,\n\t\tNAME,\n\t\tLAST_NAME,\n\t\tCOUNTRY,\n\t\tSTATE_PROVINCE,\n\t\tCITY,\n\t\tPOSTAL_CODE,\n\t\tACTIVE_IND,\n\t\tEMAIL,\n\t\tEMPLOYEE_NUMBER_AID,\n\t\tUSER_IDENTIFIER_AID,\n\t\tCORE_GSK_FUNCTIONAL_PROFILE,\n\t\tPROFILE_NAME,\n\t\tUF,\n\t\tCICLO,\n\t\tSALES_FORCE_KEY,\n\t\tSF_KEY,\n\t\tROW_ID_TERRITORIO,\n\t\tROW_ID_GD,\n\t\tNOME_GD,\n\t\tNOME_GR,\n\t\tTERRITORIO_GD,\n\t\tTERRITORIO_GR,\n\t\tBU,\n\t\tDIVISAO,\n\t\tTERRITORIO,\n\t\tNOME_REP,\n\t\tFLAG_TARGET,\n\t\tCICLO_TERRITORIO_DIVISAO,\n\t\tCICLO_TERRITORIO,\n\t\tMATRICULA_GD,\n\t\tMATRICULA_GR,\n\t\tTERR,\n\t\tNOME_GN,\n\t\t{NOME_GRI/KAM},\n\t\t{NOME_GRI/KAM_COACH},\n\t\tROW_ID_FUNCIONARIO,\n\t\tSTATUS,\n\t\tTERRITORIO_CICLO,\n\t\tTERRITORIO_GN,\n\t\t{TERRITORIO_GRI/KAM},\n\t\tTERRITORIO_NOME_REP,\n\t\tAREA,\n\t\tREGION,\n\t\tSTATE\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SalesForceDestino\ndSurveyQuestion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_survey_question.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimSurveyQuestion\ndVisits sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_visits.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimVisits\nCoalesceColumnNGSO sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_gco.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkGCO"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Fact_GSO_Data_Flow')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorageSynapse')]",
				"[concat(variables('workspaceId'), '/datasets/SINK_GSO_ADSL2')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_ETL')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "gsk-synapse-WorkspaceDefaultStorage",
								"type": "LinkedServiceReference"
							},
							"name": "DimTopIndependentes"
						},
						{
							"dataset": {
								"referenceName": "Source_Dim_KPI",
								"type": "DatasetReference"
							},
							"name": "DimPainelMedico"
						},
						{
							"dataset": {
								"referenceName": "Source_Dim_KPI",
								"type": "DatasetReference"
							},
							"name": "FatoVisitasRealizadas"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_KPI_Visitacao",
								"type": "DatasetReference"
							},
							"name": "SinkDimPainelMedico"
						},
						{
							"dataset": {
								"referenceName": "Sink_KPI_Visitacao",
								"type": "DatasetReference"
							},
							"name": "SinkFatoVisitasRealizadas"
						}
					],
					"transformations": [
						{
							"name": "CriandoColunaTopIndFlag"
						},
						{
							"name": "ChavemamentoTopIndependente"
						},
						{
							"name": "LeftJoinPainelMedTopIndependente"
						},
						{
							"name": "CondicaoTopIndFlag"
						},
						{
							"name": "SelecaoFinal"
						},
						{
							"name": "TransformarEmData"
						},
						{
							"name": "SelecaoFatoFinal"
						}
					],
					"script": "source(output(\n\t\tCNPJ as string,\n\t\tGRI as string,\n\t\tREP as string,\n\t\t{RAZAO SOCIAL} as string,\n\t\tENDERECO as string,\n\t\tBAIRRO as string,\n\t\tCIDADE as string,\n\t\tUF as string,\n\t\tSTATUS as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tfileSystem: 'gsksynapsestorage',\n\tfolderPath: 'synapse/workspaces/gsk-synapse/warehouse/aux.tabelas_auxiliares',\n\tfileName: 'CNPJS TOP INDEPENDENTES - RI.xlsx',\n\tsheetName: 'LISTA CNPJs',\n\tfirstRowAsHeader: true) ~> DimTopIndependentes\nsource(output(\n\t\tCICLO_TERRITORIO_CONTATO as string,\n\t\tPAINEL_CICLO as string,\n\t\tPAINEL_CICLO_ATUAL as string,\n\t\tPAINEL_ROW_ID_TERRITORIO as string,\n\t\tCICLO_TERRITORIO_DIVISAO as string,\n\t\tDOCUMENTO as string,\n\t\tBRICK as string,\n\t\tMEDICO as string,\n\t\tDOC_NAME as string,\n\t\tGRUPOPROMOCIONAL as string,\n\t\tESPECIALIDADE as string,\n\t\tTIPOCONTATO as string,\n\t\tCOMPLEMENTO as string,\n\t\tCEP as string,\n\t\tLOGRADOURO as string,\n\t\tBAIRRO as string,\n\t\tCIDADE as string,\n\t\tUF as string,\n\t\tEMAIL_1_1 as string,\n\t\tEMAIL_MASS as string,\n\t\tTELEFONEMEDICO as string,\n\t\tCELULARMEDICO as string,\n\t\tULTALTCONTATO as string,\n\t\tUFDOCUMENTO as string,\n\t\tNUMERODOCUMENTO as string,\n\t\tPAINEL_ROW_ID_CONTATO as string,\n\t\tPAINEL_ROW_ID_GRUPOPROMOCIONAL as string,\n\t\tPAINEL_ROW_ID_DIVISAO as string,\n\t\tPAINEL_ROW_ID_FUNCIONARIO as string,\n\t\tPAINEL_DIVISAO as string,\n\t\tPERSON_UID as string,\n\t\tORIGEM_DADOS as string,\n\t\tDATA_CARGA as string,\n\t\tPAINEL_STATUS as string,\n\t\tTIPO as string,\n\t\tBRICK_NOME as string,\n\t\tSITUACAO as string,\n\t\tFLG_OFICIAL_GOVERNO as string,\n\t\tESPECIALIDADE_02 as string,\n\t\tESPECIALIDADE_03 as string,\n\t\tROW_ID_ENDERECO as string,\n\t\tCPF as string,\n\t\tORIGEM_END as string,\n\t\tNETWORKID as string,\n\t\tDOCUMENTO_VEEVA as string,\n\t\tFLG_MEDICO_AUDIT as string,\n\t\tESPEC_CYCLE_PLAN as string,\n\t\tSTATUS_MEDICO as string,\n\t\tEMAIL_1_1_CONSENT as string,\n\t\tEMAIL_MASS_CONSENT as string,\n\t\tCOMENTARIO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao/dim_painel_medico.parquet']) ~> DimPainelMedico\nsource(output(\n\t\tVISITA as string,\n\t\tCICLO_TERRITORIO_CONTATO as string,\n\t\tCICLO_TERRITORIO_DIVISAO as string,\n\t\tDATA as string,\n\t\tDATA_VISITA as string,\n\t\tCICLO_TERRITORIO as string,\n\t\tROW_ID_TERRITORIO as string,\n\t\tVISITA_ID as string,\n\t\tCICLO as string,\n\t\tVR_TIPO as string,\n\t\tQTD_VISITA_REALIZADA as string,\n\t\tORIGEM as string,\n\t\tMUDID as string,\n\t\tID_PROPRIETARIO as string,\n\t\tPOSICAO_PROPRIETARIO as string,\n\t\tTODO_CD as string,\n\t\tROW_ID_CONTATO as string,\n\t\tTIPO_VISITA as string,\n\t\tGP as string,\n\t\tFLAG_CLM as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.kpi_visitacao/fato_visitas_realizadas.parquet']) ~> FatoVisitasRealizadas\nDimTopIndependentes derive(TOP_IND_FLAG = 'S') ~> CriandoColunaTopIndFlag\nCriandoColunaTopIndFlag select(mapColumn(\n\t\tDOCUMENTO = CNPJ,\n\t\tTOP_IND_FLAG\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChavemamentoTopIndependente\nDimPainelMedico, ChavemamentoTopIndependente join(DimPainelMedico@DOCUMENTO == ChavemamentoTopIndependente@DOCUMENTO,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LeftJoinPainelMedTopIndependente\nLeftJoinPainelMedTopIndependente derive(TOP_IND_FLAG = case(isNull(TOP_IND_FLAG),'N',TOP_IND_FLAG)) ~> CondicaoTopIndFlag\nCondicaoTopIndFlag select(mapColumn(\n\t\tCICLO_TERRITORIO_CONTATO,\n\t\tPAINEL_CICLO,\n\t\tPAINEL_CICLO_ATUAL,\n\t\tPAINEL_ROW_ID_TERRITORIO,\n\t\tCICLO_TERRITORIO_DIVISAO,\n\t\tDOCUMENTO = DimPainelMedico@DOCUMENTO,\n\t\tBRICK,\n\t\tMEDICO,\n\t\tDOC_NAME,\n\t\tGRUPOPROMOCIONAL,\n\t\tESPECIALIDADE,\n\t\tTIPOCONTATO,\n\t\tCOMPLEMENTO,\n\t\tCEP,\n\t\tLOGRADOURO,\n\t\tBAIRRO,\n\t\tCIDADE,\n\t\tUF,\n\t\tEMAIL_1_1,\n\t\tEMAIL_MASS,\n\t\tTELEFONEMEDICO,\n\t\tCELULARMEDICO,\n\t\tULTALTCONTATO,\n\t\tUFDOCUMENTO,\n\t\tNUMERODOCUMENTO,\n\t\tPAINEL_ROW_ID_CONTATO,\n\t\tPAINEL_ROW_ID_GRUPOPROMOCIONAL,\n\t\tPAINEL_ROW_ID_DIVISAO,\n\t\tPAINEL_ROW_ID_FUNCIONARIO,\n\t\tPAINEL_DIVISAO,\n\t\tPERSON_UID,\n\t\tORIGEM_DADOS,\n\t\tDATA_CARGA,\n\t\tPAINEL_STATUS,\n\t\tTIPO,\n\t\tBRICK_NOME,\n\t\tSITUACAO,\n\t\tFLG_OFICIAL_GOVERNO,\n\t\tESPECIALIDADE_02,\n\t\tESPECIALIDADE_03,\n\t\tROW_ID_ENDERECO,\n\t\tCPF,\n\t\tORIGEM_END,\n\t\tNETWORKID,\n\t\tDOCUMENTO_VEEVA,\n\t\tFLG_MEDICO_AUDIT,\n\t\tESPEC_CYCLE_PLAN,\n\t\tSTATUS_MEDICO,\n\t\tEMAIL_1_1_CONSENT,\n\t\tEMAIL_MASS_CONSENT,\n\t\tCOMENTARIO,\n\t\tDOCUMENTO = ChavemamentoTopIndependente@DOCUMENTO,\n\t\tTOP_IND_FLAG\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoFinal\nFatoVisitasRealizadas derive(DATA = toDate(DATA),\n\t\tDATA_VISITA = toDate(DATA_VISITA)) ~> TransformarEmData\nTransformarEmData select(mapColumn(\n\t\tVISITA,\n\t\tCICLO_TERRITORIO_CONTATO,\n\t\tCICLO_TERRITORIO_DIVISAO,\n\t\tDATA,\n\t\tDATA_VISITA,\n\t\tCICLO_TERRITORIO,\n\t\tROW_ID_TERRITORIO,\n\t\tVISITA_ID,\n\t\tCICLO,\n\t\tVR_TIPO,\n\t\tQTD_VISITA_REALIZADA,\n\t\tORIGEM,\n\t\tMUDID,\n\t\tID_PROPRIETARIO,\n\t\tPOSICAO_PROPRIETARIO,\n\t\tTODO_CD,\n\t\tROW_ID_CONTATO,\n\t\tTIPO_VISITA,\n\t\tGP,\n\t\tFLAG_CLM\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecaoFatoFinal\nSelecaoFinal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'dimensao_painel_medico_p_[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> SinkDimPainelMedico\nSelecaoFatoFinal sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'fato_visitas_realizadas[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> SinkFatoVisitasRealizadas"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/gsk-synapse-WorkspaceDefaultStorage')]",
				"[concat(variables('workspaceId'), '/datasets/Source_Dim_KPI')]",
				"[concat(variables('workspaceId'), '/datasets/Sink_KPI_Visitacao')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_ETL')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Source_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "dForcaVendas"
						},
						{
							"dataset": {
								"referenceName": "Source_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "dPainelMedico"
						},
						{
							"dataset": {
								"referenceName": "Source_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "dQuadranteMedico"
						},
						{
							"dataset": {
								"referenceName": "Source_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "dQuadranteMedicoGP"
						},
						{
							"dataset": {
								"referenceName": "Source_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "dUniversoMedico"
						},
						{
							"dataset": {
								"referenceName": "Source_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "dConsentHistory"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "ForcaVendas"
						},
						{
							"dataset": {
								"referenceName": "Sink_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "PainelMedico"
						},
						{
							"dataset": {
								"referenceName": "Sink_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "QuadranteMedico"
						},
						{
							"dataset": {
								"referenceName": "Sink_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "QuadranteMedicoGP"
						},
						{
							"dataset": {
								"referenceName": "Sink_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "UniversoMedico"
						},
						{
							"dataset": {
								"referenceName": "Sink_Universo_Medico",
								"type": "DatasetReference"
							},
							"name": "ConsentHistory"
						}
					],
					"transformations": [
						{
							"name": "SelecConsentHistory"
						},
						{
							"name": "NExisteEmailConsent"
						},
						{
							"name": "UnionUniversoMedico"
						},
						{
							"name": "Filter2anos"
						},
						{
							"name": "FilterCiclo"
						},
						{
							"name": "FilterCiclo2"
						}
					],
					"script": "source(output(\n\t\tKEY_TERRITORIO_CICLO as string,\n\t\tBU as string,\n\t\tDIVISAO as string,\n\t\tNOME_GD as string,\n\t\tNOME_GR as string,\n\t\tNOME_REPRESENTANTE as string,\n\t\tMUDID as string,\n\t\tTERRITORIO as string,\n\t\tTERRITORIO_GD as string,\n\t\tTERRITORIO_GR as string,\n\t\tEMAIL_REP as string,\n\t\tCICLO as string,\n\t\tROW_ID_TERRITORIO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico/dim_forca_vendas.parquet']) ~> dForcaVendas\nsource(output(\n\t\tKEY_TERRITORIO_CICLO as string,\n\t\tKEY_TERRITORIO_CONTATO_CICLO as string,\n\t\tKEY_CRM as string,\n\t\tGRUPOPROMOCIONAL as string,\n\t\tQTD_VISITA_PLANEJADA as string,\n\t\tQTD_VISITA_REALIZADA as string,\n\t\tDATA_CARGA as string,\n\t\tTIPO as string,\n\t\tTIPOCONTATO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico/dim_painel_medico.parquet']) ~> dPainelMedico\nsource(output(\n\t\tKEY_CRM as string,\n\t\tMERCADO_UNIV as string,\n\t\tCATEGORIA_UNIV as string,\n\t\tQUADRANTE_UNIV as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico/dim_quadrante_medico.parquet']) ~> dQuadranteMedico\nsource(output(\n\t\tKEY_CONTATO_TERRITORIO_CICLO as string,\n\t\tMERCADO_GP as string,\n\t\tCATEGORIA_GP as string,\n\t\tQUADRANTE_GP as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico/dim_quadrante_medico_gp.parquet']) ~> dQuadranteMedicoGP\nsource(output(\n\t\tKEY_CRM as string,\n\t\tCICLO as string,\n\t\tKEY_CRM_EMAIL as string,\n\t\tUF as string,\n\t\tCRM as string,\n\t\tCRM2 as string,\n\t\tEMAIL_PRINCIPAL as string,\n\t\tEMAIL_SECUNDARIO as string,\n\t\tNOME as string,\n\t\tESPECIALIDADE as string,\n\t\tESPECIALIDADE2 as string,\n\t\tESPECIALIDADE3 as string,\n\t\tVISITADO as string,\n\t\tNETWORK_ID as string,\n\t\tVEEVA_ID as string,\n\t\tRX_GIGYA_ID as string,\n\t\tTELEFONE as string,\n\t\tCELULAR as string,\n\t\tEMAIL as string,\n\t\tEMAIL_ORIGEM as string,\n\t\tONE_MASS as string,\n\t\tONE_ONE as string,\n\t\tVISITADO_GSK as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico/dim_universo_medico.parquet']) ~> dUniversoMedico\nsource(output(\n\t\tKEY_CRM_EMAIL as string,\n\t\tCRM_PAINEL as string,\n\t\tDATA_VEEVA as string,\n\t\tEMAIL_VEEVA as string,\n\t\tCONSENT_VEEVA_1_1 as string,\n\t\tCONSENT_VEEVA_1_MASS as string,\n\t\tROW_ID_CONTATO_VEEVA as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['synapse/workspaces/gsk-synapse/warehouse/dash.universo_medico/dim_consent_history.parquet']) ~> dConsentHistory\nFilterCiclo select(mapColumn(\n\t\tEMAIL_VEEVA = EMAIL_PRINCIPAL,\n\t\tDATA_VEEVA = CICLO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecConsentHistory\nSelecConsentHistory, dConsentHistory exists(SelecConsentHistory@EMAIL_VEEVA == dConsentHistory@EMAIL_VEEVA,\n\tnegate:true,\n\tbroadcast: 'auto')~> NExisteEmailConsent\ndConsentHistory, NExisteEmailConsent union(byName: true)~> UnionUniversoMedico\nUnionUniversoMedico filter(toDate(concat(left(DATA_VEEVA,4),'-',right(DATA_VEEVA,2),'-01')) >= subMonths(currentDate(),24)) ~> Filter2anos\ndUniversoMedico filter(length(CICLO) == 6) ~> FilterCiclo\ndUniversoMedico filter(length(CICLO) == 6) ~> FilterCiclo2\ndForcaVendas sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_forca_vendas.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ForcaVendas\ndPainelMedico sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_painel_medico.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PainelMedico\ndQuadranteMedico sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'dimensao_quadrante_medico_p_[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> QuadranteMedico\ndQuadranteMedicoGP sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'dimensao_quadrante_medico_gp_[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> QuadranteMedicoGP\nFilterCiclo2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'dimensao_universo_medico_[n].parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UniversoMedico\nFilter2anos sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dimensao_consent_history.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ConsentHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Source_Universo_Medico')]",
				"[concat(variables('workspaceId'), '/datasets/Sink_Universo_Medico')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GSO_CREATE_VIEW_DIM_GCO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GSO"
				},
				"content": {
					"query": "-- ALTER VIEW gso.dim_gco\n-- AS\nSELECT\n[REGION]\n,[CLUSTER]\n,[COUNTRY]\n,[SLSL]\n,[FLSL]\n,[CITY]\n,[BUSINESS_UNIT]\n,[FIELD_VISIT_COACHING_DATE]\n,[BRAND]\n,[TOTAL_NUMBER_CALLS_OBSERVED]\n,[NUMBER_OF_GSO]\n,[FLSL_MOTIVATIONAL_INSPIRATIONAL_ENVIRONMENT]\n,[FLSL_SALES_REP_AGREE_GOAL]\n,[COACHING_GOAL_SEQUENTIAL_PREVIOUS_ACTION]\n,[FLSL_SALES_REP_MENTION_CURRENT_PERFORMANCE]\n,[POTENTIAL_IMPACT_CURRENT_PERFORMANCE]\n,[FLSL_SALES_REP_BLOCK_CURRENT_PERFORMANCE]\n,[SALES_REP_SOLUTIONS_UNBLOCK_BARRIERS]\n,[FLSL_SALES_REP_SOLUTIONS_UNBLOCK_BARRIERS_IMPACT]\n,[FLSL_OFFERS_ALTERNATIVE_SOLUTIONS]\n,[EXPLORE_SALES_REP_NEXT_STEPS]\n,[MANAGER_ASKS_SALES_REP_SUPPORT_NEEDS]\n,[BUILDS_PLAN_SUCCESS_MEASURES]\n,[IMPORTANT_ACTION_IMPROVE_CAPABILITY_MAPS_TOP_SKILL]\n,[DETERMINES_COACHING_STYLE_FLEXES_COACHING_STYLE]\n,[QUESTIONS_ACTIVE_LISTENING_FEEDBACK_SBI]\n,[ACTION_PLANS]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/GSO/dimensao_gco.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n        [REGION]                                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CLUSTER]\t\t\t\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COUNTRY]\t\t\t\t\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[SLSL]\t\t\t\t\t\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLSL]\t\t\t\t\t\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CITY]\t\t\t\t\t\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BUSINESS_UNIT]\t\t\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FIELD_VISIT_COACHING_DATE]\t\t\t\t  DATE\n,[BRAND]\t\t\t\t\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOTAL_NUMBER_CALLS_OBSERVED]\t\t\t\t  SMALLINT\n,[NUMBER_OF_GSO]                              INT\n,[FLSL_MOTIVATIONAL_INSPIRATIONAL_ENVIRONMENT]          SMALLINT\n,[FLSL_SALES_REP_AGREE_GOAL]                                SMALLINT\n,[COACHING_GOAL_SEQUENTIAL_PREVIOUS_ACTION]    SMALLINT\n,[FLSL_SALES_REP_MENTION_CURRENT_PERFORMANCE]    SMALLINT\n,[POTENTIAL_IMPACT_CURRENT_PERFORMANCE]    SMALLINT\n,[FLSL_SALES_REP_BLOCK_CURRENT_PERFORMANCE]    SMALLINT\n,[SALES_REP_SOLUTIONS_UNBLOCK_BARRIERS]    SMALLINT\n,[FLSL_SALES_REP_SOLUTIONS_UNBLOCK_BARRIERS_IMPACT]    SMALLINT\n,[FLSL_OFFERS_ALTERNATIVE_SOLUTIONS]    SMALLINT\n,[EXPLORE_SALES_REP_NEXT_STEPS]    SMALLINT\n,[MANAGER_ASKS_SALES_REP_SUPPORT_NEEDS]    SMALLINT\n,[BUILDS_PLAN_SUCCESS_MEASURES]    SMALLINT\n,[IMPORTANT_ACTION_IMPROVE_CAPABILITY_MAPS_TOP_SKILL]    SMALLINT\n,[DETERMINES_COACHING_STYLE_FLEXES_COACHING_STYLE]   SMALLINT\n,[QUESTIONS_ACTIVE_LISTENING_FEEDBACK_SBI]    VARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8\n,[ACTION_PLANS] VARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8 ) as ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GSO_CREATE_VIEW_DIM_SALES_FORCE')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GSO"
				},
				"content": {
					"query": "-- ALTER VIEW gso.dim_sales_force\n-- AS\n\nSELECT\n    *\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/GSO/dimensao_sales_force.parquet',\n        FORMAT='PARQUET'\n    ) WITH( USER_ID                                   VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            SF_SOURCE_USER_AID                        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            [USER_NAME]                               VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            FIRST_NAME                                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            [NAME]                                    VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            LAST_NAME                                 VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            COUNTRY                                   CHAR(2) COLLATE Latin1_General_100_BIN2_UTF8,\n            STATE_PROVINCE                            VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            CITY                                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            POSTAL_CODE                               VARCHAR(15) COLLATE Latin1_General_100_BIN2_UTF8,\n            ACTIVE_IND                                VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            EMAIL                                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            EMPLOYEE_NUMBER_AID                       VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8 ,\n            USER_IDENTIFIER_AID                       VARCHAR(15) COLLATE Latin1_General_100_BIN2_UTF8,\n            CORE_GSK_FUNCTIONAL_PROFILE               VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            PROFILE_NAME                              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            CICLO                                     VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8 ,\n            SALES_FORCE_KEY                           VARCHAR(15) COLLATE Latin1_General_100_BIN2_UTF8,\n            ROW_ID_TERRITORIO                         VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            ROW_ID_GD                                 VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            NOME_GD                                   VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            NOME_GR                                   VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            TERRITORIO_GD                             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            TERRITORIO_GR                             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            BU                                        VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            DIVISAO                                   VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            TERRITORIO                                VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            NOME_REP                                  VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            AREA                                      VARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8,\n            UF                                        CHAR(2) COLLATE Latin1_General_100_BIN2_UTF8,\n            REGION                                    VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            [STATE]                                   VARCHAR(250) COLLATE Latin1_General_100_BIN2_UTF8,\n            FLAG_TARGET                               VARCHAR(4) COLLATE Latin1_General_100_BIN2_UTF8,\n            CICLO_TERRITORIO_DIVISAO                  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            CICLO_TERRITORIO\t\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8,\n            MATRICULA_GD\t\t\t\t\t\t\t  VARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8,\n            MATRICULA_GR\t\t\t\t\t\t\t  VARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8,\n            TERR\t\t\t\t\t\t\t\t\t  VARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8,\n            NOME_GN\t\t\t\t\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8,\n            [NOME_GRI/KAM]\t\t\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8,\n            [NOME_GRI/KAM_COACH]\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8,\n            ROW_ID_FUNCIONARIO\t\t\t\t\t\t  VARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8,\n            [STATUS]\t\t\t\t\t\t\t\t  VARCHAR(4) COLLATE Latin1_General_100_BIN2_UTF8,\n            TERRITORIO_CICLO\t\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8,\n            TERRITORIO_GN\t\t\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8,\n            [TERRITORIO_GRI/KAM]\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8,\n            TERRITORIO_NOME_REP\t\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n            \n        ) AS ROW",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GSO_CREATE_VIEW_DIM_SURVEY_QUESTION')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GSO"
				},
				"content": {
					"query": "-- ALTER VIEW gso.dim_survey_question\n-- AS\n\nSELECT\n     [QUESTION_ID] \n    ,CAST(LEFT(QUESTION_CREATED_DATE,19) AS DATETIME) as [QUESTION_CREATED_DATE]\n    ,[QUESTION_NAME] \n    ,CAST(LEFT([QUESTION_LAST_MODIFIED_TS] ,19) AS DATETIME) as [QUESTION_LAST_MODIFIED_TS]\n    ,[QUESTION_TEXT]  \n    ,[QUESTION_ORDER] \n    ,[QUESTION_TYPE]\n    ,[TIPO_QUESTAO] \nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/GSO/dimensao_survey_question.parquet',\n        FORMAT='PARQUET') \n        WITH( [QUESTION_ID] VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,QUESTION_CREATED_DATE VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[QUESTION_NAME] VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[QUESTION_LAST_MODIFIED_TS] VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[QUESTION_TEXT]  VARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[QUESTION_ORDER] VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[QUESTION_TYPE] VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[TIPO_QUESTAO] VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8 ) as ROW\n           \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GSO_CREATE_VIEW_DIM_VISITS')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GSO"
				},
				"content": {
					"query": "-- ALTER VIEW gso.dim_visits\n-- AS\n\nSELECT\n     [SURVEY_KEY]\n    ,CAST(left([VISIT_DATE],10) as date) as [VISIT_DATE]\n    ,[VISIT_PRODUCT]\n    ,CAST([TOTAL_VISITS] as int) as [TOTAL_VISITS]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/GSO/dimensao_visits.parquet',\n        FORMAT='PARQUET'\n    ) WITH( \n             [SURVEY_KEY]       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8 \n            ,[VISIT_DATE]       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[VISIT_PRODUCT]    VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[TOTAL_VISITS]     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8 ) as ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/GSO_CREATE_VIEW_FATO_GSO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "GSO"
				},
				"content": {
					"query": "-- ALTER VIEW gso.fato_gso\n-- AS\n\nSELECT\n    [CALL_SUMMARY_ID]\n    ,[PARENT_CALL_AID]\n    ,[LOCAL_CALL_DATE_ID]\n    ,[CALL_DATE_ID]\n    ,[TERRITORY_ID]\n    ,[CYCLE]\n    ,[SALES_FORCE_KEY]\n    ,CASE\n    WHEN LEN([DATE]) = 6 then CAST(CONCAT(left([DATE],4),'-',right([DATE],2),'-01') as DATE)\n    ELSE CAST(left([DATE],10) AS DATE) END AS 'DATE'\n    ,[LOCAL_CALL_TIME_ID]\n    ,[ACCOUNT_ID]\n    ,[CALL_NAME]\n    ,[RX_CALL_TYPE]\n    ,[CALL_STATUS]\n    ,[ATTENDEE_TYPE]\n    ,[CLM_IND]\n    ,[SAMPLE_CALL_IND]\n    ,[CALL_TYPE]\n    ,[DETAILED_PRODUCTS]\n    ,[DURATION]\n    ,[CREATED_DATE_ID]\n    ,[CREATED_DATE_TIME_ID]\n    ,[LAST_MODIFIED_DATE_ID]\n    ,[LAST_MODIFIED_DATE_TIME_ID]\n    ,[PRE_CALL_NOTES]\n    ,[NEXT_CALL_NOTES]\n    ,[REVIEW_STATUS]\n    ,[ACCOUNT_NAME]\n    ,[RX_LEGAL_ID]\n    ,[KEY_MESSAGE_NAME]\n    ,[QUESTION_ID]\n    ,[PRODUCT]\n    ,[CALL_DATE]\n    ,[ORIGEM]\n    ,[SURVEY_KEY]\n    ,CAST(left([SOURCE_CREATED_TS],19) as DATETIME) AS [SOURCE_CREATED_TS]\n    ,CAST(left([RESPONSE_LAST_MODIFIED_TS],19) as DATETIME) AS [RESPONSE_LAST_MODIFIED_TS]\n    ,[SOURCE_USER_AID]\n    ,[QUESTION_RESPONSE_ID]\n    ,[RESPONSE_NAME]\n    ,CAST([RESPONSE_NUMBER] as INT) as [RESPONSE_NUMBER]\n    ,[RESPONSE]\n    ,[RESPONSE_QUESTION_ORDER]\n    ,CAST(left([TARGET_LAST_MODIFIED_TS],19) as DATETIME) AS [TARGET_LAST_MODIFIED_TS]\n    ,CAST(left([MODIFIED_DATE],10) as DATE) AS [MODIFIED_DATE]\n    ,[START_DATE_ID]\n    ,[END_DATE_ID]\n    ,[REVIEW_DATE_ID]\n    ,[MANAGER_TERRITORY_ID]\n    ,[EMPLOYEE_TERRITORY_ID]\n    ,CAST([DATE_DIFF] as INT) as [DATE_DIFF]\n    ,[FLAG_PREMIO]\n    ,[RESPONSES_KEY]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/GSO/fato_gso.parquet',\n        FORMAT='PARQUET'\n    ) WITH(\n\t[CALL_SUMMARY_ID]                    VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[PARENT_CALL_AID]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[LOCAL_CALL_DATE_ID]                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CALL_DATE_ID]                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[TERRITORY_ID]                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CYCLE]                             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[SALES_FORCE_KEY]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[DATE]                              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[LOCAL_CALL_TIME_ID]                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[ACCOUNT_ID]                        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CALL_NAME]                         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RX_CALL_TYPE]                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CALL_STATUS]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[ATTENDEE_TYPE]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CLM_IND]                           VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[SAMPLE_CALL_IND]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CALL_TYPE]                         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[DETAILED_PRODUCTS]                 VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[DURATION]                          VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CREATED_DATE_ID]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CREATED_DATE_TIME_ID]              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[LAST_MODIFIED_DATE_ID]             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[LAST_MODIFIED_DATE_TIME_ID]        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[PRE_CALL_NOTES]                    VARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[NEXT_CALL_NOTES]                   VARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[REVIEW_STATUS]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[ACCOUNT_NAME]                      VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RX_LEGAL_ID]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[KEY_MESSAGE_NAME]                  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[QUESTION_ID]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[PRODUCT]                           VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[CALL_DATE]                         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[ORIGEM]                            VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[SURVEY_KEY]                        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[SOURCE_CREATED_TS]                 VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RESPONSE_LAST_MODIFIED_TS]         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[SOURCE_USER_AID]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[QUESTION_RESPONSE_ID]              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RESPONSE_NAME]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RESPONSE_NUMBER]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RESPONSE]                          VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RESPONSE_QUESTION_ORDER]           VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[TARGET_LAST_MODIFIED_TS]           VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[MODIFIED_DATE]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[START_DATE_ID]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[END_DATE_ID]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[REVIEW_DATE_ID]                    VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[MANAGER_TERRITORY_ID]              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[EMPLOYEE_TERRITORY_ID]             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[DATE_DIFF]                         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[FLAG_PREMIO]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ,[RESPONSES_KEY]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8 ) AS ROW\n\n--  SELECT column_name,\n--        data_type,\n--        character_maximum_length,\n--        table_name\n-- FROM information_schema.columns\n-- WHERE        table_name like '%fato%'\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_AUDIT_END')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "ALTER VIEW kpiemail.dim_audit_end\nAS\nSELECT\n    [CRM_UNIV]\n,[MEDICO_UNIV]\n,[ESPECIALIDADE_UNIV]\n,[LOGRADOURO_UNIV]\n,[BAIRRO_UNIV]\n,[CIDADE_UNIV]\n,[CEP_UNIV]\n,[ORIGEM_UNIV]\n,[UF_UNIV]\n,[BRICK_UNIV]\n,[TELEFONE_UNIV]\n,[KEY_CRM_UNIV]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_audit_end.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n [CRM_UNIV]      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MEDICO_UNIV]\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_UNIV]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[LOGRADOURO_UNIV]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[BAIRRO_UNIV]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[CIDADE_UNIV]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[CEP_UNIV]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ORIGEM_UNIV]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[UF_UNIV]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BRICK_UNIV]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TELEFONE_UNIV]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CRM_UNIV]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n\n-- SELECT collation_name\n-- FROM sys.databases\n-- WHERE database_id = DB_ID()\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_COACHING')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.dim_coaching\n-- AS\nSELECT\n[CICLO]\n,[TERRITORIO_GD]\n,[TOTAL_COACHING]\n,[TOTAL_ABATER]\n,[DIAS_UTEIS_COACHING]\n,[KEY_CICLO_TERR_GD]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_coaching.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[CICLO]                  VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GD]\t\tVARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOTAL_COACHING]\t\tVARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOTAL_ABATER]\t\t\tVARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIAS_UTEIS_COACHING]\tVARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CICLO_TERR_GD]\tVARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_FORCA_VENDAS')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "--  ALTER VIEW kpiemail.dim_forca_vendas\n--  AS\nSELECT\n    [BU]\n,[DIVISAO]\n,[NOME_GD]\n,[NOME_GR]\n,[NOME_REPRESENTANTE]\n,[MUDID]\n,[ROW_ID_TERRITORIO]\n,[TERRITORIO]\n,[TERRITORIO_GD]\n,[TERRITORIO_GR]\n,[CICLO_FV]\n,[ROW_ID_FUNCIONARIO]\n,[FLAG_PROJETO]\n,[FLAG_TARGET]\n,[KEY_TERR_CICLO]\n,[KEY_CICLO_TERR_GD]\n,[KEY_DIVISAO_CICLO]\n,[KEY_MUDID_TERR]\n,[KEY_TERR]\n,[CIDADE_ZONA]\n,[UF_ZONA]\n,[CHAVE]\n,[ZONA_COMPLETA]\n,[CHAVE_ZONA]\n,[ZONA]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_forca_vendas.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n       [BU]\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIVISAO]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GD]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GR]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_REPRESENTANTE]        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MUDID]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_TERRITORIO]         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO]                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GD]             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GR]             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_FV]                  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_FUNCIONARIO]        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLAG_PROJETO]              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLAG_TARGET]               VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_TERR_CICLO]            VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CICLO_TERR_GD]         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_DIVISAO_CICLO]         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_MUDID_TERR]            VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_TERR]                  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CIDADE_ZONA]               VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[UF_ZONA]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CHAVE]                     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ZONA_COMPLETA]             VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[CHAVE_ZONA]                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ZONA]                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_HISTORICO_ZONAS')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.dim_historico_zonas\n-- as\nSELECT\n   [CHAVE_ZONA]\n,[DATA_ZONA]\n,[STATUS_ZONA]\n,[NUM_DATA_ZONA]\n,[MES_ZONA] \nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_historico_zonas.parquet',\n        FORMAT='PARQUET'\n    ) WITH ([CHAVE_ZONA]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[DATA_ZONA]            VARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[STATUS_ZONA]          VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[NUM_DATA_ZONA]        VARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n            ,[MES_ZONA]             VARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_KPI_TERRITORIO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.dim_kpi_territorio\n-- AS\nSELECT\n    [CICLO]\n,[ROW_ID_TERRITORIO]\n,[TFT]\n,[DIAS_UTEIS]\n,[VISITAS_ABATER]\n,[OBJETIVO_VISITA_DIA]\n,[DIAS_VISITACAO]\n,[VR_CLM]\n,[KEY_TERR_CICLO]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_kpi_territorio.parquet',\n        FORMAT='PARQUET'\n    ) with (\n        [CICLO]                 VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_TERRITORIO]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIAS_UTEIS]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VISITAS_ABATER]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[OBJETIVO_VISITA_DIA]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIAS_VISITACAO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VR_CLM]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_TERR_CICLO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) as row",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_MSL_DIVISION')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.dim_msl_division\n-- AS\nSELECT\n[KEY_DIVISAO_CICLO]\n,[FUNC_TOTAL]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_msl_division.parquet',\n        FORMAT='PARQUET'\n    ) with (\n         [KEY_DIVISAO_CICLO] VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FUNC_TOTAL] VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8\n    ) as ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_PAINEL_MEDICO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "ALTER VIEW kpiemail.dim_painel_medico\n as\nSELECT\n     [CRM_CICLO]\n,[MES]\n,[CICLO]\n,[CRM]\n,[MEDICO]\n,[TIPO]\n,[TIPOCONTATO]\n,[GRUPOPROMOCIONAL]\n,[ESPECIALIDADE]\n,[LOGRADOURO]\n,[COMPLEMENTO]\n,[BAIRRO]\n,[CIDADE]\n,[UF]\n,[CEP]\n,[BRICK]\n,[TELEFONEMEDICO]\n,[CELULARMEDICO]\n,[EMAIL_1_1]\n,[ROW_ID_FUNCIONARIO]\n,[ROW_ID_TERRITORIO]\n,[ROW_ID_CONTATO]\n,[STATUS]\n,[QTD_VISITA_PLANEJADA_PAINEL]\n,[QTD_VISITA_REALIZADA_PAINEL]\n,[ESPECIALIDADE_02]\n,[ESPECIALIDADE_03]\n,[VP_PROX]\n,[STATUS_MEDICO]\n,[EMAIL_1_1_CONSENT]\n,[NETWORK_ID]\n,[RX_GIGYA_ID]\n,[VEEVA_ID]\n,[ROW_ID_CONTATO_EXT]\n,[EMAIL_MASS]\n,[EMAIL_MASS_CONSENT]\n,[CYCLE_PLAN]\n,[MERCADO]\n,[PRODUTO_PAINEL]\n,[KEY_TERR_CONT_CICLO]\n,[KEY_TERR_CICLO]\n,[KEY_CICLO_CRM]\n,[DATE_KEY]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_painel_medico_*.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n        [CRM_CICLO]             \t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MES]                              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO]                            VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CRM]                              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MEDICO]                           VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO]                             VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPOCONTATO]                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[GRUPOPROMOCIONAL]                 VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE]                    VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[LOGRADOURO]                       VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[COMPLEMENTO]                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BAIRRO]                           VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[CIDADE]                           VARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[UF]                               VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CEP]                              VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BRICK]                            VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TELEFONEMEDICO]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CELULARMEDICO]                    VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_1_1]                        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_FUNCIONARIO]               VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_TERRITORIO]                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_CONTATO]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS]                           VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QTD_VISITA_PLANEJADA_PAINEL]      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QTD_VISITA_REALIZADA_PAINEL]      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_02]                 VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_03]                 VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VP_PROX]                          VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS_MEDICO]                    VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_1_1_CONSENT]                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NETWORK_ID]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[RX_GIGYA_ID]                      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VEEVA_ID]                         VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_CONTATO_EXT]               VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_MASS]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_MASS_CONSENT]               VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CYCLE_PLAN]                       VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MERCADO]                          VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PRODUTO_PAINEL]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_TERR_CONT_CICLO]              VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_TERR_CICLO]                   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CICLO_CRM]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATE_KEY]  DATE ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_QUADRANTE_MEDICO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.dim_quadrante_medico\n-- as\nSELECT\n[CICLO_QUAD]\n,[CRM_QUAD]\n,[MERCADO_QUAD]\n,[CATEGORIA_QUAD]\n,[MKT_SHARE_QUAD]\n,[QUADRANTE_QUAD]\n,[JORNADA_QUAD]\n,[KEY_CRM_UNIV]\n,[KEY_CICLO_CRM]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_quadrante_medico_p_*.parquet',\n        FORMAT='PARQUET'\n    ) with (\n        [CICLO_QUAD]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CRM_QUAD]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MERCADO_QUAD]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CATEGORIA_QUAD]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MKT_SHARE_QUAD]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QUADRANTE_QUAD]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[JORNADA_QUAD]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CRM_UNIV]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CICLO_CRM]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) as ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_QUADRANTE_MEDICO_GP')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.dim_quadrante_medico_gp\n-- as\nSELECT\n[CRM_GP]\n,[MERCADO_GP]\n,[CATEGORIA_GP]\n,[JORNADA_GP]\n,[QUADRANTE_GP]\n,[ROW_ID_TERRITORIO_GP]\n,[ROW_ID_CONTATO_GP]\n,[CICLO]\n,[KEY_TERR_CONT_CICLO]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_quadrante_medico_gp_*.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n        [CRM_GP]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MERCADO_GP]\t\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[CATEGORIA_GP]\t\t\t\tVARCHAR(4) COLLATE Latin1_General_100_BIN2_UTF8\n,[JORNADA_GP]\t\t\t\tVARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n,[QUADRANTE_GP]\t\t\t\tVARCHAR(4) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_TERRITORIO_GP]\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_CONTATO_GP]\t\tVARCHAR(25) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO]\t\t\t\t\tVARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_TERR_CONT_CICLO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_DIM_TARGET_SRO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.dim_target_sro\n-- AS\nSELECT\n[CICLO]\n,[DIVISAO]\n,[TARGET_SRO_CRM]\n,[TARGET_SRO_VISITA]\n,[TARGET_SRO_MEDIA_DIA]\n,[TARGET_SRO_COACHING]\n,[TARGET_SRO_COB]\n,[KEY_DIVISAO_CICLO]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_target_sro.parquet',\n        FORMAT='PARQUET'\n    ) WITH(\n[CICLO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIVISAO]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TARGET_SRO_CRM]\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TARGET_SRO_VISITA]\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TARGET_SRO_MEDIA_DIA]\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TARGET_SRO_COACHING]\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TARGET_SRO_COB]\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_DIVISAO_CICLO]\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_EMAIL_CREATE_VIEW_FATO_INTERACOES')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO & EMAIL"
				},
				"content": {
					"query": "-- ALTER VIEW kpiemail.fato_interacoes\n-- as\nSELECT\n    REPLACE([KEY_TERR_CONT_CICLO],'-','') as 'KEY_TERR_CONT_CICLO'\n,[ID_VISITA]\n,[TIPO_VISITA]\n,[TIPO_VISITA_PTBR]\n,[TIPO_VISITA_ORDER]\n,[CLM_IND]\n,[RECORD_TYPE_ID]\n,[RECORD_TYPE_NAME]\n,[DATA]\n,[CICLO]\n,[TARGET_PER_ID]\n,[ROW_ID_TERRITORIO]\n,[SEMANA]\n,[FLAG_VISITA]\n,[TIPO_INTERACAO]\n,[ROW_ID_CONTATO]\n,[VP]\n,[VR]\n,[VRE]\n,[VRT]\n,[PLANEJUN]\n,[REALUN]\n,[EFFECTIVE_CALLS]\n,[UNDER_CALLS]\n,[OVER_CALLS]\n,[OFF_TARGET_CALLS]\n,[TARGET_CUST]\n,[UNDER_TARGET]\n,[ON_TARGET]\n,[OVER_TARGET]\n,[EMAIL_CONSENT_KPI]\n,[AT_DESIRED_FREQUENCY]\n,[OVER_DESIRED_FREQUENCY]\n,[ID_ENVIO_EMAIL]\n,[ID_ATIV_EMAIL]\n,[TIPO_ATIV_EMAIL]\n,[DATA_ATIV_EMAIL]\n,[PRODUTO]\n,[DOCUMENTO_EMAIL]\n,[DESC_DOCUMENTO_EMAIL]\n,[ASSUNTO_EMAIL]\n,[PRODUTO_FRANCHISE]\n,[FRANCHISE]\n,[SUB_CAT_FRANCHISE]\n,[PESO_FRANCHISE]\n,[EVENTO]\n,[ID_EVENTO]\n,[EV_CICLO]\n,[DATA_EVENTO]\n,[DATA_EVENTO_2]\n,[EV_CICLO_TERRITORIO]\n,[EV_CICLO_CONTATO]\n,[ID_PARTICIPANTE]\n,[NOME_PARTICIPANTE]\n,[EV_ROW_ID_TERRITORIO]\n,[NOME_USUARIO]\n,[EV_ROW_ID_CONTATO]\n,[DOCUMENTO]\n,[EV_ESPECIALIDADE_ENG]\n,[STATUS_CONVIDADO_GR]\n,[STATUS_CONVIDADO]\n,[STATUS_CONVIDADO_ENG]\n,[PRODUTO_PRIMARIO]\n,[PRODUTO_SECUNDARIO]\n,[TIPO_PARTICIPACAO]\n,[TIPO_PARTICIPACAO_ENG]\n,[TIPO_CONTA]\n,[TIPO_CONTA_ENG]\n,[VISITADO_SETOR]\n,[NOME_SETOR_VISITANTE]\n,[EV_ESPECIALIDADE]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/fato_interacoes_*.parquet',\n        FORMAT='PARQUET'\n    ) WITH(\n         [KEY_TERR_CONT_CICLO]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[ID_VISITA]                VARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8   \n,[TIPO_VISITA]\t\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_VISITA_PTBR]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_VISITA_ORDER]\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[CLM_IND]\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[RECORD_TYPE_ID]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[RECORD_TYPE_NAME]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA]\t\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO]\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[TARGET_PER_ID]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_TERRITORIO]\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[SEMANA]\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLAG_VISITA]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_INTERACAO]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_CONTATO]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[VP]\t\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[VR]\t\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[VRE]\t\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[VRT]\t\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[PLANEJUN]\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[REALUN]\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[EFFECTIVE_CALLS]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[UNDER_CALLS]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[OVER_CALLS]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[OFF_TARGET_CALLS]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[TARGET_CUST]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[UNDER_TARGET]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[ON_TARGET]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[OVER_TARGET]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_CONSENT_KPI]\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[AT_DESIRED_FREQUENCY]\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[OVER_DESIRED_FREQUENCY]\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[ID_ENVIO_EMAIL]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[ID_ATIV_EMAIL]\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_ATIV_EMAIL]\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_ATIV_EMAIL]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[PRODUTO]\t\t\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOCUMENTO_EMAIL]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[DESC_DOCUMENTO_EMAIL]\t\tVARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8\n,[ASSUNTO_EMAIL]\t\t\tVARCHAR(MAX) COLLATE Latin1_General_100_BIN2_UTF8\n,[PRODUTO_FRANCHISE]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FRANCHISE]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[SUB_CAT_FRANCHISE]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PESO_FRANCHISE]\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[EVENTO]\t\t\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[ID_EVENTO]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[EV_CICLO]\t\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_EVENTO]\t\t\t\tVARCHAR(30) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_EVENTO_2]\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[EV_CICLO_TERRITORIO]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[EV_CICLO_CONTATO]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[ID_PARTICIPANTE]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_PARTICIPANTE]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[EV_ROW_ID_TERRITORIO]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_USUARIO]\t\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[EV_ROW_ID_CONTATO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOCUMENTO]\t\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[EV_ESPECIALIDADE_ENG]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS_CONVIDADO_GR]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS_CONVIDADO]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS_CONVIDADO_ENG]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[PRODUTO_PRIMARIO]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[PRODUTO_SECUNDARIO]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_PARTICIPACAO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_PARTICIPACAO_ENG]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_CONTA]\t\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_CONTA_ENG]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[VISITADO_SETOR]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_SETOR_VISITANTE]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[EV_ESPECIALIDADE]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    )AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_PAINEL_MEDICO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "--ALTER VIEW kpivis.dim_painel_medico\n--as\nSELECT\n[CICLO_TERRITORIO_CONTATO]\n,[PAINEL_CICLO]\n,[PAINEL_CICLO_ATUAL]\n,[PAINEL_ROW_ID_TERRITORIO]\n,CONCAT([PAINEL_CICLO],'-',[PAINEL_ROW_ID_TERRITORIO]) as 'SALES_FORCE_KEY'\n,CONCAT([PAINEL_ROW_ID_TERRITORIO],[PAINEL_CICLO]) as 'KEY_TERR_CICLO'\n,[CICLO_TERRITORIO_DIVISAO]\n,[DOCUMENTO]\n,[BRICK]\n,[MEDICO]\n,[DOC_NAME]\n,[GRUPOPROMOCIONAL]\n,[ESPECIALIDADE]\n,[TIPOCONTATO]\n,[COMPLEMENTO]\n,[CEP]\n,[LOGRADOURO]\n,[BAIRRO]\n,[CIDADE]\n,[UF]\n,[EMAIL_1_1]\n,[EMAIL_MASS]\n,[TELEFONEMEDICO]\n,[CELULARMEDICO]\n,[ULTALTCONTATO]\n,[UFDOCUMENTO]\n,[NUMERODOCUMENTO]\n,[PAINEL_ROW_ID_CONTATO]\n,[PAINEL_ROW_ID_GRUPOPROMOCIONAL]\n,[PAINEL_ROW_ID_DIVISAO]\n,[PAINEL_ROW_ID_FUNCIONARIO]\n,[PAINEL_DIVISAO]\n,[PERSON_UID]\n,[ORIGEM_DADOS]\n,[DATA_CARGA]\n,[PAINEL_STATUS]\n,[TIPO]\n,[BRICK_NOME]\n,[SITUACAO]\n,[FLG_OFICIAL_GOVERNO]\n,[ESPECIALIDADE_02]\n,[ESPECIALIDADE_03]\n,[ROW_ID_ENDERECO]\n,[CPF]\n,[ORIGEM_END]\n,[NETWORKID]\n,[DOCUMENTO_VEEVA]\n,[FLG_MEDICO_AUDIT]\n,[ESPEC_CYCLE_PLAN]\n,[STATUS_MEDICO]\n,[EMAIL_1_1_CONSENT]\n,[EMAIL_MASS_CONSENT]\n,[COMENTARIO]\n,[TOP_IND_FLAG]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_painel_medico_p_*.parquet',\n        FORMAT='PARQUET'\n    ) WITH(\n        [CICLO_TERRITORIO_CONTATO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_CICLO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_CICLO_ATUAL]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_TERRITORIO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO_DIVISAO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOCUMENTO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BRICK]\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MEDICO]\t\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOC_NAME]\t\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[GRUPOPROMOCIONAL]\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPOCONTATO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COMPLEMENTO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CEP]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[LOGRADOURO]\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[BAIRRO]\t\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[CIDADE]\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[UF]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_1_1]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_MASS]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TELEFONEMEDICO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CELULARMEDICO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ULTALTCONTATO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[UFDOCUMENTO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NUMERODOCUMENTO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_CONTATO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_GRUPOPROMOCIONAL]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_DIVISAO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_FUNCIONARIO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_DIVISAO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PERSON_UID]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ORIGEM_DADOS]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_CARGA]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_STATUS]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BRICK_NOME]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[SITUACAO]\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLG_OFICIAL_GOVERNO]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_02]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_03]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_ENDERECO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CPF]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ORIGEM_END]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NETWORKID]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOCUMENTO_VEEVA]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLG_MEDICO_AUDIT]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPEC_CYCLE_PLAN]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS_MEDICO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_1_1_CONSENT]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_MASS_CONSENT]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COMENTARIO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOP_IND_FLAG]                             VARCHAR(10) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_PAINEL_MEDICO_COMERCIAL')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "ALTER VIEW kpivis.dim_painel_medico_comercial\nAS\nSELECT\n[CICLO_TERRITORIO_CONTATO]\n,[PAINEL_CICLO]\n,[PAINEL_CICLO_ATUAL]\n,[PAINEL_ROW_ID_TERRITORIO]\n,CONCAT([PAINEL_ROW_ID_TERRITORIO],[PAINEL_CICLO]) as 'KEY_TERR_CICLO'\n,[CICLO_TERRITORIO_DIVISAO]\n,[DOCUMENTO]\n,[BRICK]\n,[MEDICO]\n,[DOC_NAME]\n,[GRUPOPROMOCIONAL]\n,[ESPECIALIDADE]\n,[TIPOCONTATO]\n,[COMPLEMENTO]\n,[CEP]\n,[LOGRADOURO]\n,[BAIRRO]\n,[CIDADE]\n,[UF]\n,[EMAIL_1_1]\n,[EMAIL_MASS]\n,[TELEFONEMEDICO]\n,[CELULARMEDICO]\n,[ULTALTCONTATO]\n,[UFDOCUMENTO]\n,[NUMERODOCUMENTO]\n,[PAINEL_ROW_ID_CONTATO]\n,[PAINEL_ROW_ID_GRUPOPROMOCIONAL]\n,[PAINEL_ROW_ID_DIVISAO]\n,[PAINEL_ROW_ID_FUNCIONARIO]\n,[PAINEL_DIVISAO]\n,[PERSON_UID]\n,[ORIGEM_DADOS]\n,[DATA_CARGA]\n,[PAINEL_STATUS]\n,[TIPO]\n,[BRICK_NOME]\n,[SITUACAO]\n,[FLG_OFICIAL_GOVERNO]\n,[ESPECIALIDADE_02]\n,[ESPECIALIDADE_03]\n,[ROW_ID_ENDERECO]\n,[CPF]\n,[ORIGEM_END]\n,[NETWORKID]\n,[DOCUMENTO_VEEVA]\n,[FLG_MEDICO_AUDIT]\n,[ESPEC_CYCLE_PLAN]\n,[STATUS_MEDICO]\n,[EMAIL_1_1_CONSENT]\n,[EMAIL_MASS_CONSENT]\n,[COMENTARIO]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_painel_medico_comercial.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n        [CICLO_TERRITORIO_CONTATO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_CICLO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_CICLO_ATUAL]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_TERRITORIO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO_DIVISAO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOCUMENTO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BRICK]\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MEDICO]\t\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOC_NAME]\t\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[GRUPOPROMOCIONAL]\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPOCONTATO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COMPLEMENTO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CEP]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[LOGRADOURO]\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[BAIRRO]\t\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[CIDADE]\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[UF]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_1_1]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_MASS]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TELEFONEMEDICO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CELULARMEDICO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ULTALTCONTATO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[UFDOCUMENTO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NUMERODOCUMENTO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_CONTATO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_GRUPOPROMOCIONAL]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_DIVISAO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_ROW_ID_FUNCIONARIO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_DIVISAO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PERSON_UID]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ORIGEM_DADOS]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_CARGA]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PAINEL_STATUS]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BRICK_NOME]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[SITUACAO]\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLG_OFICIAL_GOVERNO]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_02]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_03]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_ENDERECO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CPF]\t\t\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ORIGEM_END]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NETWORKID]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DOCUMENTO_VEEVA]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLG_MEDICO_AUDIT]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPEC_CYCLE_PLAN]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS_MEDICO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_1_1_CONSENT]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_MASS_CONSENT]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COMENTARIO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) as ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_PARCELA_CALCULO_KPI')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "-- ALTER VIEW kpivis.dim_parcela_calculo_kpi\n-- AS\nSELECT\n[CICLO_TERRITORIO]\n,[VP]\n,[VR]\n,[VRE]\n,[TOTAL_TFT]\n,[DIAS_UTEIS]\n,[VISITAS_ABATER]\n,[OBJETIVO_VISITA_DIA]\n,[DIAS_VISITACAO]\n,[VR_CLM]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_parcela_calculo_kpi.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[CICLO_TERRITORIO]\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[VP]\t\t\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[VR]\t\t\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[VRE]\t\t\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOTAL_TFT]\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIAS_UTEIS]\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[VISITAS_ABATER]\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[OBJETIVO_VISITA_DIA]\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIAS_VISITACAO]\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n,[VR_CLM]\t\t\t\tVARCHAR(20) COLLATE Latin1_General_100_BIN2_UTF8\n\n    ) as ROW \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_SALES_FORCE')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "-- ALTER VIEW kpivis.dim_sales_force\n-- AS\nSELECT\n    [SF_ROW_ID_TERRITORIO]\n,[CICLO_TERRITORIO_DIVISAO]\n,concat(SF_ROW_ID_TERRITORIO,TERRITORIO_CICLO) as \"KEY_TERR_CICLO\"\n,[BU]\n,[DIVISAO]\n,[TERRITORIO_CICLO]\n,[CICLO_TERRITORIO]\n,[MATRICULA_GD]\n,[MATRICULA_GR]\n,[TERR]\n,[TERRITORIO_REP]\n,[NOME_GRI/KAM]\n,[NOME_GRI/KAM_COACH]\n,[NOME_GN]\n,[NOME_REP]\n,[ROW_ID_FUNCIONARIO]\n,[TERRITORIO_NOME_REP]\n,[TERRITORIO_GRI/KAM]\n,[TERRITORIO_NOME_GRI/KAM]\n,[TERRITORIO_GN]\n,[TERRITORIO_NOME_GN]\n,[STATUS]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_sales_force.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[SF_ROW_ID_TERRITORIO]          VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO_DIVISAO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BU]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIVISAO]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_CICLO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MATRICULA_GD]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MATRICULA_GR]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERR]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_REP]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GRI/KAM]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GRI/KAM_COACH]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GN]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_REP]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_FUNCIONARIO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_NOME_REP]\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GRI/KAM]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_NOME_GRI/KAM]\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GN]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_NOME_GN]\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_SALES_FORCE_COMERCIAL')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "-- ALTER VIEW kpivis.dim_sales_force_comercial\n-- AS\nSELECT\n    [SF_ROW_ID_TERRITORIO]\n,[CICLO_TERRITORIO_DIVISAO]\n,[BU]\n,[DIVISAO]\n,[TERRITORIO_CICLO]\n,[CICLO_TERRITORIO]\n,[MATRICULA_GD]\n,[MATRICULA_GR]\n,[TERR]\n,[TERRITORIO_REP]\n,[NOME_GRI/KAM]\n,[NOME_GRI/KAM_COACH]\n,[NOME_GN]\n,[NOME_REP]\n,[ROW_ID_FUNCIONARIO]\n,[TERRITORIO_NOME_REP]\n,[TERRITORIO_GRI/KAM]\n,[TERRITORIO_NOME_GRI/KAM]\n,[TERRITORIO_GN]\n,[TERRITORIO_NOME_GN]\n,[STATUS]\n,[SF_CICLO_TERRITORIO_DIVISAO]\n,[SF_CICLO_TERRITORIO]\n,[GN]\n,[GRI/KAM]\n,[REP]\n,[GN_NOME]\n,[GRI/KAM_NOME]\n,[REP_NOME]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_sales_force_comercial.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n        [SF_ROW_ID_TERRITORIO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO_DIVISAO]\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BU]\t\t\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIVISAO]\t\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_CICLO]\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO]\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MATRICULA_GD]\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MATRICULA_GR]\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERR]\t\t\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_REP]\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GRI/KAM]\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GRI/KAM_COACH]\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GN]\t\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_REP]\t\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_FUNCIONARIO]\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_NOME_REP]\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GRI/KAM]\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_NOME_GRI/KAM]\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GN]\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_NOME_GN]\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[STATUS]\t\t\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[SF_CICLO_TERRITORIO_DIVISAO]\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[SF_CICLO_TERRITORIO]\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[GN]\t\t\t\t\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[GRI/KAM]\t\t\t\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[REP]\t\t\t\t\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[GN_NOME]\t\t\t\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[GRI/KAM_NOME]\t\t\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[REP_NOME]\t\t\t\t\t\t\t VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_TFT')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "-- ALTER VIEW kpivis.dim_tft\n-- AS\nSELECT\n[DATA_TERRITORIO]\n,[CICLO_TERRITORIO]\n,CONCAT(TFT_CICLO,'-',TFT_ROW_ID_TERRITORIO) as 'GSO_KEY'\n,[TFT_CICLO]\n,[TFT_CICLO_ATUAL]\n,[TFT_DATA]\n,CAST([DATA] as DATE) as 'DATA'\n,[TFT_TIPO_TERRITORIO]\n,[TFT_TERRITORIO]\n,[TFT_REP_AUSENTE_FLAG]\n,[TFT_AFT_AUSENTE_FLAG]\n,[TFT_GRI_AUSENTE_FLAG]\n,[TFT_FARMA_AUSENTE_FLAG]\n,[TFT_MOTIVO_AUSENCIA]\n,[TFT_AUSENCIA_P1]\n,[TFT_AUSENCIA_P2]\n,[TFT_AUSENCIA_P3]\n,[TFT_AUSENCIA_P4]\n,CAST([TFT_AUSENCIA_TOTAL] as FLOAT) as 'TFT_AUSENCIA_TOTAL'\n,[TFT_ORIGEM]\n,[TFT_ROW_ID_TERRITORIO]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_tft.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n        [DATA_TERRITORIO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_CICLO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_CICLO_ATUAL]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_DATA]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_TIPO_TERRITORIO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_TERRITORIO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_REP_AUSENTE_FLAG]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_AFT_AUSENTE_FLAG]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_GRI_AUSENTE_FLAG]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_FARMA_AUSENTE_FLAG]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_MOTIVO_AUSENCIA]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_AUSENCIA_P1]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_AUSENCIA_P2]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_AUSENCIA_P3]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_AUSENCIA_P4]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_AUSENCIA_TOTAL]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_ORIGEM]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_ROW_ID_TERRITORIO]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_TFT_COACHING')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "-- ALTER VIEW kpivis.dim_tft_coaching\n-- AS\nSELECT\n[CICLO_TERRITORIO]\n,CONCAT(COACH_CICLO,'-',COACH_ROW_ID_TERRITORIO) as 'GSO_KEY'\n,[COACH_ROW_ID_TERRITORIO]\n,[COACH_MUDID]\n,[COACH_CICLO]\n,[COACH_CICLO_ATUAL]\n,[COACH_TERRITORIO_GRI]\n,[TOTAL_COACHING]\n,[TFT_ABATER]\n,[MOTIVO_ABATER]\n,[TOTAL_ABATER]\n,[TFT_NAO_ABATER]\n,[MOTIVO_NAO_ABATER]\n,[TOTAL_NAO_ABATER]\n,[PERC_COACHING]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_tft_coaching.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[CICLO_TERRITORIO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COACH_ROW_ID_TERRITORIO]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COACH_MUDID]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COACH_CICLO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COACH_CICLO_ATUAL]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COACH_TERRITORIO_GRI]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOTAL_COACHING]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_ABATER]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MOTIVO_ABATER]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOTAL_ABATER]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TFT_NAO_ABATER]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MOTIVO_NAO_ABATER]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TOTAL_NAO_ABATER]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PERC_COACHING]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_DIM_VISITAS_REALIZADAS_DETAIL')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "-- ALTER VIEW kpivis.dim_visitas_realizadas_detail\n-- AS\nSELECT\n[VISITA]\n,[COD_PRODUTO]\n,[HORA_DET_VISITA]\n,[PRIORIDADE]\n,Cast([QTD_PRODUTO] as int) as 'QTD_PRODUTO'\n,[PRODUTO]\n,[TIPO_PRODUTO]\n,[COMPANY_PRODUCT_IND]\n,[MOEDA]\n,[DATA_MODIFICACAO]\n,[COD_PAIS]\n,[VEEVA_EXTERNAL_AID]\n,[CLASSE_TERAPEUTICA]\n,[RX_EXTERNAL_ID]\n,[NO_DETAILS_IND]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/dimensao_visitas_realizadas_detail.parquet',\n        FORMAT='PARQUET'\n    ) WITH(\n[VISITA]\t\t        VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COD_PRODUTO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[HORA_DET_VISITA]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PRIORIDADE]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QTD_PRODUTO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[PRODUTO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_PRODUTO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COMPANY_PRODUCT_IND]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MOEDA]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_MODIFICACAO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[COD_PAIS]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VEEVA_EXTERNAL_AID]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CLASSE_TERAPEUTICA]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[RX_EXTERNAL_ID]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NO_DETAILS_IND]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KPI_VIS_CREATE_VIEW_FATO_VISITAS_REALIZADAS')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "KPI VISITACAO"
				},
				"content": {
					"query": "-- ALTER VIEW kpivis.fato_visitas_realizadas\n-- AS\nSELECT\n[VISITA]\n,[CICLO_TERRITORIO_CONTATO]\n,[CICLO_TERRITORIO_DIVISAO]\n,[DATA]\n,[DATA_VISITA]\n,[CICLO_TERRITORIO]\n,[ROW_ID_TERRITORIO]\n,[VISITA_ID]\n,[CICLO]\n,[VR_TIPO]\n,CAST([QTD_VISITA_REALIZADA] as int) as 'QTD_VISITA_REALIZADA'\n,[ORIGEM]\n,[MUDID]\n,[ID_PROPRIETARIO]\n,[POSICAO_PROPRIETARIO]\n,[TODO_CD]\n,[ROW_ID_CONTATO]\n,[TIPO_VISITA]\n,[GP]\n,[FLAG_CLM]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/KPI Visitacao/fato_visitas_realizadas*.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[VISITA]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO_CONTATO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO_TERRITORIO_DIVISAO]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA]\t\t\t\t\t\t\t\tDATE\n,[DATA_VISITA]\t\t\t\t\t\tDATE\n,[CICLO_TERRITORIO]                 VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_TERRITORIO]                VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VISITA_ID]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VR_TIPO]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QTD_VISITA_REALIZADA]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ORIGEM]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MUDID]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ID_PROPRIETARIO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[POSICAO_PROPRIETARIO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TODO_CD]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_CONTATO]\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO_VISITA]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[GP]\t\t\t\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[FLAG_CLM]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SYS_VERIFICAR_COLLATE')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Z_SYSTEM_TOOLS"
				},
				"content": {
					"query": "SELECT\n\tcol.name, col.collation_name\nfrom\n\tsys.columns col\nwhere\n\tobject_id = OBJECT_ID('nome_tabela')\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "GSK",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SYS_VERIFICAR_TIPO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "Z_SYSTEM_TOOLS"
				},
				"content": {
					"query": "select \n\tc.name as 'Column Name',\n\tt.name as 'Data Type',\n\tc.max_length as 'Max Length',\n\tc.precision,\n\tc.scale,\n\tc.is_nullable,\n\tISNULL(i.is_primary_key,0)\tas 'Primary Key'\nfrom \n\tsys.columns c\nINNER JOIN\n\tsys.types t on c.user_type_id = t.user_type_id\nLEFT OUTER JOIN\n\tsys.index_columns ic ON ic.object_id = c.object_id and ic.column_id = c.column_id\nLEFT OUTER JOIN\n\tsys.indexes i ON ic.object_id = i.object_id and ic.index_id = i.index_id\nwhere\n\tc.object_id = OBJECT_ID('kpivis.dim_visitas_realizadas_detail')",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_CREATE_VIEW_DIM_AUDIT_END')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"content": {
					"query": "CREATE VIEW univmed.dim_audit_end\nAS\nSELECT\n    [CRM_UNIV]\n,[MEDICO_UNIV]\n,[ESPECIALIDADE_UNIV]\n,[LOGRADOURO_UNIV]\n,[BAIRRO_UNIV]\n,[CIDADE_UNIV]\n,[CEP_UNIV]\n,[ORIGEM_UNIV]\n,[UF_UNIV]\n,[BRICK_UNIV]\n,[TELEFONE_UNIV]\n,[KEY_CRM_UNIV]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Email & KPI Visitacao/dimensao_audit_end.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n [CRM_UNIV]      VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MEDICO_UNIV]\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE_UNIV]\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[LOGRADOURO_UNIV]\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[BAIRRO_UNIV]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[CIDADE_UNIV]\t\t\tVARCHAR(100) COLLATE Latin1_General_100_BIN2_UTF8\n,[CEP_UNIV]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ORIGEM_UNIV]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[UF_UNIV]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BRICK_UNIV]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TELEFONE_UNIV]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CRM_UNIV]\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n\n-- SELECT collation_name\n-- FROM sys.databases\n-- WHERE database_id = DB_ID()\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "master"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_CREATE_VIEW_DIM_CONSENT_HISTORY')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"content": {
					"query": "-- ALTER VIEW univmed.dim_consent_history\n-- AS\nSELECT\n [KEY_CRM_EMAIL]\n,[CRM_PAINEL]\n,[DATA_VEEVA]\n,[EMAIL_VEEVA]\n,[CONSENT_VEEVA_1_1]\n,[CONSENT_VEEVA_1_MASS]\n,[ROW_ID_CONTATO_VEEVA]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Universo Medico/dimensao_consent_history.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n [KEY_CRM_EMAIL]         VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[CRM_PAINEL]\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_VEEVA]\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_VEEVA]\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CONSENT_VEEVA_1_1]\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CONSENT_VEEVA_1_MASS]\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_CONTATO_VEEVA]\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_CREATE_VIEW_DIM_FORCA_VENDAS')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"content": {
					"query": "-- ALTER VIEW univmed.dim_forca_vendas\n-- as\nSELECT\n[KEY_TERRITORIO_CICLO]\n,[BU]\n,[DIVISAO]\n,[NOME_GD]\n,[NOME_GR]\n,[NOME_REPRESENTANTE]\n,[MUDID]\n,[TERRITORIO]\n,[TERRITORIO_GD]\n,[TERRITORIO_GR]\n,[EMAIL_REP]\n,[CICLO]\n,[ROW_ID_TERRITORIO]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Universo Medico/dimensao_forca_vendas.parquet',\n        FORMAT='PARQUET'\n    ) with (\n[KEY_TERRITORIO_CICLO]     VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[BU]\t\t\t\t\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DIVISAO]\t\t\t\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GD]\t\t\t\t   VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_GR]\t\t\t\t   VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME_REPRESENTANTE]\t   VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[MUDID]\t\t\t\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO]\t\t\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GD]\t\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TERRITORIO_GR]\t\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_REP]\t\t\t   VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO]\t\t\t\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ROW_ID_TERRITORIO]\t   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) as ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_CREATE_VIEW_DIM_PAINEL_MEDICO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"content": {
					"query": "-- ALTER VIEW univmed.dim_painel_medico\n-- AS\nSELECT\n[KEY_TERRITORIO_CICLO]\n,[KEY_TERRITORIO_CONTATO_CICLO]\n,[KEY_CRM]\n,[GRUPOPROMOCIONAL]\n,[QTD_VISITA_PLANEJADA]\n,[QTD_VISITA_REALIZADA]\n,[DATA_CARGA]\n,[TIPO]\n,[TIPOCONTATO]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Universo Medico/dimensao_painel_medico.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[KEY_TERRITORIO_CICLO]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_TERRITORIO_CONTATO_CICLO]\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CRM]\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[GRUPOPROMOCIONAL]\t\t\t\t\tVARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[QTD_VISITA_PLANEJADA]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QTD_VISITA_REALIZADA]\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[DATA_CARGA]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPO]\t\t\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TIPOCONTATO]\t\t\t\t\t\tVARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_CREATE_VIEW_DIM_QUADRANTE_MEDICO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"content": {
					"query": "ALTER VIEW univmed.dim_quadrante_medico\nAS\nSELECT\n[KEY_CRM]\n,[MERCADO_UNIV]\n,[CATEGORIA_UNIV]\n,[QUADRANTE_UNIV]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Universo Medico/dimensao_quadrante_medico_p_*.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[KEY_CRM]           VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MERCADO_UNIV]\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CATEGORIA_UNIV]\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QUADRANTE_UNIV]\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8  \n    ) as ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_CREATE_VIEW_DIM_QUADRANTE_MEDICO_GP')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"content": {
					"query": "-- CREATE VIEW univmed.dim_quadrante_medico_gp\n-- AS\nSELECT\n[KEY_CONTATO_TERRITORIO_CICLO]\n,[MERCADO_GP]\n,[CATEGORIA_GP]\n,[QUADRANTE_GP]\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Universo Medico/dimensao_quadrante_medico_gp_*.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[KEY_CONTATO_TERRITORIO_CICLO]   VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[MERCADO_GP]\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CATEGORIA_GP]\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[QUADRANTE_GP]\t\t\t\t\t VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/UNIV_MEDICO_CREATE_VIEW_FATO_UNIVERSO_MEDICO')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "UNIVERSO MEDICO"
				},
				"content": {
					"query": "--ALTER VIEW univmed.fato_universo_medico\n--AS\nSELECT DISTINCT \n\n    NULLIF (REPLACE(UPPER(TRIM(KEY_CRM)), 'NO INFO.', ''), '') AS KEY_CRM\n    , NULLIF (REPLACE(UPPER(TRIM(CICLO)), 'NO INFO.', ''), '') AS CICLO\n    , NULLIF (REPLACE(UPPER(TRIM(KEY_CRM_EMAIL)), 'NO INFO.', ''), '') AS KEY_CRM_EMAIL\n    , NULLIF (REPLACE(UPPER(TRIM(UF)),'NO INFO.', ''), '') AS UF\n    , NULLIF (REPLACE(UPPER(TRIM(CRM)), 'NO INFO.', ''), '') AS CRM\n    , NULLIF (REPLACE(UPPER(TRIM(CRM2)), 'NO INFO.', ''), '') AS CRM2\n    , NULLIF (REPLACE(UPPER(TRIM(EMAIL_PRINCIPAL)), 'NO INFO.', ''), '') AS EMAIL_PRINCIPAL\n    , NULLIF (REPLACE(UPPER(TRIM(EMAIL_SECUNDARIO)), 'NO INFO.', ''), '') AS EMAIL_SECUNDARIO\n    , NULLIF (REPLACE(UPPER(TRIM(NOME)), 'NO INFO.', ''), '') AS NOME\n    , NULLIF (REPLACE(UPPER(TRIM(ESPECIALIDADE)), 'NO INFO.', ''), '') AS ESPECIALIDADE\n    , NULLIF (REPLACE(UPPER(TRIM(ESPECIALIDADE2)), 'NO INFO.', ''), '') AS ESPECIALIDADE2\n    , NULLIF (REPLACE(UPPER(TRIM(ESPECIALIDADE3)), 'NO INFO.', ''), '') AS ESPECIALIDADE3\n    , ISNULL (NULLIF(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(TRIM(VISITADO)),'NO INFO.',''),'N',''),'M',''),'S','SIM'),'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9',''),''),'NÃO') AS VISITADO\n    , NULLIF (REPLACE(UPPER(TRIM(NETWORK_ID)), 'NO INFO.', ''), '') AS NETWORK_ID\n    , NULLIF (REPLACE(UPPER(TRIM(VEEVA_ID)), 'NO INFO.', ''), '') AS VEEVA_ID\n    , NULLIF (REPLACE(UPPER(TRIM(RX_GIGYA_ID)), 'NO INFO.', ''), '') AS RX_GIGYA_ID\n    , NULLIF (REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(TRIM(TELEFONE)),'Ã','A'),'É','E'),'ROSANACOSENTINO@BOL.COM.BR',''),'ZINABERTELI@YAHOO.COM.BR',''),'AMANDA.REGIO@BOL.COM.BR',''),'REGINABERTELI@GMAIL.COM',''),'CAABRUNO@GMAIL.COM',''),'NAO FORNECE',''),'NAO INFORMA',''),'NO INFO.',''),'CANCELE',''),'CELULAR',''),'THALYTA',''),'ERRADO',''),'MEDICO',''),'NULL',''),'TEL',''),'NA',''),'NI',''),'-',''),' ',''),'(',''),')',''),',',''),'.',''),'.',''),'/',''),':',''),'M',''),'N',''),'+55','')\n        , '') AS TELEFONE\n    , NULLIF (REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(TRIM(CELULAR)),'Ã','A'),'É','E'),'ROSANACOSENTINO@BOL.COM.BR',''),'ZINABERTELI@YAHOO.COM.BR',''),'AMANDA.REGIO@BOL.COM.BR',''),'REGINABERTELI@GMAIL.COM',''),'CAABRUNO@GMAIL.COM',''),'NAO FORNECE',''),'NAO INFORMA',''),'NO INFO.',''),'CANCELE',''),'CELULAR',''),'THALYTA',''),'ERRADO',''),'MEDICO',''),'NULL',''),'TEL',''),'NA',''),'NI',''),'-',''),' ',''),'(',''),')',''),',',''),'.',''),'.',''),'/',''),':',''),'M',''),'N',''),'+55','')\n        , '') AS CELULAR\n    , NULLIF (REPLACE(UPPER(TRIM(EMAIL)), 'NO INFO.', ''), '') AS EMAIL\n    , NULLIF(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(TRIM(EMAIL_ORIGEM)),'NO INFO.',''),'NULL',''),'EEVA EMAIL','VEEVA EMAIL'),'N',''),'S',''),'VV','V'),'UIVERO MEDICO','UNIVERSO MÉDICO'),'') AS EMAIL_ORIGEM\n    , ISNULL (NULLIF(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(TRIM(ONE_MASS)),'NO INFO.',''),'N',''),'M',''),'S','SIM'),'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9',''),''),'NÃO') AS ONE_MASS\n    , ISNULL (NULLIF(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(TRIM(ONE_ONE)),'NO INFO.',''),'N',''),'M',''),'S','SIM'),'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9',''),''),'NÃO') AS ONE_ONE\n    , ISNULL (NULLIF(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(UPPER(TRIM(VISITADO_GSK)),'NO INFO.',''),'N',''),'M',''),'S','SIM'),'0',''),'1',''),'2',''),'3',''),'4',''),'5',''),'6',''),'7',''),'8',''),'9',''),''),'NÃO') AS VISITADO_GSK\n\nFROM\n    OPENROWSET(\n        BULK 'https://gsksynapseaccount.dfs.core.windows.net/gskoutputfiles/Universo Medico/dimensao_universo_medico_*.parquet',\n        FORMAT='PARQUET'\n    ) WITH (\n[KEY_CRM]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CICLO]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[KEY_CRM_EMAIL]\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[UF]\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CRM]\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CRM2]\t\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_PRINCIPAL]\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_SECUNDARIO]\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[NOME]\t\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE]\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE2]\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ESPECIALIDADE3]\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VISITADO]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[NETWORK_ID]\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VEEVA_ID]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[RX_GIGYA_ID]\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[TELEFONE]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[CELULAR]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL]\t\t\t\t  VARCHAR(150) COLLATE Latin1_General_100_BIN2_UTF8\n,[EMAIL_ORIGEM]\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ONE_MASS]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[ONE_ONE]\t\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n,[VISITADO_GSK]\t\t\t  VARCHAR(50) COLLATE Latin1_General_100_BIN2_UTF8\n    ) AS ROW \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "GSK"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Criar Tabelas - KPI EMAIL')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "gsksynapsespark",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 4,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "4",
						"spark.dynamicAllocation.maxExecutors": "4"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/df51b5c6-c171-41ea-9693-6bc7c1c46d28/resourceGroups/actgsk-rg/providers/Microsoft.Synapse/workspaces/gsk-synapse/bigDataPools/gsksynapsespark",
						"name": "gsksynapsespark",
						"type": "Spark",
						"endpoint": "https://gsk-synapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/gsksynapsespark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 10,
						"cores": 8,
						"memory": 56
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"REGION"
									],
									"values": [
										"TOTAL_NUMBER_CALLS_OBSERVED"
									],
									"yLabel": "TOTAL_NUMBER_CALLS_OBSERVED",
									"xLabel": "REGION",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{\"TOTAL_NUMBER_CALLS_OBSERVED\":{\"Direct Emerging Market\":57}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": false
							}
						},
						"source": [
							"%%pyspark\n",
							"df_dim_audit_end = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_audit_end.parquet', format='parquet')\n",
							"df_dim_audit_end.createOrReplaceTempView(\"dim_audit_end\")\n",
							"\n",
							"df_dim_coaching = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_coaching.parquet', format='parquet')\n",
							"df_dim_coaching.createOrReplaceTempView(\"dim_coaching\")\n",
							"\n",
							"df_dim_forca_vendas = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_forca_vendas.parquet', format='parquet')\n",
							"df_dim_forca_vendas.createOrReplaceTempView(\"dim_forca_vendas\")\n",
							"\n",
							"df_dim_historico_zonas = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_historico_zonas.parquet', format='parquet')\n",
							"df_dim_historico_zonas.createOrReplaceTempView(\"dim_historico_zonas\")\n",
							"\n",
							"df_dim_kpi_territorio = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_kpi_territorio.parquet', format='parquet')\n",
							"df_dim_kpi_territorio.createOrReplaceTempView(\"dim_kpi_territorio\")\n",
							"\n",
							"df_dim_msl_division = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_msl_division.parquet', format='parquet')\n",
							"df_dim_msl_division.createOrReplaceTempView(\"dim_msl_division\")\n",
							"\n",
							"df_dim_painel_medico = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_painel_medico_*.parquet', format='parquet')\n",
							"df_dim_painel_medico.createOrReplaceTempView(\"dim_painel_medico\")\n",
							"\n",
							"df_dim_quadrante_medico_gp = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_quadrante_medico_gp_*.parquet', format='parquet')\n",
							"df_dim_quadrante_medico_gp.createOrReplaceTempView(\"dim_quadrante_medico_gp\")\n",
							"\n",
							"df_dim_quadrante_medico = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_quadrante_medico_p_*.parquet', format='parquet')\n",
							"df_dim_quadrante_medico.createOrReplaceTempView(\"dim_quadrante_medico\")\n",
							"\n",
							"df_dim_target_sro = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/dimensao_target_sro.parquet', format='parquet')\n",
							"df_dim_target_sro.createOrReplaceTempView(\"dim_target_sro\")\n",
							"\n",
							"df_fato_interacoes = spark.read.option(\"encoding\", \"utf8\").load('abfss://gskoutputfiles@gsksynapseaccount.dfs.core.windows.net/Email & KPI Visitacao/fato_interacoes_*.parquet', format='parquet')\n",
							"df_fato_interacoes.createOrReplaceTempView(\"fato_interacoes\")"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [
										"CICLO"
									],
									"values": [
										"CICLO"
									],
									"yLabel": "CICLO",
									"xLabel": "CICLO",
									"aggregation": "COUNT",
									"aggByBackend": false
								},
								"aggData": "{\"CICLO\":{\"202007\":10}}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"SELECT \n",
							"*\n",
							"FROM\n",
							"    kpiemail_fato_interacoes\n",
							"limit 10"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_audit_end USING PARQUET\n",
							"    AS SELECT * FROM dim_audit_end\n",
							"     "
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_coaching USING PARQUET\n",
							"    AS SELECT * FROM dim_coaching\n",
							"\n",
							""
						],
						"outputs": [],
						"execution_count": 5
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_forca_vendas USING PARQUET\n",
							"    AS SELECT * FROM dim_forca_vendas"
						],
						"outputs": [],
						"execution_count": 6
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_historico_zonas USING PARQUET\n",
							"    AS SELECT * FROM dim_historico_zonas"
						],
						"outputs": [],
						"execution_count": 7
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_kpi_territorio USING PARQUET\n",
							"    AS SELECT * FROM dim_kpi_territorio"
						],
						"outputs": [],
						"execution_count": 8
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_msl_division USING PARQUET\n",
							"    AS SELECT * FROM dim_msl_division"
						],
						"outputs": [],
						"execution_count": 9
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_painel_medico USING PARQUET\n",
							"    AS SELECT * FROM dim_painel_medico"
						],
						"outputs": [],
						"execution_count": 10
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_quadrante_medico_gp USING PARQUET\n",
							"    AS SELECT * FROM dim_quadrante_medico_gp"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_quadrante_medico USING PARQUET\n",
							"    AS SELECT * FROM dim_quadrante_medico"
						],
						"outputs": [],
						"execution_count": 12
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_dim_target_sro USING PARQUET\n",
							"    AS SELECT * FROM dim_target_sro "
						],
						"outputs": [],
						"execution_count": 13
					},
					{
						"cell_type": "code",
						"metadata": {
							"diagram": {
								"activateDiagramType": 1,
								"chartConfig": {
									"category": "bar",
									"keys": [],
									"values": [],
									"yLabel": "",
									"xLabel": "",
									"aggregation": "SUM",
									"aggByBackend": false
								},
								"aggData": "{}",
								"isSummary": false,
								"previewData": {
									"filter": null
								},
								"isSql": true
							}
						},
						"source": [
							"%%sql\n",
							"CREATE TABLE kpiemail_fato_interacoes USING PARQUET\n",
							"    AS SELECT * FROM fato_interacoes"
						],
						"outputs": [],
						"execution_count": 14
					},
					{
						"cell_type": "code",
						"source": [],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 4')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "gsksynapsespark",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2"
					}
				},
				"metadata": {
					"saveOutput": true,
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/df51b5c6-c171-41ea-9693-6bc7c1c46d28/resourceGroups/actgsk-rg/providers/Microsoft.Synapse/workspaces/gsk-synapse/bigDataPools/gsksynapsespark",
						"name": "gsksynapsespark",
						"type": "Spark",
						"endpoint": "https://gsk-synapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/gsksynapsespark",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					}
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"%%pyspark\n",
							"df = spark.sql(\"SELECT * FROM default.gco_table_teste\")\n",
							"# df.show(10)"
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		}
	]
}